{"version":3,"file":"ims-ui-kit.modern.mjs","sources":["../src/components/Buttons/ButtonBase.jsx","../src/components/Cards/CardBase.jsx","../src/components/Cards/CardBodyBase.jsx","../src/components/Cards/CardFooterBase.jsx","../src/components/Cards/CardHeaderBase.jsx","../src/components/Dropdowns/DropdownBase.jsx","../src/components/Dropdowns/DropdownItemBase.jsx","../src/components/Table/ImsSimpleTable.jsx","../src/components/Table/AdvancedTable/FilterAndSearch.jsx","../src/components/Table/AdvancedTable/useDebounce.js","../src/components/Table/AdvancedTable/usePagination.js","../src/components/Table/AdvancedTable/Pagination.jsx","../src/components/Table/AdvancedTable/Index.jsx","../src/components/TextEditor/elementTypes.js","../src/components/TextEditor/entities/entityNames.js","../src/components/TextEditor/entities/Mentions/Suggestions/Entry.jsx","../src/components/TextEditor/entities/Mentions/Suggestions/Index.jsx","../src/components/TextEditor/entities/utils/findWithRegex.js","../src/components/TextEditor/entities/Mentions/mentionStrategy.js","../src/components/TextEditor/entities/HttpsLink/stategy.js","../src/components/TextEditor/useTextEditor.js","../src/components/TextEditor/entities/Mentions/index.js","../src/components/TextEditor/entities/Mentions/Mention.jsx","../src/components/TextEditor/entities/HttpsLink/index.js","../src/components/TextEditor/entities/HttpsLink/HTTPSLink.jsx","../src/components/TextEditor/entities/Link.jsx","../src/components/TextEditor/Context.jsx","../src/components/TextEditor/entities/Image.jsx","../src/components/TextEditor/entities/Divider.jsx","../src/components/TextEditor/entities/CheckListItem.jsx","../src/components/TextEditor/entities/ResizeTool/StretchBar.jsx","../src/components/TextEditor/entities/ResizeTool/Aligner.jsx","../src/components/TextEditor/entities/ResizeTool/Index.jsx","../src/components/TextEditor/entities/Media.jsx","../src/components/TextEditor/entities/editorMediaBlockRenderer.js","../src/components/TextEditor/entities/usePreRenderProcessing.js","../src/components/TextEditor/TextEditor.jsx","../src/components/TextEditor/toolTypes.js","../src/components/TextEditor/ButtonSeparator.jsx","../src/components/TextEditor/FilePicker.jsx","../src/components/TextEditor/Toolbar.jsx","../src/components/TextEditor/WrappedEditor.jsx","../src/components/TextEditor/Index.jsx","../src/components/Dropdowns/DropdownMenuBase.jsx","../src/components/Dropdowns/DropdownToggleBase.jsx","../src/components/List/ListBase.jsx","../src/components/List/ListGroupItemBase.jsx","../src/components/List/ListGroupItemHeadingBase.jsx","../src/components/List/ListGroupItemTextBase.jsx","../src/components/List/ListInlineItemBase.jsx","../src/components/Nav/NavbarBase.jsx","../src/components/Nav/NavbarBrandBase.jsx","../src/components/Nav/NavbarTextBase.jsx","../src/components/Nav/NavbarTogglerBase.jsx","../src/components/Nav/NavBase.jsx","../src/components/Nav/NavItemBase.jsx","../src/components/Nav/NavLinkBase.jsx","../src/components/Pagination/PaginationBase.jsx","../src/components/Pagination/PaginationItemBase.jsx","../src/components/Pagination/PaginationLinkBase.jsx","../src/components/TabPane/TabContentBase.jsx","../src/components/TabPane/TabPaneBase.jsx","../src/components/Alert/UncontrolledAlertBase.jsx","../src/components/Alert/AlertBase.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet ButtonBaseProps = Object.assign(\n  {\n    leftIcon: \"\",\n    rightIcon: \"\",\n  },\n  Button.prototype.props\n);\n\n/**\n *\n * @param {ButtonBaseProps} props\n * @returns\n */\nconst ButtonBase = (props) => {\n  return (\n    <Button {...props}>\n      {props.leftIcon ? (\n        <i className={classNames(props.leftIcon, \"me-2\")} />\n      ) : null}\n      {props.children}\n      {props.rightIcon ? (\n        <i className={classNames(props.rightIcon, \"ms-2\")} />\n      ) : null}\n    </Button>\n  );\n};\n\nButtonBase.propTypes = {\n  leftIcon: PropTypes.string,\n  rightIcon: PropTypes.string,\n  ...(Button.propTypes && Button.propTypes),\n};\n\nexport default ButtonBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBaseProps = Object.assign({}, Card.prototype.props);\n\n/**\n *\n * @param {CardBaseProps} props\n * @returns\n */\nconst CardBase = (props) => {\n  return <Card {...props}>{props.children}</Card>;\n};\n\nCardBase.propTypes = {\n  ...(Card.propTypes && Card.propTypes),\n};\n\nexport default CardBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardBody } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBodyBaseProps = Object.assign({}, CardBody.prototype.props);\n\n/**\n *\n * @param {CardBodyBaseProps} props\n * @returns\n */\nconst CardBodyBase = (props) => {\n  return <CardBody {...props}>{props.children}</CardBody>;\n};\n\nCardBodyBase.propTypes = {\n  ...(CardBody.propTypes && CardBody.propTypes),\n};\n\nexport default CardBodyBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardFooter } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardFooterBaseProps = Object.assign({}, CardFooter.prototype.props);\n\n/**\n *\n * @param {CardFooterBaseProps} props\n * @returns\n */\nconst CardFooterBase = (props) => {\n  return <CardFooter {...props}>{props.children}</CardFooter>;\n};\n\nCardFooterBase.propTypes = {\n  ...(CardFooter.propTypes && CardFooter.propTypes),\n};\n\nexport default CardFooterBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardHeader } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardHeaderBaseProps = Object.assign({}, CardHeader.prototype.props);\n\n/**\n *\n * @param {CardHeaderBaseProps} props\n * @returns\n */\nconst CardHeaderBase = (props) => {\n  return <CardHeader {...props}>{props.children}</CardHeader>;\n};\n\nCardHeaderBase.propTypes = {\n  ...(CardHeader.propTypes && CardHeader.propTypes),\n};\n\nexport default CardHeaderBase;\n","import React from \"react\";\nimport { Dropdown } from \"reactstrap\";\nlet DropdownBaseProps = Object.assign({}, Dropdown.prototype.props);\n\n/**\n *\n * @param {DropdownBaseProps} props\n * @returns\n */\nconst DropdownBase = ({ ...props }) => {\n  return <Dropdown {...props}>{props.children}</Dropdown>;\n};\n\nDropdownBase.propTypes = {\n  ...(Dropdown.propTypes && Dropdown.propTypes),\n};\nexport default DropdownBase;\n","import React from \"react\";\nimport { DropdownItem } from \"reactstrap\";\nlet DropdownItemBaseProps = Object.assign({}, DropdownItem.prototype.props);\n\n/**\n *\n * @param {DropdownItemBaseProps} props\n * @returns\n */\nconst DropdownItemBase = ({\n  leftIcon = \"\",\n  rightIcon = \"\",\n  leftIconStyle = \"text-secondary\",\n  rightIconStyle = \"text-secondary\",\n  ...props\n}) => {\n  return (\n    <DropdownItem {...props} className=\"d-flex justify-content-between align-items-center\">\n      <span>\n        {leftIcon && <i className={`${leftIcon} ${leftIconStyle} me-2`} />}\n        {props.children}\n      </span>\n      {rightIcon && <i className={`${rightIcon} ${rightIconStyle}`} />}\n    </DropdownItem>\n  );\n};\n\nDropdownItemBase.propTypes = {\n  ...(DropdownItem.propTypes && DropdownItem.propTypes),\n};\n\nexport default DropdownItemBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Table } from \"reactstrap\";\n\nconst ImsSimpleTable = (props) => {\n  return (\n    <Table striped hover>\n      <thead>\n        <tr>\n          {props.thead.map((prop, key) => {\n            return (\n              <th\n                className={classnames(\"\", {\n                  \"text-right\": props.thead.length - 1 === key,\n                })}\n                key={key}\n              >\n                {prop.text}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {props.tbody.map((prop, key) => {\n          return (\n            <tr\n              className={classnames({\n                [prop.className]: prop.className !== undefined,\n              })}\n              key={key}\n            >\n              {prop.data.map((data, k) => {\n                return (\n                  <td\n                    className={classnames({\n                      [data.className]: data.className !== undefined,\n                    })}\n                    key={k}\n                  >\n                    {data.item}\n                  </td>\n                );\n              })}\n              {prop.actions && <td className=\"text-right\">{prop.actions}</td>}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nImsSimpleTable.propTypes = {\n  thead: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  tbody: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          className: PropTypes.string,\n          item: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.node,\n          ]).isRequired,\n        })\n      ).isRequired,\n      actions: PropTypes.node,\n    })\n  ).isRequired,\n};\n\nexport default ImsSimpleTable;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n} from \"reactstrap\";\nimport useDebounce from \"./useDebounce\";\n\nconst FilterAndSearch = ({\n  onFilter = () => {},\n  onSearch = () => {},\n  filters = [],\n}) => {\n  let [searchString, setSearchString] = React.useState(\"\");\n  const debouncedSearchString = useDebounce(searchString, 500);\n  React.useEffect(() => {\n    onSearch({ value: { clientSearch: debouncedSearchString } });\n  }, [debouncedSearchString]);\n  return (\n    <Row>\n      <Col md=\"3\">\n        <Select\n          className=\"react-select default m-0 w-100\"\n          classNamePrefix=\"react-select\"\n          name=\"singleSelect\"\n          onChange={(value) => {\n            onFilter(value);\n          }}\n          defaultValue={filters.find((item) => item.default)}\n          options={filters}\n          placeholder={\"Select filter\"}\n        />\n      </Col>\n      <Col md=\"6\">\n        <InputGroup>\n          <Input\n            onChange={(e) => setSearchString(e.currentTarget.value.toString())}\n            placeholder=\"Search item\"\n          />\n          {/* <InputGroupAddon addonType=\"append\">\n            <Button\n              type=\"button\"\n              className=\"btn-simple text-info m-0 p-2\"\n              onClick={(e) =>\n                onSearch({ value: { clientSearch: searchString } })\n              }\n            >\n              <i className=\"tim-icons icon-zoom-split \" />\n            </Button>\n          </InputGroupAddon> */}\n        </InputGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport default FilterAndSearch;\n","import { useState, useEffect } from \"react\";\nfunction useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}\nexport default useDebounce;\n","import { useMemo } from 'react';\n\nexport const DOTS = '...';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n    const totalPageNumbers = siblingCount + 5;\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n      return [...leftRange, DOTS, totalPageCount];\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import React from \"react\";\nimport { usePagination, DOTS } from \"./usePagination\";\n\nconst Pagination = (props) => {\n  const {\n    onPageChange = () => {},\n    totalCount = 0,\n    siblingCount = 1,\n    currentPage = 1,\n    pageSize = 10,\n  } = props;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange && onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange && onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n  return (\n    <>\n      <nav aria-label=\"Page navigation\">\n        <ul className=\"pagination\">\n          <li key=\"first-button\" className=\"page-item\">\n            <button\n              onClick={onPrevious}\n              className=\"page-link\"\n              aria-label=\"Next\"\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span className=\"sr-only\">Previous</span>\n            </button>\n          </li>\n          {paginationRange.map((pageNumber, i) => {\n            if (pageNumber === DOTS)\n              return (\n                <li key={DOTS + i} className=\"pagination-item dots\">\n                  &#8230;\n                </li>\n              );\n            return (\n              <li\n                key={pageNumber}\n                className={`page-item ${\n                  currentPage === pageNumber && ` active`\n                }`}\n              >\n                <button\n                  className=\"page-link\"\n                  onClick={() => onPageChange(pageNumber)}\n                >\n                  {pageNumber}\n                </button>\n              </li>\n            );\n          })}\n          <li key=\"next-button\" className=\"page-item\">\n            <button\n              disabled={currentPage === lastPage}\n              className=\"page-link\"\n              onClick={onNext}\n              aria-label=\"Next\"\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span className=\"sr-only\">Next</span>\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default Pagination;\n","/*eslint-disable*/\nimport classnames from \"classnames\";\nimport React from \"react\";\nimport {\n  useExpanded,\n  useFlexLayout,\n  usePagination,\n  useResizeColumns,\n  useSortBy,\n  useTable,\n  useBlockLayout,\n} from \"react-table\";\nimport FilterAndSearch from \"./FilterAndSearch\";\nimport Pagination from \"./Pagination\";\nfunction Table({\n  columns,\n  data,\n  renderRowSubComponent,\n  className = \"-highlight -striped \",\n  handleSearch = () => {},\n  handleFilter = () => {},\n  handlePagination = () => {},\n  filters = [],\n  pagination = {\n    currentPage: 1,\n    hasNextPage: true,\n    hasPrevPage: false,\n    nextPage: 2,\n    prevPage: null,\n    size: 10,\n    totalPages: 2,\n    totalResults: 17,\n  },\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state: { expanded },\n    visibleColumns,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageSize: 10, pageIndex: 0 },\n    },\n    useSortBy,\n    useExpanded,\n    usePagination,\n    useResizeColumns,\n    // useBlockLayout,\n    useFlexLayout\n  );\n  return (\n    <>\n      <div className={\"ReactTable \" + className}>\n        <div className=\"pagination-top\">\n          <FilterAndSearch\n            filters={filters}\n            onFilter={(filter) => handleFilter(filter)}\n            onSearch={(search) => handleSearch(search)}\n          />\n        </div>\n        <table {...getTableProps()} className=\"rt-table\">\n          <thead className=\"rt-thead -header\">\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n                {headerGroup.headers.map((column, key) => (\n                  <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    className={classnames(\"rt-th rt-resizable-header\", {\n                      \"-cursor-pointer\": headerGroup.headers.length - 1 !== key,\n                      \"-sort-asc\": column.isSorted && !column.isSortedDesc,\n                      \"-sort-desc\": column.isSorted && column.isSortedDesc,\n                    })}\n                  >\n                    <div className=\"rt-resizable-header-content\">\n                      {column.render(\"Header\")}\n                      <div\n                        {...column.getResizerProps()}\n                        className={classnames(\"col-resizer\", {\n                          \" active\": column.isResizing,\n                        })}\n                      />\n                    </div>\n                    <div>\n                      {headerGroup.headers.length - 1 === key\n                        ? null\n                        : column.canFilter\n                        ? column.render(\"Filter\")\n                        : null}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"rt-tbody\">\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <React.Fragment key={row.getRowProps()?.key}>\n                  <tr\n                    {...row.getRowProps()}\n                    className={classnames(\n                      \"rt-tr\",\n                      { \" -odd\": i % 2 === 0 },\n                      { \" -even\": i % 2 === 1 }\n                    )}\n                  >\n                    {row.cells.map((cell) => {\n                      return (\n                        <td {...cell.getCellProps()} className=\"rt-td\">\n                          {cell.render(\"Cell\")}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                  {row.isExpanded ? (\n                    <tr>\n                      <td colSpan={visibleColumns.length}>\n                        {renderRowSubComponent &&\n                          renderRowSubComponent({ row })}\n                      </td>\n                    </tr>\n                  ) : null}\n                </React.Fragment>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"pagination-bottom\">\n          <div className=\"-pagination\">\n            <div className=\"-center flex-nowrap\">\n              <Pagination\n                className=\"pagination-bar\"\n                pagination={pagination}\n                currentPage={pagination.currentPage}\n                totalCount={pagination.totalResults}\n                pageSize={pagination.size}\n                onPageChange={(page) => {\n                  handlePagination({ page });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Table;\n","export const ELEMENT_TYPES = {\n  INLINE_DEFAULT: \"inline-default\",\n  BLOCK_DEFAULT: \"block-default\",\n  ATOMIC_ENTITY: \"atomic-entity\",\n};\n","export const ENTITY_NAME = {\n  IMAGE: \"image\",\n  DIVIDER: \"divider\",\n  LINK: \"link\",\n  MENTION: \"mention\",\n  CHECKLIST: \"checklist\",\n  ALIGN_LEFT: \"start\",\n  ALIGN_CENTER: \"center\",\n  ALIGN_RIGHT: \"end\",\n};\n","import { useCallback } from \"react\";\nimport defaultAvatar from \"assets/img/default-avatar.png\";\nexport default function Entry({\n  name,\n  profileImageUrl,\n  _id,\n  onSelect = () => {},\n}) {\n  let handleSelect = useCallback((e) => {\n    e.preventDefault();\n    onSelect({ name, profileImageUrl, _id });\n  });\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div className=\"avatar mb-1\">\n        <img src={profileImageUrl || defaultAvatar} alt={name} />\n      </div>\n      <div onClick={handleSelect} className=\"btn btn-link p-2 mb-1\">\n        {name}\n      </div>\n    </div>\n  );\n}\n","import { TextEditorContext } from \"../../../Context\";\nimport { useContext } from \"react\";\nimport Entry from \"./Entry\";\nexport default function MentionSuggestions({ suggestions, ...rest }) {\n  let { computedPosForMentionSuggestions } = useContext(TextEditorContext);\n  return (\n    <>\n      {suggestions.length ? (\n        <div\n          className=\"mention-suggestions position-absolute mt-4 p-2 shadow-md\"\n          style={{ ...computedPosForMentionSuggestions }}\n        >\n          {suggestions.map((suggestion, index) => {\n            return (\n              <Entry key={suggestion.name + index} {...suggestion} {...rest} />\n            );\n          })}\n        </div>\n      ) : null}\n    </>\n  );\n}\n","export function findWithRegex(regex, contentBlock, callback) {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX = /\\B@\\w+/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function mentionStrategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX =\n  /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function strategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  EditorState,\n  RichUtils,\n  AtomicBlockUtils,\n  convertToRaw,\n  convertFromRaw,\n  ContentState,\n  CompositeDecorator,\n  Modifier,\n  SelectionState,\n} from \"draft-js\";\nimport { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\nimport { mentionDecorator } from \"./entities/Mentions\";\nimport { httpsLinkDecorator } from \"./entities/HttpsLink\";\nimport { textLinkDecorator, handleCreateLink } from \"./entities/Link\";\nconst compositeDecorator = new CompositeDecorator([\n  mentionDecorator,\n  httpsLinkDecorator,\n  textLinkDecorator,\n]);\nexport default function useTextEditor(config) {\n  const editorRef = useRef(null);\n  const [editorState, setEditorState] = useState(\n    EditorState.createEmpty(compositeDecorator)\n  );\n  const [focusedForEditing, setFocusedForEditing] = useState(false);\n  const [\n    computedPosForMentionSuggestions,\n    setComputedPosForMentionSuggestions,\n  ] = useState({ display: \"none\" });\n  const updateComputedPosForMentionSuggestions = (position) =>\n    setComputedPosForMentionSuggestions(position);\n  /**\n   * the following effect block handles if the component is being\n   * controlled by outside values.\n   */\n  const activateEditor = () => setFocusedForEditing(true);\n  const deactivateEditor = () => setFocusedForEditing(false);\n  useEffect(() => {\n    let currentContent;\n    try {\n      if (typeof config.value === \"string\") {\n        currentContent = JSON.parse(config.value);\n      }\n      if (typeof config.value === \"object\") {\n        currentContent = config.value;\n      }\n    } catch (err) {\n      console.log(err);\n      /**\n       * here we are handling if the content parsing failes because if preexisting\n       * plain text, we are converting that into a draft data structure for future\n       * this is usefull for handling legacy data or automatic migration to draft data\n       * structure\n       */\n      if (typeof config.value === \"string\")\n        return handleEditorStateChange(\n          EditorState.createWithContent(\n            ContentState.createFromText(config.value)\n          )\n        );\n    }\n    if (config.value || currentContent) {\n      // EditorState.set(editorState, {\n      //   currentContent: convertFromRaw(currentContent),\n      //   /**\n      //    * following solution is implemented to get the direction map for the editor\n      //    * with current content. Draftjs has got an issue with direction map.\n      //    * see issue : https://github.com/facebook/draft-js/issues/1820\n      //    */\n      //   directionMap: EditorState.createWithContent(\n      //     convertFromRaw(currentContent)\n      //   ).getDirectionMap(),\n      // })\n      return handleEditorStateChange(\n        EditorState.push(\n          editorState,\n          convertFromRaw(currentContent),\n          \"change-block-data\"\n        )\n      );\n    }\n    return handleEditorStateChange(EditorState.createEmpty(compositeDecorator));\n  }, []);\n  const fileInput = useRef(null);\n  const _openFilePrompt = () => fileInput.current.click();\n  const _createAtomicBlockEntity = (command, data) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      command,\n      \"IMMUTABLE\",\n      { ...data }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(\n      editorState,\n      { currentContent: contentStateWithEntity },\n      \"create-entity\"\n    );\n    handleEditorStateChange(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n  };\n  /**\n   * this function allows this component user to define own link generator.\n   * usefull if someone wants to preprocess a file through a backend before\n   * using as am image src or achor href\n   * @param {*} metaData\n   * @returns {Promise}\n   */\n  const generateLink = async (metaData) => {\n    if (!config.linkGeneratorFn || typeof config.linkGeneratorFn !== \"function\")\n      return null;\n    return config.linkGeneratorFn(metaData);\n  };\n  /**\n   * this function updates editors state for the current instance of the component\n   * @param {EditorState} editorState\n   */\n  const handleEditorStateChange = (editorState) => {\n    const contentState = editorState.getCurrentContent();\n    setEditorState(editorState);\n    // console.log(JSON.stringify(convertToRaw(contentState)));\n    config.onDataStructureChange(JSON.stringify(convertToRaw(contentState)));\n  };\n  const handleKeyCommand = (command, editorState) => {\n    let newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleEditorStateChange(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n  const _handleFiles = async (files) => {\n    if (!config.handleUpload)\n      return console.log(\"Uploader function not specified\");\n    let areImages = files.every((file) => file.type.split(\"/\")[0] === \"image\");\n    /** todo: check file size here */\n    if (!areImages) return console.log(\"All files has to be images\");\n    try {\n      let storageInformations = await Promise.all(\n        files.map((file) => config.handleUpload(file))\n      );\n      console.log(storageInformations);\n      if (!storageInformations.every((storageInfo) => storageInfo))\n        console.log(\"one or mutiple files don't have storage info\");\n      storageInformations.map((storageInfo) =>\n        _createAtomicBlockEntity(ENTITY_NAME.IMAGE, {\n          storageInfo,\n        })\n      );\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  const _handleFileInputChange = (e) => {\n    e.preventDefault();\n    let files = e.target.files;\n    _handleFiles(Array.from(files));\n  };\n  const getFileInputProps = () => ({\n    ref: fileInput,\n    onChange: _handleFileInputChange,\n  });\n  const _atomicEntityController = {\n    [ENTITY_NAME.IMAGE]: _openFilePrompt,\n    [ENTITY_NAME.LINK]: () =>\n      handleEditorStateChange(handleCreateLink(editorState)),\n    [ENTITY_NAME.DIVIDER]: () =>\n      _createAtomicBlockEntity(ENTITY_NAME.DIVIDER, {}),\n    [ENTITY_NAME.MENTION]: () => {},\n    [ENTITY_NAME.CHECKLIST]: () => {\n      _createAtomicBlockEntity(ENTITY_NAME.CHECKLIST, {});\n    },\n  };\n  const _buttonHandlers = {\n    [ELEMENT_TYPES.INLINE_DEFAULT]: (command) =>\n      handleEditorStateChange(\n        RichUtils.toggleInlineStyle(editorState, command)\n      ),\n    [ELEMENT_TYPES.BLOCK_DEFAULT]: (command) =>\n      handleEditorStateChange(RichUtils.toggleBlockType(editorState, command)),\n    [ELEMENT_TYPES.ATOMIC_ENTITY]: (command) => {\n      _atomicEntityController[command]();\n    },\n  };\n  const handleToolClick = (tool, e) => {\n    e.preventDefault();\n    if (!editorState.getSelection().getHasFocus()) return null;\n    if (!tool?.element) return null;\n    _buttonHandlers[tool.element](tool.style);\n  };\n  const handleDroppedFiles = (selection, files) => _handleFiles(files);\n  const handlePastedFiles = (files) => _handleFiles(files);\n  const handleMentionSelect = (\n    contentState,\n    blockKey,\n    position,\n    mentionData\n  ) => {\n    let selectionState = SelectionState.createEmpty(blockKey);\n    let newContentState = contentState.createEntity(\n      ENTITY_NAME.MENTION,\n      \"IMMUTABLE\",\n      {\n        ...mentionData,\n      }\n    );\n    let entityKey = newContentState.getLastCreatedEntityKey();\n    newContentState = Modifier.replaceText(\n      contentState,\n      selectionState.merge({\n        // The starting position of the range to be replaced.\n        anchorOffset: position.start,\n        // The end position of the range to be replaced.\n        focusOffset: position.end,\n      }),\n      mentionData.mention,\n      editorState.getCurrentInlineStyle(),\n      entityKey\n    );\n    handleEditorStateChange(\n      /**\n       * in following solution we had to use moveFocusToEnd() and the force the\n       * selecion back to replaced text from  new content through forceSelection().\n       * This creates an effect that the cursor is at the end of mentioend name.\n       * Draftjs has got an issue with cursor positioning with entity and modifier.\n       * see issue : https://github.com/facebook/draft-js/issues/627\n       *\n       * otherwise expected behaviour is to only do an EditorState.set() to put the\n       * mentioned entity in the editor in the identified selection state starting with @.\n       */\n      EditorState.forceSelection(\n        EditorState.moveFocusToEnd(\n          EditorState.set(editorState, { currentContent: newContentState })\n        ),\n        newContentState.getSelectionAfter()\n      )\n    );\n  };\n  const forceFocusEditorEnd = (e) => {\n    e?.preventDefault && e.preventDefault();\n    editorRef.current.editor?.focus();\n    handleEditorStateChange(EditorState.moveFocusToEnd(editorState));\n  };\n  const isToolActive = (tool) => {\n    return (\n      editorState.getCurrentInlineStyle().has(tool?.style) ||\n      editorState\n        ?.getCurrentContent()\n        .getBlockForKey(editorState?.getSelection().getStartKey())\n        .getType() === tool?.style\n    );\n  };\n  return {\n    editorRef,\n    editorState,\n    computedPosForMentionSuggestions,\n    focusedForEditing,\n    getFileInputProps,\n    generateLink,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleEditorStateChange,\n    handleKeyCommand,\n    handleToolClick,\n    forceFocusEditorEnd,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n    activateEditor,\n    deactivateEditor,\n    isToolActive,\n  };\n}\n","import Mention from \"./Mention\"\nimport { mentionStrategy } from \"./mentionStrategy\"\nexport const mentionDecorator = {\n  strategy: mentionStrategy,\n  component: Mention,\n}","import { useEffect, useContext, useCallback, useRef } from \"react\";\nimport { TextEditorContext } from \"../../Context\";\nimport MentionSuggestions from \"./Suggestions/Index\";\nexport default function Mention(props) {\n  let mentionInputRef = useRef(null);\n  let {\n    editorRef,\n    mentionSuggestions,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n  } = useContext(TextEditorContext);\n  const computeStylePos = useCallback(() => {\n    const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n    let leftSpace =\n      editorRect.width - mentionInputRef.current.offsetLeft < 240\n        ? mentionInputRef.current.offsetLeft - 230\n        : mentionInputRef.current.offsetLeft;\n    return {\n      left: leftSpace,\n      top: mentionInputRef.current.offsetTop,\n      display: \"block\",\n    };\n  }, []);\n  const hideSuggestions = useCallback(() => {\n    return {\n      display: \"none\",\n    };\n  }, []);\n  useEffect(() => {\n    if (mentionInputRef.current)\n      updateComputedPosForMentionSuggestions(computeStylePos());\n  }, []);\n  function retriveEntityData() {\n    if (!props.entityKey) return null;\n    const entity = props.contentState.getEntity(props.entityKey);\n    return { ...entity?.getData() };\n  }\n  return (\n    <>\n      {retriveEntityData() ? (\n        <a\n          href={\"/admin/users/\" + retriveEntityData()._id}\n          className=\"text-primary\"\n        >\n          {retriveEntityData().name}\n        </a>\n      ) : (\n        <span ref={mentionInputRef} className=\"\">\n          {props.children}\n        </span>\n      )}\n      <MentionSuggestions\n        suggestions={mentionSuggestions.filter((item) =>\n          item.name\n            .toLowerCase()\n            .includes(\n              props.decoratedText\n                .slice(1, props?.decoratedText?.length)\n                .toLowerCase()\n            )\n        )}\n        onSelect={({ name, profileImageUrl, _id }) => {\n          let userName = \"@\" + name.split(\" \").join(\"_\");\n          handleMentionSelect(\n            props.contentState,\n            props.blockKey,\n            { start: props.start, end: props.end },\n            { mention: userName + \" \", profileImageUrl, _id, name } // adding a trailing whitespace to create a smooth experience\n          );\n          updateComputedPosForMentionSuggestions(hideSuggestions());\n        }}\n      />\n    </>\n  );\n}\n","import HTTPSLink from \"./HTTPSLink\";\nimport { strategy } from \"./stategy\";\nexport const httpsLinkDecorator = {\n  strategy,\n  component: HTTPSLink,\n};\n","export default function HTTPSLink(props) {\n  return (\n    <a\n      href={props.decoratedText}\n      title={props.decoratedText}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {props.children}\n    </a>\n  );\n}\n","/**\n * TODO: following piece of codes are unstable and buggy need to \n * work on these before integration.\n */\nimport {\n  CompositeDecorator,\n  EditorState,\n  Modifier,\n} from \"draft-js\";\nimport { ENTITY_NAME } from \"./entityNames\";\nconst findLinkEntities = (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === ENTITY_NAME.LINK\n    );\n  }, callback);\n};\nexport const textLinkDecorator = {\n  strategy: findLinkEntities,\n  component: Link,\n};\nexport let createTextLinkDecorator = () =>\n  new CompositeDecorator([textLinkDecorator]);\nexport const handleCreateLink = (editorState) => {\n  let link = window.prompt(\"Paste the link bellow:\");\n  if (link) {\n    let linkText = window.prompt(\"Paste the link-text below:\");\n    if (linkText) {\n      const currentContent = editorState.getCurrentContent();\n      currentContent.createEntity(ENTITY_NAME.LINK, \"MUTABLE\", {\n        href: link,\n        linkText,\n      });\n      let entityKey = currentContent.getLastCreatedEntityKey();\n      const selection = editorState.getSelection();\n      const contentWithTextLinkEntity = Modifier.replaceText(\n        currentContent,\n        selection,\n        linkText,\n        null,\n        entityKey\n      );\n      const newSelectionState = selection.set(\n        \"anchorOffset\",\n        selection.getAnchorOffset() + linkText.length\n      );\n      const editorStateWithTextLinkEntity = EditorState.set(\n        editorState,\n        {\n          currentContent: contentWithTextLinkEntity,\n        },\n        \"create-entity\"\n      );\n      const editorStateWithNewSelection = EditorState.forceSelection(\n        editorStateWithTextLinkEntity,\n        newSelectionState\n      );\n      console.log(\n        newSelectionState.getAnchorOffset(),\n        \"editor selection anchor offset after link insert:\",\n        editorStateWithNewSelection.getSelection().getAnchorOffset()\n      );\n      return editorStateWithNewSelection;\n    }\n  }\n};\nexport default function Link(props) {\n  let data = props.contentState.getEntity(props.entityKey).getData();\n  if (!!data.href) {\n    return (\n      <a\n        href={data.href}\n        title={data.linkText}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {data.linkText || data.href}\n      </a>\n    );\n  }\n  return null;\n}\n","import React from \"react\";\nimport useTextEditor from \"./useTextEditor\";\nexport const TextEditorContext = React.createContext();\nconst TextEditorContextProvider = ({ children, ...rest }) => {\n  let { ...editorUtils } = useTextEditor({\n    handleUpload: rest.handleUpload || async function () {},\n    linkGeneratorFn: rest.linkGeneratorFn,\n    onDataStructureChange: rest.onDataStructureChange || function () {},\n    value: rest.value || null,\n  });\n  return (\n    <TextEditorContext.Provider\n      value={{\n        ...editorUtils,\n        mentionSuggestions: rest.mentionSuggestions || [],\n      }}\n    >\n      {children}\n    </TextEditorContext.Provider>\n  );\n};\nexport default TextEditorContextProvider;\n","import React from \"react\";\nexport default function Image(props) {\n  if (props.src || props.link) {\n    return (\n      <img\n        src={props.src || props.link}\n        alt={props.alt || props.storageInfo?.Key || \"...\"}\n        className=\"unselectable\"\n      />\n    );\n  }\n  return null;\n}\n","export default function Divider() {\n  return <hr></hr>;\n}\n","import React from \"react\";\nexport default function CheckListItem({ text }) {\n  return <React.Fragment></React.Fragment>;\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n/** block sizes are measured in percentage */\nconst partitions = [\n  0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,\n  100,\n];\nexport default function StretchBar({\n  editorRef,\n  onResizeEnd,\n  reference = \"left\",\n  currentSize = 10,\n  ...rest\n}) {\n  let [isDragging, setIsDragging] = React.useState(false);\n  let [currentlyHoverring, setCurrentlyHovering] = React.useState(currentSize);\n  /**\n   * we are getting editor bounding client rectangle to calculate\n   * styles in mutiple places for better fitting our resizing algorithm\n   */\n  const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n  /**\n   * following function generates guide positions both in pixels and percentages\n   * when user is dragging to resize\n   */\n  let getGuidePositions = () =>\n    partitions.map((part) => {\n      /**\n       * we are mapping out the partitions to it's corresponding\n       * abolute \"X\" pixels. editors left padding is added as an offset\n       * balance to all the absolute positioned guide elements.\n       */\n      let editorPaddingOffset = parseInt(\n        window\n          .getComputedStyle(\n            document.querySelector(\".draft-editor-container\"),\n            null\n          )\n          .getPropertyValue(\"padding-left\")\n      );\n      let offset = (editorRect.width * part) / 100;\n      return {\n        percentage: part,\n        pixels: Math.ceil(offset),\n      };\n    });\n  let handleMouseDown = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      const doDrag = (e) => {\n        /** we are copying the partitions constant so action array is not muted */\n        let partitionsCopy = [...partitions];\n        setIsDragging(true);\n        /** the algorithm finds the closed partiion to the current cursor\n         * and sorts the closed at the begining of the array.\n         * --------------------------------------------------------------\n         * caution: do not use e.offesetX (because event.offsetX changes depending on hovering element)\n         * alway good to calculate the offset value\n         */\n        let fullLength =\n          reference === \"center\" ? editorRect.width / 2 : editorRect.width;\n        let refLine =\n          reference === \"center\"\n            ? editorRect.left + editorRect.width / 2\n            : reference === \"end\"\n            ? editorRect.left + editorRect.width\n            : editorRect.left;\n        let calculatedOffsetX = parseInt(Math.abs(e.clientX - refLine));\n        let needle = parseInt((calculatedOffsetX / fullLength) * 100);\n        partitionsCopy.sort((a, b) => {\n          return Math.abs(needle - a) - Math.abs(needle - b);\n        });\n        /** we pick the closest partition position as the reszied to data */\n        let resizedTo = partitionsCopy[0];\n        setCurrentlyHovering(resizedTo);\n        let createdEvent = { partition: resizedTo };\n        onResizeEnd && onResizeEnd(createdEvent);\n        let entityKey = rest.block.getEntityAt(0);\n        rest.contentState.mergeEntityData(entityKey, { size: resizedTo });\n      };\n      const stopDrag = () => {\n        setIsDragging(false);\n        document.removeEventListener(\"mousemove\", doDrag, false);\n        document.removeEventListener(\"mouseup\", stopDrag, false);\n        /**\n         * - handle drag state\n         * - handle resized data\n         */\n      };\n      document.addEventListener(\"mousemove\", doDrag, false);\n      document.addEventListener(\"mouseup\", stopDrag, false);\n    },\n    [onResizeEnd]\n  );\n  return (\n    <>\n      <div\n        className=\"d-inline-block p-2 unselectable\"\n        style={{ cursor: \"col-resize\" }}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"bg-primary rounded resize-bar\"></div>\n      </div>\n      {/**\n       * follwing portion is rendering the guide elements\n       */}\n      {isDragging && (\n        <div className=\"resize-guides-container position-absolute \">\n          {getGuidePositions().map((guide) => {\n            return (\n              <div\n                key={guide.pixels}\n                className={classnames(\n                  \"resize-guide position-absolute rounded\",\n                  {\n                    \"bg-info\":\n                      /** match if alligned at left/start  */\n                      (reference === \"start\" &&\n                        guide.percentage === currentlyHoverring) ||\n                      /** match if alligned at right/end  */\n                      (reference === \"end\" &&\n                        100 - guide.percentage === currentlyHoverring),\n                  }\n                )}\n                style={{\n                  left: guide.pixels,\n                }}\n              ></div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n}\n","import { Button } from \"reactstrap\";\nimport React, { useCallback } from \"react\";\nimport { ENTITY_NAME } from \"../entityNames\";\nimport classNames from \"classnames\";\nconst alignTools = [\n  {\n    label: \"Align left\",\n    style: ENTITY_NAME.ALIGN_LEFT,\n    icon: \"fa-solid fa-align-left\",\n  },\n  {\n    label: \"Align center\",\n    style: ENTITY_NAME.ALIGN_CENTER,\n    icon: \"fa-solid fa-align-justify\",\n  },\n  {\n    label: \"Align right\",\n    style: ENTITY_NAME.ALIGN_RIGHT,\n    icon: \"fa-solid fa-align-right\",\n  },\n];\nexport default function Aligner({ editorRef, onAlignmentChange, ...rest }) {\n  let handleAlignment = useCallback(\n    ({ alignment }) => {\n      onAlignmentChange && onAlignmentChange({ alignment });\n      let entityKey = rest.block.getEntityAt(0);\n      rest.contentState.mergeEntityData(entityKey, { alignment: alignment });\n    },\n    [onAlignmentChange]\n  );\n  return (\n    <div className=\"d-inline-block shadow-md rounded mb-1\">\n      {alignTools.map((tool) => {\n        return (\n          <Button\n            title={tool?.label}\n            type=\"button\"\n            className={classNames(\"btn btn-icon m-0 text-muted\", {})}\n            key={tool?.style}\n            onClick={(e) => handleAlignment({ alignment: tool?.style })}\n          >\n            {tool.icon ? <i className={tool.icon} /> : tool?.label}\n          </Button>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport StretchBar from \"./StretchBar\";\nimport Aligner from \"./Aligner\";\nimport { ENTITY_NAME } from \"../entityNames\";\nexport default function Resizer({ children, ...rest }) {\n  let [isActive, setIsActive] = React.useState(false);\n  let toggleIsActive = () => setIsActive((curret) => !curret);\n  let [currentSize, setCurrentSize] = React.useState(rest.size || 30);\n  let [alignment, setAlignment] = React.useState(\n    rest.alignment || ENTITY_NAME.ALIGN_LEFT\n  );\n  let alignementClasses = () => ({\n    \"justify-content-start\": alignment === \"start\",\n    \"justify-content-center\": alignment === \"center\",\n    \"justify-content-end\": alignment === \"end\",\n  });\n  return (\n    <>\n      {isActive && alignment && (\n        <div className={classnames(\"d-flex\", alignementClasses())}>\n          <Aligner\n            onAlignmentChange={(e) => setAlignment(e.alignment)}\n            {...rest}\n          />\n        </div>\n      )}\n      <div\n        className={classnames(\"d-flex align-items-center position-relative\", alignementClasses())}\n      >\n        {isActive && alignment !== \"start\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n        <div\n          className={classnames(\n            \"d-inline-block rounded resize-container unselectable\",\n            {\n              \"resize-focused\": isActive,\n              \"w-10\": currentSize === 10,\n              \"w-15\": currentSize === 15,\n              \"w-20\": currentSize === 20,\n              \"w-25\": currentSize === 25,\n              \"w-30\": currentSize === 30,\n              \"w-35\": currentSize === 35,\n              \"w-40\": currentSize === 40,\n              \"w-45\": currentSize === 45,\n              \"w-50\": currentSize === 50,\n              \"w-55\": currentSize === 55,\n              \"w-60\": currentSize === 60,\n              \"w-65\": currentSize === 65,\n              \"w-70\": currentSize === 70,\n              \"w-75\": currentSize === 75,\n              \"w-80\": currentSize === 80,\n              \"w-85\": currentSize === 85,\n              \"w-90\": currentSize === 90,\n              \"w-95\": currentSize === 95,\n              \"w-100\": currentSize === 100,\n            }\n          )}\n          onClick={toggleIsActive}\n        >\n          {children}\n        </div>\n        {isActive && alignment !== \"end\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            currentSize={currentSize}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Image from \"./Image\";\nimport Link from \"./Link\";\nimport Divider from \"./Divider\";\nimport CheckListItem from \"./CheckListItem\";\nimport { ENTITY_NAME } from \"./entityNames\";\nimport Resizer from \"./ResizeTool/Index\";\n\nexport default function Media({ type, data, editorControllers, ...rest }) {\n  let media = null;\n  let toolProperties = { ...data, ...editorControllers, ...rest };\n  if (type === ENTITY_NAME.IMAGE) {\n    media = (\n      <Resizer {...toolProperties}>\n        <Image {...data} />\n      </Resizer>\n    );\n  }\n  if (type === ENTITY_NAME.DIVIDER) {\n    media = <Divider {...data} />;\n  }\n  if (type === ENTITY_NAME.CHECKLIST) {\n    media = <CheckListItem {...data} />;\n  }\n  return media;\n}\n","import React, { useContext } from \"react\";\nimport usePreRenderProcessing from \"./usePreRenderProcessing\";\nimport { TextEditorContext } from \"../Context\";\nimport Media from \"./Media\";\nexport const editorMediaBlockRenderer = (block) => {\n  if (block.getType() === \"atomic\") {\n    return {\n      component: ProcessedMedia,\n      editable: false,\n    };\n  }\n  return null;\n};\nconst ProcessedMedia = (props) => {\n  const entityKey = props.block.getEntityAt(0);\n  const entity = entityKey && props.contentState.getEntity(entityKey);\n  const type = entity?.getType();\n  const { generateLink, ...rest } = useContext(TextEditorContext);\n  let processedResults = usePreRenderProcessing({\n    generateLink,\n    ...entity?.getData(),\n  });\n  return (\n    <Media\n      type={type}\n      data={{\n        ...entity?.getData(),\n        ...processedResults,\n      }}\n      editorControllers={{ ...rest }}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport noImagePlaceHolder from \"assets/img/default-avatar.png\";\nexport default function usePreRenderProcessing(config) {\n  let [link, setLink] = React.useState(config.src);\n  React.useEffect(() => {\n    async function _prepareSource() {\n      /**\n       * we are trying to generate the link with some meta data as a second step\n       * if src is not provided. if the data can't generate link it will render\n       * the empty placeholder. this feature is usefull if someone wants to generate \n       * image src/link based on runtime thorugh a backend server.\n       */\n      if (!config.src) {\n        try {\n          if (!config.generateLink || typeof config.generateLink !== \"function\")\n            throw Error(\"link gnerator function must be supplied\");\n          let link = await config.generateLink(config.storageInfo);\n          if (!link)\n            throw new Error(\n              \"link generator function must return a valid link or else provide a valid  image source\"\n            );\n          setLink(link);\n        } catch (err) {\n          setLink(noImagePlaceHolder);\n          console.log(err);\n        }\n      }\n    }\n    _prepareSource();\n    return () => {};\n  }, [config.generateLink]);\n  return {\n    link,\n  };\n}\n","import React from \"react\";\nimport { Editor } from \"draft-js\";\nimport { TextEditorContext } from \"./Context\";\nimport { editorMediaBlockRenderer } from \"./entities/editorMediaBlockRenderer\";\nexport default function TextEditor({ readOnly = false, ...props }) {\n  const {\n    editorRef,\n    editorState,\n    handleEditorStateChange,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleKeyCommand,\n    activateEditor,\n    deactivateEditor,\n  } = React.useContext(TextEditorContext);\n  return (\n    <>\n      <Editor\n        ref={editorRef}\n        blockRendererFn={editorMediaBlockRenderer}\n        placeholder={props.placeholder}\n        onChange={handleEditorStateChange}\n        editorState={editorState}\n        spellCheck={true}\n        handleKeyCommand={handleKeyCommand}\n        handleDroppedFiles={handleDroppedFiles}\n        handlePastedFiles={handlePastedFiles}\n        readOnly={readOnly}\n        onFocus={activateEditor}\n        onBlur={deactivateEditor}\n      />\n    </>\n  );\n}\n","import { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\n\nexport const INLINE_TYPES = [\n  {\n    label: \"Underline\",\n    style: \"UNDERLINE\",\n    icon: \"fa-solid fa-underline\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Bold\",\n    style: \"BOLD\",\n    icon: \"fa-solid fa-bold\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Italic\",\n    style: \"ITALIC\",\n    icon: \"fa-solid fa-italic\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Strike through\",\n    style: \"STRIKETHROUGH\",\n    icon: \"fa-solid fa-strikethrough\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n];\nexport const BLOCK_TYPES = [\n  {\n    label: \"Header\",\n    style: \"header-three\",\n    icon: \"fa-solid fa-heading\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"UL\",\n    style: \"unordered-list-item\",\n    icon: \"fa-solid fa-list\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"OL\",\n    style: \"ordered-list-item\",\n    icon: \"fa-solid fa-list-ol\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Blockquote\",\n    style: \"blockquote\",\n    icon: \"fa-solid fa-quote-left\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Code block\",\n    style: \"code-block\",\n    icon: \"fa-solid fa-code\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  // {\n  //   lebel: \"Align left\",\n  //   style: \"editor-alignment-left\",\n  //   icon: \"fa-solid fa-align-left\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align center\",\n  //   style: \"editor-alignment-center\",\n  //   icon: \"fa-solid fa-align-center\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align right\",\n  //   style: \"editor-alignment-right\",\n  //   icon: \"fa-solid fa-align-right\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align justify\",\n  //   style: \"editor-alignment-justify\",\n  //   icon: \"fa-solid fa-align-justify\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n];\nexport const ENTITY_TYPES = [\n  // {\n  //   label: \"Link\",\n  //   style: ENTITY_NAME.LINK,\n  //   icon: \"fa-solid fa-link\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Image\",\n    style: ENTITY_NAME.IMAGE,\n    icon: \"fa-solid fa-images\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n  // {\n  //   label: \"Mention\",\n  //   style: ENTITY_NAME.MENTION,\n  //   icon: \"fa-solid fa-at\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  // {\n  //   lable: \"CL\",\n  //   style: ENTITY_NAME.CHECKLIST,\n  //   icon: \"fa-solid fa-list-check\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Divider\",\n    style: ENTITY_NAME.DIVIDER,\n    icon: \"fa-solid fa-minus\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n];\nconst toolType = {\n  INLINE_TYPES,\n  BLOCK_TYPES,\n  ENTITY_TYPES,\n};\n\nexport default toolType;\n","export default function ButtonSeparator(props) {\n  return <span className=\"draft-toolbar-button-separator\">|</span>;\n}\n","import React from \"react\";\nconst FilePicker = React.forwardRef((props, ref) => {\n  return (\n    <input\n      {...props}\n      ref={ref}\n      className=\"d-none\"\n      type={\"file\"}\n      accept={props.accept || \"image/*\"}\n    />\n  );\n});\nexport default FilePicker;\n","import React from \"react\";\nimport { TextEditorContext } from \"./Context\";\nimport toolTypes from \"./toolTypes\";\nimport ButtonSeparator from \"./ButtonSeparator\";\nimport { Button } from \"reactstrap\";\nimport FilePicker from \"./FilePicker\";\nimport classNames from \"classnames\";\nexport default function ToolBar(props) {\n  const { getFileInputProps, isToolActive, handleToolClick } =\n    React.useContext(TextEditorContext);\n  return (\n    <>\n      <FilePicker {...getFileInputProps()} />\n      {Object.keys(toolTypes).map((type, index) => {\n        return (\n          <React.Fragment key={type}>\n            {toolTypes[type]?.map((tool) => {\n              return (\n                <Button\n                  title={tool?.label}\n                  type=\"button\"\n                  className={\"btn btn-icon text-muted mr-1\"}\n                  key={tool?.style}\n                  onMouseDown={(e) => handleToolClick(tool, e)}\n                >\n                  {tool.icon ? (\n                    <i\n                      className={classNames(tool.icon, {\n                        \"text-primary\": isToolActive(tool),\n                      })}\n                    />\n                  ) : (\n                    tool?.label\n                  )}\n                </Button>\n              );\n            })}\n            {index < Object.keys(toolTypes).length - 1 && <ButtonSeparator />}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","import React from \"react\";\nimport TextEditor from \"./TextEditor\";\nimport { TextEditorContext } from \"./Context\";\nimport ToolBar from \"./Toolbar\";\nimport classnames from \"classnames\";\nexport default function WrappedEditor(props) {\n  const { forceFocusEditorEnd, focusedForEditing } =\n    React.useContext(TextEditorContext);\n  return (\n    <div\n      className={classnames(\"draft-editor-container d-flex flex-column\", {\n        \"editor-disabled\": props.readOnly,\n        \"editor-active\": focusedForEditing,\n      })}\n    >\n      {!props.readOnly && (\n        <div>\n          <ToolBar {...props} />\n          <hr></hr>\n        </div>\n      )}\n      <TextEditor {...props} />\n      {/**\n       * following portion helps to focus on the actual text area\n       * when unedited remaing area is clicked.\n       */}\n      <div className=\"flex-grow-1\" onMouseDown={forceFocusEditorEnd}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextEditorContextProvider from \"./Context\";\nimport WrappedEditor from \"./WrappedEditor\";\nimport PropTypes from \"prop-types\";\nexport default function Index(props) {\n  return (\n    <TextEditorContextProvider {...props}>\n      <WrappedEditor {...props} />\n    </TextEditorContextProvider>\n  );\n}\nIndex.propTypes = {\n  /** pre populated contents in the editor */\n  value: PropTypes.string,\n  /** link generator function helps to  get the file links */\n  linkGeneratorFn: PropTypes.func,\n  /** helps to specify where any media resource should be stored */\n  handleUpload: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { DropdownMenu } from \"reactstrap\";\n\nlet DropdownMenuBaseProps = Object.assign({}, DropdownMenu.prototype.props);\n\n/**\n *\n * @param {DropdownMenuBaseProps} props\n * @returns\n */\nconst DropdownMenuBase = ({ ...props }) => {\n  return <DropdownMenu {...props}>{props.children}</DropdownMenu>;\n};\n\nDropdownMenuBase.propTypes = {\n  ...(DropdownMenu.propTypes && DropdownMenu.propTypes),\n};\nexport default DropdownMenuBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DropdownToggle } from \"reactstrap\";\n\nlet DropdownToogleBaseProps = Object.assign(\n  {\n    startIcon: \"\",\n    endIcon: \"\",\n    caret: true,\n  },\n  DropdownToggle.prototype.props\n);\n\n/**\n *\n * @param {DropdownToogleBaseProps} props\n * @returns\n */\n\nconst DropdownToogleBase = ({ caret, ...props }) => {\n  return (\n    <>\n      <DropdownToggle\n        caret={props.startIcon || props.endIcon ? false : props.caret}\n        {...props}\n      >\n        {props.startIcon && (\n          <i className={classNames(props.startIcon, \"me-2\")}></i>\n        )}\n        {props.children}\n        {props.endIcon && <i className={classNames(props.endIcon, \"ms-2\")}></i>}\n      </DropdownToggle>\n    </>\n  );\n};\n\nDropdownToogleBase.propTypes = {\n  startIcon: PropTypes.string,\n  endIcon: PropTypes.string,\n  caret: PropTypes.bool,\n  ...(DropdownToggle.propTypes && DropdownToggle.propTypes),\n};\n\nexport default DropdownToogleBase;\n","import { List } from \"reactstrap\";\n\nlet ListBaseProps = Object.assign({}, List.prototype?.props);\n\n/**\n *\n * @param {ListBaseProps} props\n * @returns\n */\n\nconst ListBase = ({ children, ...rest }) => {\n  return <List {...rest}>{children}</List>;\n};\n\nListBase.propTypes = {\n  ...(List.propTypes && List.propTypes),\n};\n\nexport default ListBase;\n","import React from \"react\";\nimport { ListGroupItem } from \"reactstrap\";\n\nlet ListGroupItemBaseProps = Object.assign({}, ListGroupItem.prototype?.props);\n\n/**\n *\n * @param {ListGroupItemBaseProps} props\n * @returns\n */\n\nconst ListGroupItemBase = ({ children, ...rest }) => {\n  return <ListGroupItem {...rest}>{children}</ListGroupItem>;\n};\n\nListGroupItemBase.propTypes = {\n  ...(ListGroupItem.propTypes && ListGroupItem.propTypes),\n};\n\nexport default ListGroupItemBase;\n","import React from \"react\";\nimport { ListGroupItemHeading } from \"reactstrap\";\n\nlet ListGroupItemHeadingBaseProps = Object.assign(\n  {},\n  ListGroupItemHeading.prototype?.props\n);\n\n/**\n *\n * @param {ListGroupItemHeadingBaseProps} props\n * @returns\n */\n\nconst ListGroupItemHeadingBase = ({ children, ...rest }) => {\n  return <ListGroupItemHeading {...rest}>{children}</ListGroupItemHeading>;\n};\n\nListGroupItemHeadingBase.propTypes = {\n  ...(ListGroupItemHeading.propTypes && ListGroupItemHeading.propTypes),\n};\n\nexport default ListGroupItemHeadingBase;\n","import { ListGroupItemText } from \"reactstrap\";\n\nlet ListGroupItemTextBaseProps = Object.assign(\n  {},\n  ListGroupItemText.prototype?.props\n);\n\n/**\n *\n * @param {ListGroupItemTextBaseProps} props\n * @returns\n */\n\nconst ListGroupItemTextBase = ({ children, ...rest }) => {\n  return <ListGroupItemText {...rest}>{children}</ListGroupItemText>;\n};\n\nListGroupItemTextBase.propTypes = {\n  ...(ListGroupItemText.propTypes && ListGroupItemText.propTypes),\n};\n\nexport default ListGroupItemTextBase;\n","import { ListInlineItem } from \"reactstrap\";\n\nlet ListInlineItemBaseProps = Object.assign(\n  {},\n  ListInlineItem.prototype?.props\n);\n\n/**\n *\n * @param {ListInlineItemBaseProps} props\n * @returns\n */\n\nconst ListInlineItemBase = ({ children, ...rest }) => {\n  return <ListInlineItem {...rest}>{children}</ListInlineItem>;\n};\n\nListInlineItemBase.propTypes = {\n  ...(ListInlineItem.propTypes && ListInlineItem.propTypes),\n};\n\nexport default ListInlineItemBase;\n","import React from \"react\";\nimport { Navbar } from \"reactstrap\";\n\nlet NavbarBaseProps = Object.assign({}, Navbar.prototype.props);\n\n/**\n *\n * @param {NavbarBaseProps} props\n * @returns\n */\n\nconst NavBarBase = ({ children, ...rest }) => {\n  return <Navbar {...rest}>{children}</Navbar>;\n};\n\nNavBarBase.propTypes = {\n  ...(Navbar.propTypes && Navbar.propTypes),\n};\n\nexport default NavBarBase;\n","import React from \"react\";\nimport { NavbarBrand } from \"reactstrap\";\n\nlet NavbarBrandBaseProps = Object.assign({}, NavbarBrand.prototype.props);\n\n/**\n *\n * @param {NavbarBrandBaseProps} props\n * @returns\n */\n\nconst NavbarBrandBase = ({ children, ...rest }) => {\n  return <NavbarBrand {...rest}>{children}</NavbarBrand>;\n};\n\nNavbarBrandBase.propTypes = {\n  ...(NavbarBrand.propTypes && NavbarBrand.propTypes),\n};\n\nexport default NavbarBrandBase;\n","import React from \"react\";\nimport { NavbarText } from \"reactstrap\";\n\nlet NavbarTextBaseProps = Object.assign({}, NavbarText.prototype.props);\n\n/**\n *\n * @param {NavbarTextBaseProps} props\n * @returns\n */\n\nconst NavbarTextBase = ({ children, ...rest }) => {\n  return <NavbarText {...rest}>{children}</NavbarText>;\n};\n\nNavbarTextBase.propTypes = {\n  ...(NavbarText.propTypes && NavbarText.propTypes),\n};\n\nexport default NavbarTextBase;\n","import React from \"react\";\nimport { NavbarToggler } from \"reactstrap\";\n\nlet NavbarTogglerBaseProps = Object.assign({}, NavbarToggler.prototype.props);\n\n/**\n *\n * @param {NavbarTogglerBaseProps} props\n * @returns\n */\n\nconst NavbarTogglerBase = ({ children, ...rest }) => {\n  return <NavbarToggler {...rest}>{children}</NavbarToggler>;\n};\n\nNavbarTogglerBase.propTypes = {\n  ...(NavbarToggler.propTypes && NavbarToggler.propTypes),\n};\n\nexport default NavbarTogglerBase;\n","import React from \"react\";\nimport { Nav } from \"reactstrap\";\n\nlet NavBaseProps = Object.assign({}, Nav.prototype.props);\n\n/**\n *\n * @param {NavBaseProps} props\n * @returns\n */\nconst NavBase = ({ children, ...rest }) => {\n  return <Nav {...rest}>{children}</Nav>;\n};\n\nNavBase.propTypes = {\n  ...(Nav.propTypes && Nav.propTypes),\n};\n\nexport default NavBase;\n","import React from \"react\";\nimport { NavItem } from \"reactstrap\";\n\nlet NavItemBaseProps = Object.assign({}, NavItem.prototype.props);\n\n/**\n *\n * @param {NavItemBaseProps} props\n * @returns\n */\nconst NavItemBase = ({ children, ...rest }) => {\n  return <NavItem {...rest}>{children}</NavItem>;\n};\n\nNavItemBase.propTypes = {\n  ...(NavItem.propTypes && NavItem.propTypes),\n};\n\nexport default NavItemBase;\n","import React from \"react\";\nimport { NavLink } from \"reactstrap\";\n\nlet NavLinkBaseProps = Object.assign({}, NavLink.prototype.props);\n\n/**\n *\n * @param {NavLinkBaseProps} props\n * @returns\n */\nconst NavLinkBase = ({ children, ...rest }) => {\n  return <NavLink {...rest}>{children}</NavLink>;\n};\n\nNavLinkBase.propTypes = {\n    ...(NavLink.propTypes && NavLink.propTypes),\n};\n\nexport default NavLinkBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { Pagination } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nlet PaginationBaseProps = Object.assign(\n  {\n    separated: false,\n  },\n  Pagination.prototype.props\n);\n/**\n *\n * @param {PaginationBaseProps} props\n * @returns\n */\n\nconst PaginationBase = ({ children, separated, ...rest }) => {\n  return (\n    <Pagination\n      className={classNames(rest.className, {\n        \"pagination-separated\": separated,\n      })}\n      {...rest}\n    >\n      {children}\n    </Pagination>\n  );\n};\n\nPaginationBase.propTypes = {\n  separated: PropTypes.bool,\n  ...(Pagination.propTypes && Pagination.propTypes),\n};\n\nexport default PaginationBase;\n","import React from \"react\";\nimport { PaginationItem } from \"reactstrap\";\n\nlet PaginationItemBaseProps = Object.assign({}, PaginationItem.prototype.props);\n/**\n *\n * @param {PaginationItemBaseProps} props\n * @returns\n */\n\nconst PaginationItemBase = ({ children, ...rest }) => {\n  return <PaginationItem {...rest}>{children}</PaginationItem>;\n};\n\nPaginationItemBase.propTypes = {\n  ...(PaginationItem.propTypes && PaginationItem.propTypes),\n};\n\nexport default PaginationItemBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { PaginationLink } from \"reactstrap\";\n\nlet PaginationLinkBaseProps = Object.assign({}, PaginationLink.prototype.props);\n/**\n *\n * @param {PaginationLinkBaseProps} props\n * @returns\n */\n\nconst PaginationLinkBase = ({ children, link, ...rest }) => {\n  if (link) {\n    //in case of react router, we need to send Link tag as children\n    return <span className=\"page-link\">{children}</span>;\n  } else {\n    return <PaginationLink {...rest}>{children}</PaginationLink>;\n  }\n};\n\nPaginationLinkBase.propTypes = {\n  ...(PaginationLink.propTypes && PaginationLink.propTypes),\n};\n\nexport default PaginationLinkBase;\n","import React from \"react\";\nimport { TabContent } from \"reactstrap\";\n\nlet TabContentBaseProps = Object.assign({}, TabContent.prototype?.props);\n\n/**\n *\n * @param {TabContentBaseProps} props\n * @returns\n */\nconst TabContentBase = ({ children, ...rest }) => {\n  return <TabContent {...rest}>{children}</TabContent>;\n};\n\nTabContentBase.propTypes = {\n  ...(TabContent.propTypes && TabContent.propTypes),\n};\n\nexport default TabContentBase;\n","import { TabPane } from \"reactstrap\";\n\nlet TabPaneBaseProps = Object.assign({}, TabPane.prototype?.props);\n\n/**\n *\n * @param {TabPaneBaseProps} props\n * @returns\n */\n\nconst TabPaneBase = ({ children, ...rest }) => {\n  return <TabPane {...rest}>{children}</TabPane>;\n};\n\nTabPaneBase.propTypes = {\n  ...(TabPane.propTypes && TabPane.propTypes),\n};\n\nexport default TabPaneBase;\n","import React from \"react\";\nimport { UncontrolledAlert } from \"reactstrap\";\n\nlet UncontrolledAlertBaseProps = Object.assign(\n  {},\n  UncontrolledAlert.prototype?.props\n);\n\n/**\n * @param {UncontrolledAlertBaseProps} props\n * @returns\n * */\n\nconst UncontrolledAlertBase = ({ children, ...rest }) => {\n  return <UncontrolledAlert {...rest}>{children}</UncontrolledAlert>;\n};\n\nUncontrolledAlertBase.propTypes = {\n  ...(UncontrolledAlert.propTypes && UncontrolledAlert.propTypes),\n};\n\nexport default UncontrolledAlertBase;\n","import React from \"react\";\nimport { Alert } from \"reactstrap\";\n\nlet AlertBaseProps = Object.assign({}, Alert.prototype?.props);\n\n/**\n * @param {AlertBaseProps} props\n * @returns\n * */\n\nconst AlertBase = ({ children, ...rest }) => {\n  return <Alert>{children}</Alert>;\n};\n\nAlertBase.propTypes = {\n  ...(AlertBase.propTypes && AlertBase.propTypes),\n};\n\nexport default AlertBase;\n"],"names":["Object","assign","leftIcon","rightIcon","Button","prototype","props","ButtonBase","_jsxs","_extends","children","_jsx","className","classNames","propTypes","PropTypes","string","Card","CardBase","CardBody","CardBodyBase","CardFooter","CardFooterBase","CardHeader","CardHeaderBase","Dropdown","DropdownBase","_ref","_objectDestructuringEmpty","DropdownItem","DropdownItemBase","leftIconStyle","rightIconStyle","_objectWithoutPropertiesLoose","_excluded","ImsSimpleTable","Table","striped","hover","thead","map","prop","key","classnames","length","text","tbody","undefined","data","k","item","actions","arrayOf","shape","isRequired","oneOfType","number","node","FilterAndSearch","onFilter","onSearch","filters","searchString","setSearchString","React","useState","debouncedSearchString","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","clientSearch","Row","Col","md","Select","classNamePrefix","name","onChange","defaultValue","find","default","options","placeholder","InputGroup","Input","e","currentTarget","toString","DOTS","range","start","end","Array","from","_","idx","Pagination","onPageChange","totalCount","siblingCount","currentPage","pageSize","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","lastPageIndex","rightRange","middleRange","usePagination","paginationRange","lastPage","_Fragment","onClick","pageNumber","i","disabled","columns","renderRowSubComponent","handleSearch","handleFilter","handlePagination","pagination","hasNextPage","hasPrevPage","nextPage","prevPage","size","totalPages","totalResults","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","state","visibleColumns","useTable","initialState","pageIndex","useSortBy","useExpanded","useResizeColumns","useFlexLayout","filter","search","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","getResizerProps","isResizing","canFilter","row","Fragment","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","_row$getRowProps","ELEMENT_TYPES","ENTITY_NAME","profileImageUrl","_id","onSelect","useCallback","preventDefault","src","defaultAvatar","alt","handleSelect","MentionSuggestions","suggestions","rest","computedPosForMentionSuggestions","useContext","TextEditorContext","style","suggestion","index","Entry","findWithRegex","regex","contentBlock","callback","getText","matchArr","exec","HANDLE_REGEX","compositeDecorator","CompositeDecorator","strategy","contentState","component","mentionInputRef","useRef","editorRef","mentionSuggestions","updateComputedPosForMentionSuggestions","handleMentionSelect","computeStylePos","left","current","_editorRef$current$ed","_editorRef$current","editor","getBoundingClientRect","width","offsetLeft","top","offsetTop","display","retriveEntityData","entityKey","entity","getEntity","getData","href","ref","toLowerCase","includes","decoratedText","slice","_props$decoratedText","userName","split","join","blockKey","mention","hideSuggestions","HTTPSLink","title","target","rel","findEntityRanges","character","getType","LINK","Link","linkText","createContext","TextEditorContextProvider","useTextEditor","config","editorState","setEditorState","EditorState","createEmpty","focusedForEditing","setFocusedForEditing","setComputedPosForMentionSuggestions","currentContent","JSON","parse","err","console","log","handleEditorStateChange","createWithContent","ContentState","createFromText","push","convertFromRaw","fileInput","_createAtomicBlockEntity","command","contentStateWithEntity","getCurrentContent","createEntity","getLastCreatedEntityKey","newEditorState","set","AtomicBlockUtils","insertAtomicBlock","onDataStructureChange","stringify","convertToRaw","_handleFiles","async","handleUpload","files","every","file","type","storageInformations","Promise","all","storageInfo","_handleFileInputChange","_atomicEntityController","ENTITY_NAME_IMAGE","click","ENTITY_NAME_LINK","link","window","prompt","selection","getSelection","Modifier","replaceText","newSelectionState","getAnchorOffset","editorStateWithTextLinkEntity","contentWithTextLinkEntity","editorStateWithNewSelection","forceSelection","handleCreateLink","ENTITY_NAME_DIVIDER","ENTITY_NAME_MENTION","ENTITY_NAME_CHECKLIST","_buttonHandlers","ELEMENT_TYPES_INLINE_DEFAULT","RichUtils","toggleInlineStyle","ELEMENT_TYPES_BLOCK_DEFAULT","toggleBlockType","ELEMENT_TYPES_ATOMIC_ENTITY","getFileInputProps","generateLink","linkGeneratorFn","metaData","handleDroppedFiles","handlePastedFiles","handleKeyCommand","newState","handleToolClick","tool","getHasFocus","element","forceFocusEditorEnd","focus","moveFocusToEnd","position","mentionData","selectionState","SelectionState","newContentState","merge","anchorOffset","focusOffset","getCurrentInlineStyle","getSelectionAfter","activateEditor","deactivateEditor","isToolActive","has","getBlockForKey","getStartKey","editorUtils","_useTextEditor","Provider","Image","_props$storageInfo","Key","Divider","CheckListItem","partitions","StretchBar","onResizeEnd","reference","currentSize","isDragging","setIsDragging","currentlyHoverring","setCurrentlyHovering","editorRect","handleMouseDown","doDrag","partitionsCopy","fullLength","calculatedOffsetX","parseInt","abs","clientX","needle","sort","a","b","resizedTo","partition","block","getEntityAt","mergeEntityData","stopDrag","document","removeEventListener","addEventListener","cursor","onMouseDown","part","getComputedStyle","querySelector","getPropertyValue","percentage","pixels","guide","alignTools","label","icon","Aligner","onAlignmentChange","handleAlignment","alignment","Resizer","isActive","setIsActive","setCurrentSize","setAlignment","alignementClasses","curret","Media","editorControllers","media","toolProperties","editorMediaBlockRenderer","ProcessedMedia","editable","_useContext","processedResults","usePreRenderProcessing","setLink","Error","noImagePlaceHolder","_prepareSource","TextEditor","readOnly","Editor","blockRendererFn","spellCheck","onFocus","onBlur","INLINE_TYPES","toolType","BLOCK_TYPES","ENTITY_TYPES","ButtonSeparator","FilePicker","forwardRef","accept","keys","toolTypes","_toolTypes$type","WrappedEditor","ToolBar","Index","func","DropdownMenu","DropdownMenuBase","startIcon","endIcon","caret","DropdownToggle","DropdownToogleBase","bool","_List$prototype","List","ListBase","_ListGroupItem$protot","ListGroupItem","ListGroupItemBase","_ListGroupItemHeading","ListGroupItemHeading","ListGroupItemHeadingBase","_ListGroupItemText$pr","ListGroupItemText","ListGroupItemTextBase","_ListInlineItem$proto","ListInlineItem","ListInlineItemBase","Navbar","NavBarBase","NavbarBrand","NavbarBrandBase","NavbarText","NavbarTextBase","NavbarToggler","NavbarTogglerBase","Nav","NavBase","NavItem","NavItemBase","NavLink","NavLinkBase","separated","PaginationBase","PaginationItem","PaginationItemBase","PaginationLink","PaginationLinkBase","_TabContent$prototype","TabContent","TabContentBase","_TabPane$prototype","TabPane","TabPaneBase","_UncontrolledAlert$pr","UncontrolledAlert","UncontrolledAlertBase","_Alert$prototype","Alert","AlertBase"],"mappings":"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"}