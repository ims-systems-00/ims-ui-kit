{"version":3,"file":"ims-ui-kit.js","sources":["../src/components/Buttons/BtnBase.jsx","../src/components/Cards/CardBase.jsx","../src/components/Cards/CardBodyBase.jsx","../src/components/Cards/CardFooterBase.jsx","../src/components/Cards/CardHeaderBase.jsx","../src/components/Dropdowns/DropdownBase.jsx","../src/components/Dropdowns/DropdownToggleBase.jsx","../src/components/Dropdowns/DropdownMenuBase.jsx","../src/components/Dropdowns/DropdownItemBase.jsx","../src/components/Table/ImsSimpleTable.jsx","../src/components/TextEditor/elementTypes.js","../src/components/TextEditor/entities/entityNames.js","../src/components/TextEditor/entities/Mentions/Suggestions/Entry.jsx","../src/components/TextEditor/entities/Mentions/Suggestions/Index.jsx","../src/components/TextEditor/entities/utils/findWithRegex.js","../src/components/TextEditor/entities/Mentions/mentionStrategy.js","../src/components/TextEditor/entities/HttpsLink/stategy.js","../src/components/TextEditor/useTextEditor.js","../src/components/TextEditor/entities/Mentions/index.js","../src/components/TextEditor/entities/Mentions/Mention.jsx","../src/components/TextEditor/entities/HttpsLink/index.js","../src/components/TextEditor/entities/HttpsLink/HTTPSLink.jsx","../src/components/TextEditor/entities/Link.jsx","../src/components/TextEditor/Context.jsx","../src/components/TextEditor/entities/Image.jsx","../src/components/TextEditor/entities/Divider.jsx","../src/components/TextEditor/entities/CheckListItem.jsx","../src/components/TextEditor/entities/ResizeTool/StretchBar.jsx","../src/components/TextEditor/entities/ResizeTool/Aligner.jsx","../src/components/TextEditor/entities/ResizeTool/Index.jsx","../src/components/TextEditor/entities/Media.jsx","../src/components/TextEditor/entities/editorMediaBlockRenderer.js","../src/components/TextEditor/entities/usePreRenderProcessing.js","../src/components/TextEditor/TextEditor.jsx","../src/components/TextEditor/toolTypes.js","../src/components/TextEditor/ButtonSeparator.jsx","../src/components/TextEditor/FilePicker.jsx","../src/components/TextEditor/Toolbar.jsx","../src/components/TextEditor/WrappedEditor.jsx","../src/components/TextEditor/Index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet BtnBaseProps = Object.assign(\n  {\n    leftIcon: \"\",\n    rightIcon: \"\",\n  },\n  Button.prototype.props\n);\n\n/**\n *\n * @param {BtnBaseProps} props\n * @returns\n */\nconst BtnBase = (props) => {\n  return (\n    <Button {...props}>\n      {props.leftIcon ? (\n        <i className={classNames(props.leftIcon, \"me-2\")} />\n      ) : null}\n      {props.children}\n      {props.rightIcon ? (\n        <i className={classNames(props.rightIcon, \"ms-2\")} />\n      ) : null}\n    </Button>\n  );\n};\n\nBtnBase.propTypes = {\n  leftIcon: PropTypes.string,\n  rightIcon: PropTypes.string,\n  ...(Button.propTypes && Button.propTypes),\n};\n\nexport default BtnBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBaseProps = Object.assign({}, Card.prototype.props);\n\n/**\n *\n * @param {CardBaseProps} props\n * @returns\n */\nconst CardBase = (props) => {\n  return <Card {...props}>{props.children}</Card>;\n};\n\nCardBase.propTypes = {\n  ...(Card.propTypes && Card.propTypes),\n};\n\nexport default CardBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardBody } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBodyBaseProps = Object.assign({}, CardBody.prototype.props);\n\n/**\n *\n * @param {CardBodyBaseProps} props\n * @returns\n */\nconst CardBodyBase = (props) => {\n  return <CardBody {...props}>{props.children}</CardBody>;\n};\n\nCardBodyBase.propTypes = {\n  ...(CardBody.propTypes && CardBody.propTypes),\n};\n\nexport default CardBodyBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardFooter } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardFooterBaseProps = Object.assign({}, CardFooter.prototype.props);\n\n/**\n *\n * @param {CardFooterBaseProps} props\n * @returns\n */\nconst CardFooterBase = (props) => {\n  return <CardFooter {...props}>{props.children}</CardFooter>;\n};\n\nCardFooterBase.propTypes = {\n  ...(CardFooter.propTypes && CardFooter.propTypes),\n};\n\nexport default CardFooterBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardHeader } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardHeaderBaseProps = Object.assign({}, CardHeader.prototype.props);\n\n/**\n *\n * @param {CardHeaderBaseProps} props\n * @returns\n */\nconst CardHeaderBase = (props) => {\n  return <CardHeader {...props}>{props.children}</CardHeader>;\n};\n\nCardHeaderBase.propTypes = {\n  ...(CardHeader.propTypes && CardHeader.propTypes),\n};\n\nexport default CardHeaderBase;\n","import React from \"react\";\nimport { Dropdown } from \"reactstrap\";\nlet DropdownBaseProps = Object.assign({}, Dropdown.prototype.props);\n\n/**\n *\n * @param {DropdownBaseProps} props\n * @returns\n */\nconst DropdownBase = ({ ...props }) => {\n  return <Dropdown {...props}>{props.children}</Dropdown>;\n};\n\nDropdownBase.propTypes = {\n  ...(Dropdown.propTypes && Dropdown.propTypes),\n};\nexport default DropdownBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DropdownToggle } from \"reactstrap\";\n\nlet DropdownToogleBaseProps = Object.assign(\n  {\n    startIcon: \"\",\n    endIcon: \"\",\n    caret: true,\n  },\n  DropdownToggle.prototype.props\n);\n\n/**\n *\n * @param {DropdownToogleBaseProps} props\n * @returns\n */\n\nconst DropdownToogleBase = ({ caret, ...props }) => {\n  return (\n    <>\n      <DropdownToggle\n        caret={props.startIcon || props.endIcon ? false : props.caret}\n        {...props}\n      >\n        {props.startIcon && (\n          <i className={classNames(props.startIcon, \"me-2\")}></i>\n        )}\n        {props.children}\n        {props.endIcon && <i className={classNames(props.endIcon, \"ms-2\")}></i>}\n      </DropdownToggle>\n    </>\n  );\n};\n\nDropdownToogleBase.propTypes = {\n  startIcon: PropTypes.string,\n  endIcon: PropTypes.string,\n  caret: PropTypes.bool,\n  ...(DropdownToggle.propTypes && DropdownToggle.propTypes),\n};\n\nexport default DropdownToogleBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { DropdownMenu } from \"reactstrap\";\n\nlet DropdownMenuBaseProps = Object.assign({}, DropdownMenu.prototype.props);\n\n/**\n *\n * @param {DropdownMenuBaseProps} props\n * @returns\n */\nconst DropdownMenuBase = ({ ...props }) => {\n  return <DropdownMenu {...props}>{props.children}</DropdownMenu>;\n};\n\nDropdownMenuBase.propTypes = {\n  ...(DropdownMenu.propTypes && DropdownMenu.propTypes),\n};\nexport default DropdownMenuBase;\n","import React from \"react\";\nimport { DropdownItem } from \"reactstrap\";\nlet DropdownItemBaseProps = Object.assign({}, DropdownItem.prototype.props);\n\n/**\n *\n * @param {DropdownItemBaseProps} props\n * @returns\n */\nconst DropdownItemBase = ({\n  leftIcon = \"\",\n  rightIcon = \"\",\n  leftIconStyle = \"text-secondary\",\n  rightIconStyle = \"text-secondary\",\n  ...props\n}) => {\n  return (\n    <DropdownItem {...props} className=\"d-flex justify-content-between align-items-center\">\n      <span>\n        {leftIcon && <i className={`${leftIcon} ${leftIconStyle} me-2`} />}\n        {props.children}\n      </span>\n      {rightIcon && <i className={`${rightIcon} ${rightIconStyle}`} />}\n    </DropdownItem>\n  );\n};\n\nDropdownItemBase.propTypes = {\n  ...(DropdownItem.propTypes && DropdownItem.propTypes),\n};\n\nexport default DropdownItemBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Table } from \"reactstrap\";\n\nconst ImsSimpleTable = (props) => {\n  return (\n    <Table striped hover>\n      <thead>\n        <tr>\n          {props.thead.map((prop, key) => {\n            return (\n              <th\n                className={classnames(\"\", {\n                  \"text-right\": props.thead.length - 1 === key,\n                })}\n                key={key}\n              >\n                {prop.text}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {props.tbody.map((prop, key) => {\n          return (\n            <tr\n              className={classnames({\n                [prop.className]: prop.className !== undefined,\n              })}\n              key={key}\n            >\n              {prop.data.map((data, k) => {\n                return (\n                  <td\n                    className={classnames({\n                      [data.className]: data.className !== undefined,\n                    })}\n                    key={k}\n                  >\n                    {data.item}\n                  </td>\n                );\n              })}\n              {prop.actions && <td className=\"text-right\">{prop.actions}</td>}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nImsSimpleTable.propTypes = {\n  thead: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  tbody: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          className: PropTypes.string,\n          item: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.node,\n          ]).isRequired,\n        })\n      ).isRequired,\n      actions: PropTypes.node,\n    })\n  ).isRequired,\n};\n\nexport default ImsSimpleTable;\n","export const ELEMENT_TYPES = {\n  INLINE_DEFAULT: \"inline-default\",\n  BLOCK_DEFAULT: \"block-default\",\n  ATOMIC_ENTITY: \"atomic-entity\",\n};\n","export const ENTITY_NAME = {\n  IMAGE: \"image\",\n  DIVIDER: \"divider\",\n  LINK: \"link\",\n  MENTION: \"mention\",\n  CHECKLIST: \"checklist\",\n  ALIGN_LEFT: \"start\",\n  ALIGN_CENTER: \"center\",\n  ALIGN_RIGHT: \"end\",\n};\n","import { useCallback } from \"react\";\nimport defaultAvatar from \"assets/img/default-avatar.png\";\nexport default function Entry({\n  name,\n  profileImageUrl,\n  _id,\n  onSelect = () => {},\n}) {\n  let handleSelect = useCallback((e) => {\n    e.preventDefault();\n    onSelect({ name, profileImageUrl, _id });\n  });\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div className=\"avatar mb-1\">\n        <img src={profileImageUrl || defaultAvatar} alt={name} />\n      </div>\n      <div onClick={handleSelect} className=\"btn btn-link p-2 mb-1\">\n        {name}\n      </div>\n    </div>\n  );\n}\n","import { TextEditorContext } from \"../../../Context\";\nimport { useContext } from \"react\";\nimport Entry from \"./Entry\";\nexport default function MentionSuggestions({ suggestions, ...rest }) {\n  let { computedPosForMentionSuggestions } = useContext(TextEditorContext);\n  return (\n    <>\n      {suggestions.length ? (\n        <div\n          className=\"mention-suggestions position-absolute mt-4 p-2 shadow-md\"\n          style={{ ...computedPosForMentionSuggestions }}\n        >\n          {suggestions.map((suggestion, index) => {\n            return (\n              <Entry key={suggestion.name + index} {...suggestion} {...rest} />\n            );\n          })}\n        </div>\n      ) : null}\n    </>\n  );\n}\n","export function findWithRegex(regex, contentBlock, callback) {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX = /\\B@\\w+/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function mentionStrategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX =\n  /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function strategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  EditorState,\n  RichUtils,\n  AtomicBlockUtils,\n  convertToRaw,\n  convertFromRaw,\n  ContentState,\n  CompositeDecorator,\n  Modifier,\n  SelectionState,\n} from \"draft-js\";\nimport { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\nimport { mentionDecorator } from \"./entities/Mentions\";\nimport { httpsLinkDecorator } from \"./entities/HttpsLink\";\nimport { textLinkDecorator, handleCreateLink } from \"./entities/Link\";\nconst compositeDecorator = new CompositeDecorator([\n  mentionDecorator,\n  httpsLinkDecorator,\n  textLinkDecorator,\n]);\nexport default function useTextEditor(config) {\n  const editorRef = useRef(null);\n  const [editorState, setEditorState] = useState(\n    EditorState.createEmpty(compositeDecorator)\n  );\n  const [focusedForEditing, setFocusedForEditing] = useState(false);\n  const [\n    computedPosForMentionSuggestions,\n    setComputedPosForMentionSuggestions,\n  ] = useState({ display: \"none\" });\n  const updateComputedPosForMentionSuggestions = (position) =>\n    setComputedPosForMentionSuggestions(position);\n  /**\n   * the following effect block handles if the component is being\n   * controlled by outside values.\n   */\n  const activateEditor = () => setFocusedForEditing(true);\n  const deactivateEditor = () => setFocusedForEditing(false);\n  useEffect(() => {\n    let currentContent;\n    try {\n      if (typeof config.value === \"string\") {\n        currentContent = JSON.parse(config.value);\n      }\n      if (typeof config.value === \"object\") {\n        currentContent = config.value;\n      }\n    } catch (err) {\n      console.log(err);\n      /**\n       * here we are handling if the content parsing failes because if preexisting\n       * plain text, we are converting that into a draft data structure for future\n       * this is usefull for handling legacy data or automatic migration to draft data\n       * structure\n       */\n      if (typeof config.value === \"string\")\n        return handleEditorStateChange(\n          EditorState.createWithContent(\n            ContentState.createFromText(config.value)\n          )\n        );\n    }\n    if (config.value || currentContent) {\n      return handleEditorStateChange(\n        EditorState.set(editorState, {\n          currentContent: convertFromRaw(currentContent),\n          /**\n           * following solution is implemented to get the direction map for the editor\n           * with current content. Draftjs has got an issue with direction map.\n           * see issue : https://github.com/facebook/draft-js/issues/1820\n           */\n          directionMap: EditorState.createWithContent(\n            convertFromRaw(currentContent)\n          ).getDirectionMap(),\n        })\n      );\n    }\n    return handleEditorStateChange(EditorState.createEmpty(compositeDecorator));\n  }, [config.value]);\n  const fileInput = useRef(null);\n  const _openFilePrompt = () => fileInput.current.click();\n  const _createAtomicBlockEntity = (command, data) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      command,\n      \"IMMUTABLE\",\n      { ...data }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(\n      editorState,\n      { currentContent: contentStateWithEntity },\n      \"create-entity\"\n    );\n    handleEditorStateChange(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n  };\n  /**\n   * this function allows this component user to define own link generator.\n   * usefull if someone wants to preprocess a file through a backend before\n   * using as am image src or achor href\n   * @param {*} metaData\n   * @returns {Promise}\n   */\n  const generateLink = async (metaData) => {\n    if (!config.linkGeneratorFn || typeof config.linkGeneratorFn !== \"function\")\n      return null;\n    return config.linkGeneratorFn(metaData);\n  };\n  /**\n   * this function updates editors state for the current instance of the component\n   * @param {EditorState} editorState\n   */\n  const handleEditorStateChange = (editorState) => {\n    const contentState = editorState.getCurrentContent();\n    setEditorState(editorState);\n    // console.log(JSON.stringify(convertToRaw(contentState)))\n    config.onDataStructureChange(JSON.stringify(convertToRaw(contentState)));\n  };\n  const handleKeyCommand = (command, editorState) => {\n    let newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleEditorStateChange(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n  const _handleFiles = async (files) => {\n    if (!config.handleUpload)\n      return console.log(\"Uploader function not specified\");\n    let areImages = files.every((file) => file.type.split(\"/\")[0] === \"image\");\n    /** todo: check file size here */\n    if (!areImages) return console.log(\"All files has to be images\");\n    try {\n      let storageInformations = await Promise.all(\n        files.map((file) => config.handleUpload(file))\n      );\n      console.log(storageInformations);\n      if (!storageInformations.every((storageInfo) => storageInfo))\n        console.log(\"one or mutiple files don't have storage info\");\n      storageInformations.map((storageInfo) =>\n        _createAtomicBlockEntity(ENTITY_NAME.IMAGE, {\n          storageInfo,\n        })\n      );\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  const _handleFileInputChange = (e) => {\n    e.preventDefault();\n    let files = e.target.files;\n    _handleFiles(Array.from(files));\n  };\n  const getFileInputProps = () => ({\n    ref: fileInput,\n    onChange: _handleFileInputChange,\n  });\n  const _atomicEntityController = {\n    [ENTITY_NAME.IMAGE]: _openFilePrompt,\n    [ENTITY_NAME.LINK]: () =>\n      handleEditorStateChange(handleCreateLink(editorState)),\n    [ENTITY_NAME.DIVIDER]: () =>\n      _createAtomicBlockEntity(ENTITY_NAME.DIVIDER, {}),\n    [ENTITY_NAME.MENTION]: () => {},\n    [ENTITY_NAME.CHECKLIST]: () => {\n      _createAtomicBlockEntity(ENTITY_NAME.CHECKLIST, {});\n    },\n  };\n  const _buttonHandlers = {\n    [ELEMENT_TYPES.INLINE_DEFAULT]: (command) =>\n      handleEditorStateChange(\n        RichUtils.toggleInlineStyle(editorState, command)\n      ),\n    [ELEMENT_TYPES.BLOCK_DEFAULT]: (command) =>\n      handleEditorStateChange(RichUtils.toggleBlockType(editorState, command)),\n    [ELEMENT_TYPES.ATOMIC_ENTITY]: (command) => {\n      _atomicEntityController[command]();\n    },\n  };\n  const handleToolClick = (tool, e) => {\n    e.preventDefault();\n    if (!editorState.getSelection().getHasFocus()) return null;\n    if (!tool?.element) return null;\n    _buttonHandlers[tool.element](tool.style);\n  };\n  const handleDroppedFiles = (selection, files) => _handleFiles(files);\n  const handlePastedFiles = (files) => _handleFiles(files);\n  const handleMentionSelect = (\n    contentState,\n    blockKey,\n    position,\n    mentionData\n  ) => {\n    let selectionState = SelectionState.createEmpty(blockKey);\n    let newContentState = contentState.createEntity(\n      ENTITY_NAME.MENTION,\n      \"IMMUTABLE\",\n      {\n        ...mentionData,\n      }\n    );\n    let entityKey = newContentState.getLastCreatedEntityKey();\n    newContentState = Modifier.replaceText(\n      contentState,\n      selectionState.merge({\n        // The starting position of the range to be replaced.\n        anchorOffset: position.start,\n        // The end position of the range to be replaced.\n        focusOffset: position.end,\n      }),\n      mentionData.mention,\n      editorState.getCurrentInlineStyle(),\n      entityKey\n    );\n    handleEditorStateChange(\n      /**\n       * in following solution we had to use moveFocusToEnd() and the force the\n       * selecion back to replaced text from  new content through forceSelection().\n       * This creates an effect that the cursor is at the end of mentioend name.\n       * Draftjs has got an issue with cursor positioning with entity and modifier.\n       * see issue : https://github.com/facebook/draft-js/issues/627\n       *\n       * otherwise expected behaviour is to only do an EditorState.set() to put the\n       * mentioned entity in the editor in the identified selection state starting with @.\n       */\n      EditorState.forceSelection(\n        EditorState.moveFocusToEnd(\n          EditorState.set(editorState, { currentContent: newContentState })\n        ),\n        newContentState.getSelectionAfter()\n      )\n    );\n  };\n  const forceFocusEditorEnd = (e) => {\n    e?.preventDefault && e.preventDefault();\n    editorRef.current.editor?.focus();\n    handleEditorStateChange(EditorState.moveFocusToEnd(editorState));\n  };\n  return {\n    editorRef,\n    editorState,\n    computedPosForMentionSuggestions,\n    focusedForEditing,\n    getFileInputProps,\n    generateLink,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleEditorStateChange,\n    handleKeyCommand,\n    handleToolClick,\n    forceFocusEditorEnd,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n    activateEditor,\n    deactivateEditor,\n  };\n}\n","import Mention from \"./Mention\"\nimport { mentionStrategy } from \"./mentionStrategy\"\nexport const mentionDecorator = {\n  strategy: mentionStrategy,\n  component: Mention,\n}","import { useEffect, useContext, useCallback, useRef } from \"react\";\nimport { TextEditorContext } from \"../../Context\";\nimport MentionSuggestions from \"./Suggestions/Index\";\nexport default function Mention(props) {\n  let mentionInputRef = useRef(null);\n  let {\n    editorRef,\n    mentionSuggestions,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n  } = useContext(TextEditorContext);\n  const computeStylePos = useCallback(() => {\n    const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n    let leftSpace =\n      editorRect.width - mentionInputRef.current.offsetLeft < 240\n        ? mentionInputRef.current.offsetLeft - 230\n        : mentionInputRef.current.offsetLeft;\n    return {\n      left: leftSpace,\n      top: mentionInputRef.current.offsetTop,\n      display: \"block\",\n    };\n  }, []);\n  const hideSuggestions = useCallback(() => {\n    return {\n      display: \"none\",\n    };\n  }, []);\n  useEffect(() => {\n    if (mentionInputRef.current)\n      updateComputedPosForMentionSuggestions(computeStylePos());\n  }, []);\n  function retriveEntityData() {\n    if (!props.entityKey) return null;\n    const entity = props.contentState.getEntity(props.entityKey);\n    return { ...entity?.getData() };\n  }\n  return (\n    <>\n      {retriveEntityData() ? (\n        <a\n          href={\"/admin/users/\" + retriveEntityData()._id}\n          className=\"text-primary\"\n        >\n          {retriveEntityData().name}\n        </a>\n      ) : (\n        <span ref={mentionInputRef} className=\"\">\n          {props.children}\n        </span>\n      )}\n      <MentionSuggestions\n        suggestions={mentionSuggestions.filter((item) =>\n          item.name\n            .toLowerCase()\n            .includes(\n              props.decoratedText\n                .slice(1, props?.decoratedText?.length)\n                .toLowerCase()\n            )\n        )}\n        onSelect={({ name, profileImageUrl, _id }) => {\n          let userName = \"@\" + name.split(\" \").join(\"_\");\n          handleMentionSelect(\n            props.contentState,\n            props.blockKey,\n            { start: props.start, end: props.end },\n            { mention: userName + \" \", profileImageUrl, _id, name } // adding a trailing whitespace to create a smooth experience\n          );\n          updateComputedPosForMentionSuggestions(hideSuggestions());\n        }}\n      />\n    </>\n  );\n}\n","import HTTPSLink from \"./HTTPSLink\";\nimport { strategy } from \"./stategy\";\nexport const httpsLinkDecorator = {\n  strategy,\n  component: HTTPSLink,\n};\n","export default function HTTPSLink(props) {\n  return (\n    <a\n      href={props.decoratedText}\n      title={props.decoratedText}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {props.children}\n    </a>\n  );\n}\n","/**\n * TODO: following piece of codes are unstable and buggy need to \n * work on these before integration.\n */\nimport {\n  CompositeDecorator,\n  EditorState,\n  Modifier,\n} from \"draft-js\";\nimport { ENTITY_NAME } from \"./entityNames\";\nconst findLinkEntities = (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === ENTITY_NAME.LINK\n    );\n  }, callback);\n};\nexport const textLinkDecorator = {\n  strategy: findLinkEntities,\n  component: Link,\n};\nexport let createTextLinkDecorator = () =>\n  new CompositeDecorator([textLinkDecorator]);\nexport const handleCreateLink = (editorState) => {\n  let link = window.prompt(\"Paste the link bellow:\");\n  if (link) {\n    let linkText = window.prompt(\"Paste the link-text below:\");\n    if (linkText) {\n      const currentContent = editorState.getCurrentContent();\n      currentContent.createEntity(ENTITY_NAME.LINK, \"MUTABLE\", {\n        href: link,\n        linkText,\n      });\n      let entityKey = currentContent.getLastCreatedEntityKey();\n      const selection = editorState.getSelection();\n      const contentWithTextLinkEntity = Modifier.replaceText(\n        currentContent,\n        selection,\n        linkText,\n        null,\n        entityKey\n      );\n      const newSelectionState = selection.set(\n        \"anchorOffset\",\n        selection.getAnchorOffset() + linkText.length\n      );\n      const editorStateWithTextLinkEntity = EditorState.set(\n        editorState,\n        {\n          currentContent: contentWithTextLinkEntity,\n        },\n        \"create-entity\"\n      );\n      const editorStateWithNewSelection = EditorState.forceSelection(\n        editorStateWithTextLinkEntity,\n        newSelectionState\n      );\n      console.log(\n        newSelectionState.getAnchorOffset(),\n        \"editor selection anchor offset after link insert:\",\n        editorStateWithNewSelection.getSelection().getAnchorOffset()\n      );\n      return editorStateWithNewSelection;\n    }\n  }\n};\nexport default function Link(props) {\n  let data = props.contentState.getEntity(props.entityKey).getData();\n  if (!!data.href) {\n    return (\n      <a\n        href={data.href}\n        title={data.linkText}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {data.linkText || data.href}\n      </a>\n    );\n  }\n  return null;\n}\n","import React from \"react\";\nimport useTextEditor from \"./useTextEditor\";\nexport const TextEditorContext = React.createContext();\nconst TextEditorContextProvider = ({ children, ...rest }) => {\n  let { ...editorUtils } = useTextEditor({\n    handleUpload: rest.handleUpload || async function () {},\n    linkGeneratorFn: rest.linkGeneratorFn,\n    onDataStructureChange: rest.onDataStructureChange || function () {},\n    value: rest.value || null,\n  });\n  return (\n    <TextEditorContext.Provider\n      value={{\n        ...editorUtils,\n        mentionSuggestions: rest.mentionSuggestions || [],\n      }}\n    >\n      {children}\n    </TextEditorContext.Provider>\n  );\n};\nexport default TextEditorContextProvider;\n","import React from \"react\";\nexport default function Image(props) {\n  if (props.src || props.link) {\n    return (\n      <img\n        src={props.src || props.link}\n        alt={props.alt || props.storageInfo?.Key || \"...\"}\n        className=\"unselectable\"\n      />\n    );\n  }\n  return null;\n}\n","export default function Divider() {\n  return <hr></hr>;\n}\n","import React from \"react\";\nexport default function CheckListItem({ text }) {\n  return <React.Fragment></React.Fragment>;\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n/** block sizes are measured in percentage */\nconst partitions = [\n  0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,\n  100,\n];\nexport default function StretchBar({\n  editorRef,\n  onResizeEnd,\n  reference = \"left\",\n  currentSize = 10,\n  ...rest\n}) {\n  let [isDragging, setIsDragging] = React.useState(false);\n  let [currentlyHoverring, setCurrentlyHovering] = React.useState(currentSize);\n  /**\n   * we are getting editor bounding client rectangle to calculate\n   * styles in mutiple places for better fitting our resizing algorithm\n   */\n  const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n  /**\n   * following function generates guide positions both in pixels and percentages\n   * when user is dragging to resize\n   */\n  let getGuidePositions = () =>\n    partitions.map((part) => {\n      /**\n       * we are mapping out the partitions to it's corresponding\n       * abolute \"X\" pixels. editors left padding is added as an offset\n       * balance to all the absolute positioned guide elements.\n       */\n      let editorPaddingOffset = parseInt(\n        window\n          .getComputedStyle(\n            document.querySelector(\".draft-editor-container\"),\n            null\n          )\n          .getPropertyValue(\"padding-left\")\n      );\n      let offset = (editorRect.width * part) / 100;\n      return {\n        percentage: part,\n        pixels: Math.ceil(offset),\n      };\n    });\n  let handleMouseDown = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      const doDrag = (e) => {\n        /** we are copying the partitions constant so action array is not muted */\n        let partitionsCopy = [...partitions];\n        setIsDragging(true);\n        /** the algorithm finds the closed partiion to the current cursor\n         * and sorts the closed at the begining of the array.\n         * --------------------------------------------------------------\n         * caution: do not use e.offesetX (because event.offsetX changes depending on hovering element)\n         * alway good to calculate the offset value\n         */\n        let fullLength =\n          reference === \"center\" ? editorRect.width / 2 : editorRect.width;\n        let refLine =\n          reference === \"center\"\n            ? editorRect.left + editorRect.width / 2\n            : reference === \"end\"\n            ? editorRect.left + editorRect.width\n            : editorRect.left;\n        let calculatedOffsetX = parseInt(Math.abs(e.clientX - refLine));\n        let needle = parseInt((calculatedOffsetX / fullLength) * 100);\n        partitionsCopy.sort((a, b) => {\n          return Math.abs(needle - a) - Math.abs(needle - b);\n        });\n        /** we pick the closest partition position as the reszied to data */\n        let resizedTo = partitionsCopy[0];\n        setCurrentlyHovering(resizedTo);\n        let createdEvent = { partition: resizedTo };\n        onResizeEnd && onResizeEnd(createdEvent);\n        let entityKey = rest.block.getEntityAt(0);\n        rest.contentState.mergeEntityData(entityKey, { size: resizedTo });\n      };\n      const stopDrag = () => {\n        setIsDragging(false);\n        document.removeEventListener(\"mousemove\", doDrag, false);\n        document.removeEventListener(\"mouseup\", stopDrag, false);\n        /**\n         * - handle drag state\n         * - handle resized data\n         */\n      };\n      document.addEventListener(\"mousemove\", doDrag, false);\n      document.addEventListener(\"mouseup\", stopDrag, false);\n    },\n    [onResizeEnd]\n  );\n  return (\n    <>\n      <div\n        className=\"d-inline-block p-2 unselectable\"\n        style={{ cursor: \"col-resize\" }}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"bg-primary rounded resize-bar\"></div>\n      </div>\n      {/**\n       * follwing portion is rendering the guide elements\n       */}\n      {isDragging && (\n        <div className=\"resize-guides-container position-absolute \">\n          {getGuidePositions().map((guide) => {\n            return (\n              <div\n                key={guide.pixels}\n                className={classnames(\n                  \"resize-guide position-absolute rounded\",\n                  {\n                    \"bg-info\":\n                      /** match if alligned at left/start  */\n                      (reference === \"start\" &&\n                        guide.percentage === currentlyHoverring) ||\n                      /** match if alligned at right/end  */\n                      (reference === \"end\" &&\n                        100 - guide.percentage === currentlyHoverring),\n                  }\n                )}\n                style={{\n                  left: guide.pixels,\n                }}\n              ></div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n}\n","import { Button } from \"reactstrap\";\nimport React, { useCallback } from \"react\";\nimport { ENTITY_NAME } from \"../entityNames\";\nimport classNames from \"classnames\";\nconst alignTools = [\n  {\n    label: \"Align left\",\n    style: ENTITY_NAME.ALIGN_LEFT,\n    icon: \"fa-solid fa-align-left\",\n  },\n  {\n    label: \"Align center\",\n    style: ENTITY_NAME.ALIGN_CENTER,\n    icon: \"fa-solid fa-align-justify\",\n  },\n  {\n    label: \"Align right\",\n    style: ENTITY_NAME.ALIGN_RIGHT,\n    icon: \"fa-solid fa-align-right\",\n  },\n];\nexport default function Aligner({ editorRef, onAlignmentChange, ...rest }) {\n  let handleAlignment = useCallback(\n    ({ alignment }) => {\n      onAlignmentChange && onAlignmentChange({ alignment });\n      let entityKey = rest.block.getEntityAt(0);\n      rest.contentState.mergeEntityData(entityKey, { alignment: alignment });\n    },\n    [onAlignmentChange]\n  );\n  return (\n    <div className=\"d-inline-block shadow-md rounded mb-1\">\n      {alignTools.map((tool) => {\n        return (\n          <Button\n            title={tool?.label}\n            type=\"button\"\n            className={classNames(\"btn btn-icon m-0 text-muted\", {})}\n            key={tool?.style}\n            onClick={(e) => handleAlignment({ alignment: tool?.style })}\n          >\n            {tool.icon ? <i className={tool.icon} /> : tool?.label}\n          </Button>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport StretchBar from \"./StretchBar\";\nimport Aligner from \"./Aligner\";\nimport { ENTITY_NAME } from \"../entityNames\";\nexport default function Resizer({ children, ...rest }) {\n  let [isActive, setIsActive] = React.useState(false);\n  let toggleIsActive = () => setIsActive((curret) => !curret);\n  let [currentSize, setCurrentSize] = React.useState(rest.size || 30);\n  let [alignment, setAlignment] = React.useState(\n    rest.alignment || ENTITY_NAME.ALIGN_LEFT\n  );\n  let alignementClasses = () => ({\n    \"justify-content-start\": alignment === \"start\",\n    \"justify-content-center\": alignment === \"center\",\n    \"justify-content-end\": alignment === \"end\",\n  });\n  return (\n    <>\n      {isActive && alignment && (\n        <div className={classnames(\"d-flex\", alignementClasses())}>\n          <Aligner\n            onAlignmentChange={(e) => setAlignment(e.alignment)}\n            {...rest}\n          />\n        </div>\n      )}\n      <div\n        className={classnames(\"d-flex align-items-center position-relative\", alignementClasses())}\n      >\n        {isActive && alignment !== \"start\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n        <div\n          className={classnames(\n            \"d-inline-block rounded resize-container unselectable\",\n            {\n              \"resize-focused\": isActive,\n              \"w-10\": currentSize === 10,\n              \"w-15\": currentSize === 15,\n              \"w-20\": currentSize === 20,\n              \"w-25\": currentSize === 25,\n              \"w-30\": currentSize === 30,\n              \"w-35\": currentSize === 35,\n              \"w-40\": currentSize === 40,\n              \"w-45\": currentSize === 45,\n              \"w-50\": currentSize === 50,\n              \"w-55\": currentSize === 55,\n              \"w-60\": currentSize === 60,\n              \"w-65\": currentSize === 65,\n              \"w-70\": currentSize === 70,\n              \"w-75\": currentSize === 75,\n              \"w-80\": currentSize === 80,\n              \"w-85\": currentSize === 85,\n              \"w-90\": currentSize === 90,\n              \"w-95\": currentSize === 95,\n              \"w-100\": currentSize === 100,\n            }\n          )}\n          onClick={toggleIsActive}\n        >\n          {children}\n        </div>\n        {isActive && alignment !== \"end\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            currentSize={currentSize}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Image from \"./Image\";\nimport Link from \"./Link\";\nimport Divider from \"./Divider\";\nimport CheckListItem from \"./CheckListItem\";\nimport { ENTITY_NAME } from \"./entityNames\";\nimport Resizer from \"./ResizeTool/Index\";\n\nexport default function Media({ type, data, editorControllers, ...rest }) {\n  let media = null;\n  let toolProperties = { ...data, ...editorControllers, ...rest };\n  if (type === ENTITY_NAME.IMAGE) {\n    media = (\n      <Resizer {...toolProperties}>\n        <Image {...data} />\n      </Resizer>\n    );\n  }\n  if (type === ENTITY_NAME.DIVIDER) {\n    media = <Divider {...data} />;\n  }\n  if (type === ENTITY_NAME.CHECKLIST) {\n    media = <CheckListItem {...data} />;\n  }\n  return media;\n}\n","import React, { useContext } from \"react\";\nimport usePreRenderProcessing from \"./usePreRenderProcessing\";\nimport { TextEditorContext } from \"../Context\";\nimport Media from \"./Media\";\nexport const editorMediaBlockRenderer = (block) => {\n  if (block.getType() === \"atomic\") {\n    return {\n      component: ProcessedMedia,\n      editable: false,\n    };\n  }\n  return null;\n};\nconst ProcessedMedia = (props) => {\n  const entityKey = props.block.getEntityAt(0);\n  const entity = entityKey && props.contentState.getEntity(entityKey);\n  const type = entity?.getType();\n  const { generateLink, ...rest } = useContext(TextEditorContext);\n  let processedResults = usePreRenderProcessing({\n    generateLink,\n    ...entity?.getData(),\n  });\n  return (\n    <Media\n      type={type}\n      data={{\n        ...entity?.getData(),\n        ...processedResults,\n      }}\n      editorControllers={{ ...rest }}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport noImagePlaceHolder from \"assets/img/default-avatar.png\";\nexport default function usePreRenderProcessing(config) {\n  let [link, setLink] = React.useState(config.src);\n  React.useEffect(() => {\n    async function _prepareSource() {\n      /**\n       * we are trying to generate the link with some meta data as a second step\n       * if src is not provided. if the data can't generate link it will render\n       * the empty placeholder. this feature is usefull if someone wants to generate \n       * image src/link based on runtime thorugh a backend server.\n       */\n      if (!config.src) {\n        try {\n          if (!config.generateLink || typeof config.generateLink !== \"function\")\n            throw Error(\"link gnerator function must be supplied\");\n          let link = await config.generateLink(config.storageInfo);\n          if (!link)\n            throw new Error(\n              \"link generator function must return a valid link or else provide a valid  image source\"\n            );\n          setLink(link);\n        } catch (err) {\n          setLink(noImagePlaceHolder);\n          console.log(err);\n        }\n      }\n    }\n    _prepareSource();\n    return () => {};\n  }, [config.generateLink]);\n  return {\n    link,\n  };\n}\n","import React from \"react\";\nimport { Editor } from \"draft-js\";\nimport { TextEditorContext } from \"./Context\";\nimport { editorMediaBlockRenderer } from \"./entities/editorMediaBlockRenderer\";\nexport default function TextEditor({ readOnly = false, ...props }) {\n  const {\n    editorRef,\n    editorState,\n    handleEditorStateChange,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleKeyCommand,\n    activateEditor,\n    deactivateEditor,\n  } = React.useContext(TextEditorContext);\n  return (\n    <>\n      <Editor\n        ref={editorRef}\n        blockRendererFn={editorMediaBlockRenderer}\n        placeholder={props.placeholder}\n        onChange={handleEditorStateChange}\n        editorState={editorState}\n        spellCheck={true}\n        handleKeyCommand={handleKeyCommand}\n        handleDroppedFiles={handleDroppedFiles}\n        handlePastedFiles={handlePastedFiles}\n        readOnly={readOnly}\n        onFocus={activateEditor}\n        onBlur={deactivateEditor}\n      />\n    </>\n  );\n}\n","import { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\n\nexport const INLINE_TYPES = [\n  {\n    label: \"Underline\",\n    style: \"UNDERLINE\",\n    icon: \"fa-solid fa-underline\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Bold\",\n    style: \"BOLD\",\n    icon: \"fa-solid fa-bold\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Italic\",\n    style: \"ITALIC\",\n    icon: \"fa-solid fa-italic\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Strike through\",\n    style: \"STRIKETHROUGH\",\n    icon: \"fa-solid fa-strikethrough\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n];\nexport const BLOCK_TYPES = [\n  {\n    label: \"Header\",\n    style: \"header-three\",\n    icon: \"fa-solid fa-heading\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"UL\",\n    style: \"unordered-list-item\",\n    icon: \"fa-solid fa-list\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"OL\",\n    style: \"ordered-list-item\",\n    icon: \"fa-solid fa-list-ol\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Blockquote\",\n    style: \"blockquote\",\n    icon: \"fa-solid fa-quote-left\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Code block\",\n    style: \"code-block\",\n    icon: \"fa-solid fa-code\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  // {\n  //   lebel: \"Align left\",\n  //   style: \"editor-alignment-left\",\n  //   icon: \"fa-solid fa-align-left\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align center\",\n  //   style: \"editor-alignment-center\",\n  //   icon: \"fa-solid fa-align-center\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align right\",\n  //   style: \"editor-alignment-right\",\n  //   icon: \"fa-solid fa-align-right\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align justify\",\n  //   style: \"editor-alignment-justify\",\n  //   icon: \"fa-solid fa-align-justify\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n];\nexport const ENTITY_TYPES = [\n  // {\n  //   label: \"Link\",\n  //   style: ENTITY_NAME.LINK,\n  //   icon: \"fa-solid fa-link\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Image\",\n    style: ENTITY_NAME.IMAGE,\n    icon: \"fa-solid fa-images\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n  // {\n  //   label: \"Mention\",\n  //   style: ENTITY_NAME.MENTION,\n  //   icon: \"fa-solid fa-at\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  // {\n  //   lable: \"CL\",\n  //   style: ENTITY_NAME.CHECKLIST,\n  //   icon: \"fa-solid fa-list-check\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Divider\",\n    style: ENTITY_NAME.DIVIDER,\n    icon: \"fa-solid fa-minus\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n];\nconst toolType = {\n  INLINE_TYPES,\n  BLOCK_TYPES,\n  ENTITY_TYPES,\n};\n\nexport default toolType;\n","export default function ButtonSeparator(props) {\n  return <span className=\"draft-toolbar-button-separator\">|</span>;\n}\n","import React from \"react\";\nconst FilePicker = React.forwardRef((props, ref) => {\n  return (\n    <input\n      {...props}\n      ref={ref}\n      className=\"d-none\"\n      type={\"file\"}\n      accept={props.accept || \"image/*\"}\n    />\n  );\n});\nexport default FilePicker;\n","import React from \"react\";\nimport { TextEditorContext } from \"./Context\";\nimport toolTypes from \"./toolTypes\";\nimport ButtonSeparator from \"./ButtonSeparator\";\nimport { Button } from \"reactstrap\";\nimport FilePicker from \"./FilePicker\";\nimport classNames from \"classnames\";\nexport default function ToolBar(props) {\n  const { getFileInputProps, editorState, handleToolClick } =\n    React.useContext(TextEditorContext);\n  return (\n    <>\n      <FilePicker {...getFileInputProps()} />\n      {Object.keys(toolTypes).map((type, index) => {\n        return (\n          <React.Fragment key={type}>\n            {toolTypes[type]?.map((tool) => {\n              return (\n                <Button\n                  title={tool?.label}\n                  // type=\"button\"\n                  className={\"btn btn-icon text-muted m-0\"}\n                  key={tool?.style}\n                  onMouseDown={(e) => handleToolClick(tool, e)}\n                >\n                  {tool.icon ? (\n                    <i\n                      className={classNames(tool.icon, {\n                        \"text-primary\":\n                          editorState\n                            .getCurrentInlineStyle()\n                            .has(tool?.style) ||\n                          editorState\n                            ?.getCurrentContent()\n                            .getBlockForKey(\n                              editorState?.getSelection().getStartKey()\n                            )\n                            .getType() === tool?.style,\n                      })}\n                    />\n                  ) : (\n                    tool?.label\n                  )}\n                </Button>\n              );\n            })}\n            {index < Object.keys(toolTypes).length - 1 && <ButtonSeparator />}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","import React from \"react\";\nimport TextEditor from \"./TextEditor\";\nimport { TextEditorContext } from \"./Context\";\nimport ToolBar from \"./Toolbar\";\nimport classnames from \"classnames\";\nexport default function WrappedEditor(props) {\n  const { forceFocusEditorEnd, focusedForEditing } =\n    React.useContext(TextEditorContext);\n  return (\n    <div\n      className={classnames(\"draft-editor-container d-flex flex-column\", {\n        \"editor-disabled\": props.readOnly,\n        \"editor-active\": focusedForEditing,\n      })}\n    >\n      {!props.readOnly && (\n        <div>\n          <ToolBar {...props} />\n          <hr></hr>\n        </div>\n      )}\n      <TextEditor {...props} />\n      {/**\n       * following portion helps to focus on the actual text area\n       * when unedited remaing area is clicked.\n       */}\n      <div className=\"flex-grow-1\" onMouseDown={forceFocusEditorEnd}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextEditorContextProvider from \"./Context\";\nimport WrappedEditor from \"./WrappedEditor\";\nimport PropTypes from \"prop-types\";\nexport default function Index(props) {\n  return (\n    <TextEditorContextProvider {...props}>\n      <WrappedEditor {...props} />\n    </TextEditorContextProvider>\n  );\n}\nIndex.propTypes = {\n  /** pre populated contents in the editor */\n  value: PropTypes.string,\n  /** link generator function helps to  get the file links */\n  linkGeneratorFn: PropTypes.func,\n  /** helps to specify where any media resource should be stored */\n  handleUpload: PropTypes.func,\n};\n"],"names":["Object","assign","leftIcon","rightIcon","Button","prototype","props","BtnBase","_jsxs","_extends","children","_jsx","className","classNames","jsx","propTypes","PropTypes","string","Card","CardBase","CardBody","CardBodyBase","CardFooter","CardFooterBase","CardHeader","CardHeaderBase","Dropdown","DropdownBase","_ref","_objectDestructuringEmpty","_excluded","startIcon","endIcon","caret","DropdownToggle","DropdownToogleBase","_Fragment","Fragment","jsxs","bool","DropdownMenu","DropdownMenuBase","DropdownItem","DropdownItemBase","_ref$leftIcon","_ref$rightIcon","_ref$leftIconStyle","leftIconStyle","_ref$rightIconStyle","rightIconStyle","_objectWithoutPropertiesLoose","ImsSimpleTable","Table","striped","hover","thead","map","prop","key","classnames","length","text","tbody","_classnames","undefined","data","k","_classnames2","item","actions","arrayOf","shape","isRequired","oneOfType","number","node","ELEMENT_TYPES","ENTITY_NAME","Entry","name","profileImageUrl","_id","_ref$onSelect","onSelect","handleSelect","useCallback","e","preventDefault","src","defaultAvatar","alt","onClick","MentionSuggestions","suggestions","rest","useContext","TextEditorContext","style","computedPosForMentionSuggestions","_useContext","suggestion","index","findWithRegex","regex","contentBlock","callback","matchArr","start","getText","exec","HANDLE_REGEX","compositeDecorator","CompositeDecorator","strategy","contentState","component","Mention","mentionInputRef","useRef","editorRef","mentionSuggestions","updateComputedPosForMentionSuggestions","handleMentionSelect","_editorRef$current","_editorRef$current$ed","left","current","editor","getBoundingClientRect","width","offsetLeft","top","offsetTop","display","hideSuggestions","retriveEntityData","entityKey","entity","getEntity","getData","useEffect","computeStylePos","href","ref","filter","toLowerCase","includes","decoratedText","slice","_props$decoratedText","userName","split","join","blockKey","end","mention","HTTPSLink","title","target","rel","findEntityRanges","character","getType","linkText","React","createContext","TextEditorContextProvider","useTextEditor","config","_atomicEntityControll","_buttonHandlers2","useState","EditorState","createEmpty","editorState","setEditorState","_useState","_useState2","focusedForEditing","setFocusedForEditing","_useState3","setComputedPosForMentionSuggestions","currentContent","value","JSON","parse","err","console","log","handleEditorStateChange","createWithContent","ContentState","createFromText","set","convertFromRaw","directionMap","getDirectionMap","fileInput","_createAtomicBlockEntity","command","contentStateWithEntity","getCurrentContent","createEntity","getLastCreatedEntityKey","AtomicBlockUtils","insertAtomicBlock","newEditorState","onDataStructureChange","stringify","convertToRaw","_handleFiles","files","handleUpload","areImages","every","file","type","Promise","resolve","body","recover","all","then","storageInformations","storageInfo","result","_catch","reject","_handleFileInputChange","Array","from","_atomicEntityController","click","link","window","prompt","selection","getSelection","Modifier","replaceText","newSelectionState","getAnchorOffset","contentWithTextLinkEntity","editorStateWithNewSelection","forceSelection","editorStateWithTextLinkEntity","handleCreateLink","RichUtils","toggleInlineStyle","toggleBlockType","getFileInputProps","onChange","generateLink","metaData","linkGeneratorFn","handleDroppedFiles","handlePastedFiles","handleKeyCommand","newState","handleToolClick","tool","getHasFocus","element","_buttonHandlers","forceFocusEditorEnd","focus","moveFocusToEnd","position","mentionData","selectionState","SelectionState","newContentState","merge","anchorOffset","focusOffset","getCurrentInlineStyle","getSelectionAfter","activateEditor","deactivateEditor","editorUtils","_useTextEditor","Provider","Image","_props$storageInfo","Key","Divider","CheckListItem","partitions","StretchBar","onResizeEnd","reference","_ref$reference","currentSize","_ref$currentSize","isDragging","_React$useState","setIsDragging","currentlyHoverring","setCurrentlyHovering","_React$useState2","editorRect","handleMouseDown","doDrag","partitionsCopy","fullLength","calculatedOffsetX","parseInt","Math","abs","clientX","needle","sort","a","b","resizedTo","partition","block","getEntityAt","mergeEntityData","size","document","addEventListener","stopDrag","removeEventListener","cursor","onMouseDown","getGuidePositions","part","getComputedStyle","querySelector","getPropertyValue","percentage","pixels","ceil","guide","alignTools","label","icon","Aligner","onAlignmentChange","handleAlignment","_ref2","alignment","Resizer","isActive","setIsActive","setCurrentSize","setAlignment","alignementClasses","curret","Media","media","toolProperties","editorControllers","editorMediaBlockRenderer","ProcessedMedia","editable","setLink","processedResults","noImagePlaceHolder","_prepareSource","TextEditor","readOnly","_ref$readOnly","Editor","_React$useContext","blockRendererFn","placeholder","spellCheck","onFocus","onBlur","INLINE_TYPES","toolType","BLOCK_TYPES","ENTITY_TYPES","ButtonSeparator","FilePicker","forwardRef","accept","ToolBar","keys","toolTypes","_toolTypes$type","has","getBlockForKey","getStartKey","WrappedEditor","Index","func"],"mappings":"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"}