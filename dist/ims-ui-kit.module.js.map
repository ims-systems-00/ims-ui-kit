{"version":3,"file":"ims-ui-kit.module.js","sources":["../src/components/Buttons/BtnBase.jsx","../src/components/Cards/CardBase.jsx","../src/components/Cards/CardBodyBase.jsx","../src/components/Cards/CardFooterBase.jsx","../src/components/Cards/CardHeaderBase.jsx","../src/components/Dropdowns/DropdownBase.jsx","../src/components/Dropdowns/DropdownToggleBase.jsx","../src/components/Dropdowns/DropdownMenuBase.jsx","../src/components/Dropdowns/DropdownItemBase.jsx","../src/components/Table/ImsSimpleTable.jsx","../src/components/TextEditor/elementTypes.js","../src/components/TextEditor/entities/entityNames.js","../src/components/TextEditor/entities/Mentions/Suggestions/Entry.jsx","../src/components/TextEditor/entities/Mentions/Suggestions/Index.jsx","../src/components/TextEditor/entities/utils/findWithRegex.js","../src/components/TextEditor/entities/Mentions/mentionStrategy.js","../src/components/TextEditor/entities/HttpsLink/stategy.js","../src/components/TextEditor/useTextEditor.js","../src/components/TextEditor/entities/Mentions/index.js","../src/components/TextEditor/entities/Mentions/Mention.jsx","../src/components/TextEditor/entities/HttpsLink/index.js","../src/components/TextEditor/entities/HttpsLink/HTTPSLink.jsx","../src/components/TextEditor/entities/Link.jsx","../src/components/TextEditor/Context.jsx","../src/components/TextEditor/entities/Image.jsx","../src/components/TextEditor/entities/Divider.jsx","../src/components/TextEditor/entities/CheckListItem.jsx","../src/components/TextEditor/entities/ResizeTool/StretchBar.jsx","../src/components/TextEditor/entities/ResizeTool/Aligner.jsx","../src/components/TextEditor/entities/ResizeTool/Index.jsx","../src/components/TextEditor/entities/Media.jsx","../src/components/TextEditor/entities/editorMediaBlockRenderer.js","../src/components/TextEditor/entities/usePreRenderProcessing.js","../src/components/TextEditor/TextEditor.jsx","../src/components/TextEditor/toolTypes.js","../src/components/TextEditor/ButtonSeparator.jsx","../src/components/TextEditor/FilePicker.jsx","../src/components/TextEditor/Toolbar.jsx","../src/components/TextEditor/WrappedEditor.jsx","../src/components/TextEditor/Index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet BtnBaseProps = Object.assign(\n  {\n    leftIcon: \"\",\n    rightIcon: \"\",\n  },\n  Button.prototype.props\n);\n\n/**\n *\n * @param {BtnBaseProps} props\n * @returns\n */\nconst BtnBase = (props) => {\n  return (\n    <Button {...props}>\n      {props.leftIcon ? (\n        <i className={classNames(props.leftIcon, \"me-2\")} />\n      ) : null}\n      {props.children}\n      {props.rightIcon ? (\n        <i className={classNames(props.rightIcon, \"ms-2\")} />\n      ) : null}\n    </Button>\n  );\n};\n\nBtnBase.propTypes = {\n  leftIcon: PropTypes.string,\n  rightIcon: PropTypes.string,\n  ...(Button.propTypes && Button.propTypes),\n};\n\nexport default BtnBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBaseProps = Object.assign({}, Card.prototype.props);\n\n/**\n *\n * @param {CardBaseProps} props\n * @returns\n */\nconst CardBase = (props) => {\n  return <Card {...props}>{props.children}</Card>;\n};\n\nCardBase.propTypes = {\n  ...(Card.propTypes && Card.propTypes),\n};\n\nexport default CardBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardBody } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBodyBaseProps = Object.assign({}, CardBody.prototype.props);\n\n/**\n *\n * @param {CardBodyBaseProps} props\n * @returns\n */\nconst CardBodyBase = (props) => {\n  return <CardBody {...props}>{props.children}</CardBody>;\n};\n\nCardBodyBase.propTypes = {\n  ...(CardBody.propTypes && CardBody.propTypes),\n};\n\nexport default CardBodyBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardFooter } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardFooterBaseProps = Object.assign({}, CardFooter.prototype.props);\n\n/**\n *\n * @param {CardFooterBaseProps} props\n * @returns\n */\nconst CardFooterBase = (props) => {\n  return <CardFooter {...props}>{props.children}</CardFooter>;\n};\n\nCardFooterBase.propTypes = {\n  ...(CardFooter.propTypes && CardFooter.propTypes),\n};\n\nexport default CardFooterBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardHeader } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardHeaderBaseProps = Object.assign({}, CardHeader.prototype.props);\n\n/**\n *\n * @param {CardHeaderBaseProps} props\n * @returns\n */\nconst CardHeaderBase = (props) => {\n  return <CardHeader {...props}>{props.children}</CardHeader>;\n};\n\nCardHeaderBase.propTypes = {\n  ...(CardHeader.propTypes && CardHeader.propTypes),\n};\n\nexport default CardHeaderBase;\n","import React from \"react\";\nimport { Dropdown } from \"reactstrap\";\nlet DropdownBaseProps = Object.assign({}, Dropdown.prototype.props);\n\n/**\n *\n * @param {DropdownBaseProps} props\n * @returns\n */\nconst DropdownBase = ({ ...props }) => {\n  return <Dropdown {...props}>{props.children}</Dropdown>;\n};\n\nDropdownBase.propTypes = {\n  ...(Dropdown.propTypes && Dropdown.propTypes),\n};\nexport default DropdownBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DropdownToggle } from \"reactstrap\";\n\nlet DropdownToogleBaseProps = Object.assign(\n  {\n    startIcon: \"\",\n    endIcon: \"\",\n    caret: true,\n  },\n  DropdownToggle.prototype.props\n);\n\n/**\n *\n * @param {DropdownToogleBaseProps} props\n * @returns\n */\n\nconst DropdownToogleBase = ({ caret, ...props }) => {\n  return (\n    <>\n      <DropdownToggle\n        caret={props.startIcon || props.endIcon ? false : props.caret}\n        {...props}\n      >\n        {props.startIcon && (\n          <i className={classNames(props.startIcon, \"me-2\")}></i>\n        )}\n        {props.children}\n        {props.endIcon && <i className={classNames(props.endIcon, \"ms-2\")}></i>}\n      </DropdownToggle>\n    </>\n  );\n};\n\nDropdownToogleBase.propTypes = {\n  startIcon: PropTypes.string,\n  endIcon: PropTypes.string,\n  caret: PropTypes.bool,\n  ...(DropdownToggle.propTypes && DropdownToggle.propTypes),\n};\n\nexport default DropdownToogleBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { DropdownMenu } from \"reactstrap\";\n\nlet DropdownMenuBaseProps = Object.assign({}, DropdownMenu.prototype.props);\n\n/**\n *\n * @param {DropdownMenuBaseProps} props\n * @returns\n */\nconst DropdownMenuBase = ({ ...props }) => {\n  return <DropdownMenu {...props}>{props.children}</DropdownMenu>;\n};\n\nDropdownMenuBase.propTypes = {\n  ...(DropdownMenu.propTypes && DropdownMenu.propTypes),\n};\nexport default DropdownMenuBase;\n","import React from \"react\";\nimport { DropdownItem } from \"reactstrap\";\nlet DropdownItemBaseProps = Object.assign({}, DropdownItem.prototype.props);\n\n/**\n *\n * @param {DropdownItemBaseProps} props\n * @returns\n */\nconst DropdownItemBase = ({\n  leftIcon = \"\",\n  rightIcon = \"\",\n  leftIconStyle = \"text-secondary\",\n  rightIconStyle = \"text-secondary\",\n  ...props\n}) => {\n  return (\n    <DropdownItem {...props} className=\"d-flex justify-content-between align-items-center\">\n      <span>\n        {leftIcon && <i className={`${leftIcon} ${leftIconStyle} me-2`} />}\n        {props.children}\n      </span>\n      {rightIcon && <i className={`${rightIcon} ${rightIconStyle}`} />}\n    </DropdownItem>\n  );\n};\n\nDropdownItemBase.propTypes = {\n  ...(DropdownItem.propTypes && DropdownItem.propTypes),\n};\n\nexport default DropdownItemBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Table } from \"reactstrap\";\n\nconst ImsSimpleTable = (props) => {\n  return (\n    <Table striped hover>\n      <thead>\n        <tr>\n          {props.thead.map((prop, key) => {\n            return (\n              <th\n                className={classnames(\"\", {\n                  \"text-right\": props.thead.length - 1 === key,\n                })}\n                key={key}\n              >\n                {prop.text}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {props.tbody.map((prop, key) => {\n          return (\n            <tr\n              className={classnames({\n                [prop.className]: prop.className !== undefined,\n              })}\n              key={key}\n            >\n              {prop.data.map((data, k) => {\n                return (\n                  <td\n                    className={classnames({\n                      [data.className]: data.className !== undefined,\n                    })}\n                    key={k}\n                  >\n                    {data.item}\n                  </td>\n                );\n              })}\n              {prop.actions && <td className=\"text-right\">{prop.actions}</td>}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nImsSimpleTable.propTypes = {\n  thead: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  tbody: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          className: PropTypes.string,\n          item: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.node,\n          ]).isRequired,\n        })\n      ).isRequired,\n      actions: PropTypes.node,\n    })\n  ).isRequired,\n};\n\nexport default ImsSimpleTable;\n","export const ELEMENT_TYPES = {\n  INLINE_DEFAULT: \"inline-default\",\n  BLOCK_DEFAULT: \"block-default\",\n  ATOMIC_ENTITY: \"atomic-entity\",\n};\n","export const ENTITY_NAME = {\n  IMAGE: \"image\",\n  DIVIDER: \"divider\",\n  LINK: \"link\",\n  MENTION: \"mention\",\n  CHECKLIST: \"checklist\",\n  ALIGN_LEFT: \"start\",\n  ALIGN_CENTER: \"center\",\n  ALIGN_RIGHT: \"end\",\n};\n","import { useCallback } from \"react\";\nimport defaultAvatar from \"assets/img/default-avatar.png\";\nexport default function Entry({\n  name,\n  profileImageUrl,\n  _id,\n  onSelect = () => {},\n}) {\n  let handleSelect = useCallback((e) => {\n    e.preventDefault();\n    onSelect({ name, profileImageUrl, _id });\n  });\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div className=\"avatar mb-1\">\n        <img src={profileImageUrl || defaultAvatar} alt={name} />\n      </div>\n      <div onClick={handleSelect} className=\"btn btn-link p-2 mb-1\">\n        {name}\n      </div>\n    </div>\n  );\n}\n","import { TextEditorContext } from \"../../../Context\";\nimport { useContext } from \"react\";\nimport Entry from \"./Entry\";\nexport default function MentionSuggestions({ suggestions, ...rest }) {\n  let { computedPosForMentionSuggestions } = useContext(TextEditorContext);\n  return (\n    <>\n      {suggestions.length ? (\n        <div\n          className=\"mention-suggestions position-absolute mt-4 p-2 shadow-md\"\n          style={{ ...computedPosForMentionSuggestions }}\n        >\n          {suggestions.map((suggestion, index) => {\n            return (\n              <Entry key={suggestion.name + index} {...suggestion} {...rest} />\n            );\n          })}\n        </div>\n      ) : null}\n    </>\n  );\n}\n","export function findWithRegex(regex, contentBlock, callback) {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX = /\\B@\\w+/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function mentionStrategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX =\n  /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function strategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import React, { useState } from \"react\";\nimport {\n  EditorState,\n  RichUtils,\n  AtomicBlockUtils,\n  convertToRaw,\n  convertFromRaw,\n  ContentState,\n  CompositeDecorator,\n  Modifier,\n  SelectionState,\n} from \"draft-js\";\nimport { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\nimport { mentionDecorator } from \"./entities/Mentions\";\nimport { httpsLinkDecorator } from \"./entities/HttpsLink\";\nimport { textLinkDecorator, handleCreateLink } from \"./entities/Link\";\nconst compositeDecorator = new CompositeDecorator([\n  mentionDecorator,\n  httpsLinkDecorator,\n  textLinkDecorator,\n]);\nexport default function useTextEditor(config) {\n  const editorRef = React.useRef(null);\n  const [editorState, setEditorState] = React.useState(\n    EditorState.createEmpty(compositeDecorator)\n  );\n  const [focusedForEditing, setFocusedForEditing] = useState(false);\n  const [\n    computedPosForMentionSuggestions,\n    setComputedPosForMentionSuggestions,\n  ] = React.useState({ display: \"none\" });\n  const updateComputedPosForMentionSuggestions = (position) =>\n    setComputedPosForMentionSuggestions(position);\n  /**\n   * the following effect block handles if the component is being\n   * controlled by outside values.\n   */\n  const activateEditor = () => setFocusedForEditing(true);\n  const deactivateEditor = () => setFocusedForEditing(false);\n  React.useEffect(() => {\n    let currentContent;\n    try {\n      if (typeof config.value === \"string\") {\n        currentContent = JSON.parse(config.value);\n      }\n      if (typeof config.value === \"object\") {\n        currentContent = config.value;\n      }\n    } catch (err) {\n      console.log(err);\n      /**\n       * here we are handling if the content parsing failes because if preexisting\n       * plain text, we are converting that into a draft data structure for future\n       * this is usefull for handling legacy data or automatic migration to draft data\n       * structure\n       */\n      if (typeof config.value === \"string\")\n        return handleEditorStateChange(\n          EditorState.createWithContent(\n            ContentState.createFromText(config.value)\n          )\n        );\n    }\n    if (config.value || currentContent) {\n      return handleEditorStateChange(\n        EditorState.set(editorState, {\n          currentContent: convertFromRaw(currentContent),\n          /**\n           * following solution is implemented to get the direction map for the editor\n           * with current content. Draftjs has got an issue with direction map.\n           * see issue : https://github.com/facebook/draft-js/issues/1820\n           */\n          directionMap: EditorState.createWithContent(\n            convertFromRaw(currentContent)\n          ).getDirectionMap(),\n        })\n      );\n    }\n    return handleEditorStateChange(EditorState.createEmpty(compositeDecorator));\n  }, [config.value]);\n  const fileInput = React.useRef(null);\n  const _openFilePrompt = () => fileInput.current.click();\n  const _createAtomicBlockEntity = (command, data) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      command,\n      \"IMMUTABLE\",\n      { ...data }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(\n      editorState,\n      { currentContent: contentStateWithEntity },\n      \"create-entity\"\n    );\n    handleEditorStateChange(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n  };\n  /**\n   * this function allows this component user to define own link generator.\n   * usefull if someone wants to preprocess a file through a backend before\n   * using as am image src or achor href\n   * @param {*} metaData\n   * @returns {Promise}\n   */\n  const generateLink = async (metaData) => {\n    if (!config.linkGeneratorFn || typeof config.linkGeneratorFn !== \"function\")\n      return null;\n    return config.linkGeneratorFn(metaData);\n  };\n  /**\n   * this function updates editors state for the current instance of the component\n   * @param {EditorState} editorState\n   */\n  const handleEditorStateChange = (editorState) => {\n    const contentState = editorState.getCurrentContent();\n    setEditorState(editorState);\n    // console.log(JSON.stringify(convertToRaw(contentState)))\n    config.onDataStructureChange(JSON.stringify(convertToRaw(contentState)));\n  };\n  const handleKeyCommand = (command, editorState) => {\n    let newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleEditorStateChange(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n  const _handleFiles = async (files) => {\n    if (!config.handleUpload)\n      return console.log(\"Uploader function not specified\");\n    let areImages = files.every((file) => file.type.split(\"/\")[0] === \"image\");\n    /** todo: check file size here */\n    if (!areImages) return console.log(\"All files has to be images\");\n    try {\n      let storageInformations = await Promise.all(\n        files.map((file) => config.handleUpload(file))\n      );\n      console.log(storageInformations);\n      if (!storageInformations.every((storageInfo) => storageInfo))\n        console.log(\"one or mutiple files don't have storage info\");\n      storageInformations.map((storageInfo) =>\n        _createAtomicBlockEntity(ENTITY_NAME.IMAGE, {\n          storageInfo,\n        })\n      );\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  const _handleFileInputChange = (e) => {\n    e.preventDefault();\n    let files = e.target.files;\n    _handleFiles(Array.from(files));\n  };\n  const getFileInputProps = () => ({\n    ref: fileInput,\n    onChange: _handleFileInputChange,\n  });\n  const _atomicEntityController = {\n    [ENTITY_NAME.IMAGE]: _openFilePrompt,\n    [ENTITY_NAME.LINK]: () =>\n      handleEditorStateChange(handleCreateLink(editorState)),\n    [ENTITY_NAME.DIVIDER]: () =>\n      _createAtomicBlockEntity(ENTITY_NAME.DIVIDER, {}),\n    [ENTITY_NAME.MENTION]: () => {},\n    [ENTITY_NAME.CHECKLIST]: () => {\n      _createAtomicBlockEntity(ENTITY_NAME.CHECKLIST, {});\n    },\n  };\n  const _buttonHandlers = {\n    [ELEMENT_TYPES.INLINE_DEFAULT]: (command) =>\n      handleEditorStateChange(\n        RichUtils.toggleInlineStyle(editorState, command)\n      ),\n    [ELEMENT_TYPES.BLOCK_DEFAULT]: (command) =>\n      handleEditorStateChange(RichUtils.toggleBlockType(editorState, command)),\n    [ELEMENT_TYPES.ATOMIC_ENTITY]: (command) => {\n      _atomicEntityController[command]();\n    },\n  };\n  const handleToolClick = (tool, e) => {\n    e.preventDefault();\n    if (!editorState.getSelection().getHasFocus()) return null;\n    if (!tool?.element) return null;\n    _buttonHandlers[tool.element](tool.style);\n  };\n  const handleDroppedFiles = (selection, files) => _handleFiles(files);\n  const handlePastedFiles = (files) => _handleFiles(files);\n  const handleMentionSelect = (\n    contentState,\n    blockKey,\n    position,\n    mentionData\n  ) => {\n    let selectionState = SelectionState.createEmpty(blockKey);\n    let newContentState = contentState.createEntity(\n      ENTITY_NAME.MENTION,\n      \"IMMUTABLE\",\n      {\n        ...mentionData,\n      }\n    );\n    let entityKey = newContentState.getLastCreatedEntityKey();\n    newContentState = Modifier.replaceText(\n      contentState,\n      selectionState.merge({\n        // The starting position of the range to be replaced.\n        anchorOffset: position.start,\n        // The end position of the range to be replaced.\n        focusOffset: position.end,\n      }),\n      mentionData.mention,\n      editorState.getCurrentInlineStyle(),\n      entityKey\n    );\n    handleEditorStateChange(\n      /**\n       * in following solution we had to use moveFocusToEnd() and the force the\n       * selecion back to replaced text from  new content through forceSelection().\n       * This creates an effect that the cursor is at the end of mentioend name.\n       * Draftjs has got an issue with cursor positioning with entity and modifier.\n       * see issue : https://github.com/facebook/draft-js/issues/627\n       *\n       * otherwise expected behaviour is to only do an EditorState.set() to put the\n       * mentioned entity in the editor in the identified selection state starting with @.\n       */\n      EditorState.forceSelection(\n        EditorState.moveFocusToEnd(\n          EditorState.set(editorState, { currentContent: newContentState })\n        ),\n        newContentState.getSelectionAfter()\n      )\n    );\n  };\n  const forceFocusEditorEnd = (e) => {\n    e?.preventDefault && e.preventDefault();\n    editorRef.current.editor?.focus();\n    handleEditorStateChange(EditorState.moveFocusToEnd(editorState));\n  };\n  return {\n    editorRef,\n    editorState,\n    computedPosForMentionSuggestions,\n    focusedForEditing,\n    getFileInputProps,\n    generateLink,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleEditorStateChange,\n    handleKeyCommand,\n    handleToolClick,\n    forceFocusEditorEnd,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n    activateEditor,\n    deactivateEditor,\n  };\n}\n","import Mention from \"./Mention\"\nimport { mentionStrategy } from \"./mentionStrategy\"\nexport const mentionDecorator = {\n  strategy: mentionStrategy,\n  component: Mention,\n}","import { useEffect, useContext, useCallback, useRef } from \"react\";\nimport { TextEditorContext } from \"../../Context\";\nimport MentionSuggestions from \"./Suggestions/Index\";\nexport default function Mention(props) {\n  let mentionInputRef = useRef(null);\n  let {\n    editorRef,\n    mentionSuggestions,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n  } = useContext(TextEditorContext);\n  const computeStylePos = useCallback(() => {\n    const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n    let leftSpace =\n      editorRect.width - mentionInputRef.current.offsetLeft < 240\n        ? mentionInputRef.current.offsetLeft - 230\n        : mentionInputRef.current.offsetLeft;\n    return {\n      left: leftSpace,\n      top: mentionInputRef.current.offsetTop,\n      display: \"block\",\n    };\n  }, []);\n  const hideSuggestions = useCallback(() => {\n    return {\n      display: \"none\",\n    };\n  }, []);\n  useEffect(() => {\n    if (mentionInputRef.current)\n      updateComputedPosForMentionSuggestions(computeStylePos());\n  }, []);\n  function retriveEntityData() {\n    if (!props.entityKey) return null;\n    const entity = props.contentState.getEntity(props.entityKey);\n    return { ...entity?.getData() };\n  }\n  return (\n    <>\n      {retriveEntityData() ? (\n        <a\n          href={\"/admin/users/\" + retriveEntityData()._id}\n          className=\"text-primary\"\n        >\n          {retriveEntityData().name}\n        </a>\n      ) : (\n        <span ref={mentionInputRef} className=\"\">\n          {props.children}\n        </span>\n      )}\n      <MentionSuggestions\n        suggestions={mentionSuggestions.filter((item) =>\n          item.name\n            .toLowerCase()\n            .includes(\n              props.decoratedText\n                .slice(1, props?.decoratedText?.length)\n                .toLowerCase()\n            )\n        )}\n        onSelect={({ name, profileImageUrl, _id }) => {\n          let userName = \"@\" + name.split(\" \").join(\"_\");\n          handleMentionSelect(\n            props.contentState,\n            props.blockKey,\n            { start: props.start, end: props.end },\n            { mention: userName + \" \", profileImageUrl, _id, name } // adding a trailing whitespace to create a smooth experience\n          );\n          updateComputedPosForMentionSuggestions(hideSuggestions());\n        }}\n      />\n    </>\n  );\n}\n","import HTTPSLink from \"./HTTPSLink\";\nimport { strategy } from \"./stategy\";\nexport const httpsLinkDecorator = {\n  strategy,\n  component: HTTPSLink,\n};\n","export default function HTTPSLink(props) {\n  return (\n    <a\n      href={props.decoratedText}\n      title={props.decoratedText}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {props.children}\n    </a>\n  );\n}\n","/**\n * TODO: following piece of codes are unstable and buggy need to \n * work on these before integration.\n */\nimport {\n  CompositeDecorator,\n  EditorState,\n  Modifier,\n} from \"draft-js\";\nimport { ENTITY_NAME } from \"./entityNames\";\nconst findLinkEntities = (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === ENTITY_NAME.LINK\n    );\n  }, callback);\n};\nexport const textLinkDecorator = {\n  strategy: findLinkEntities,\n  component: Link,\n};\nexport let createTextLinkDecorator = () =>\n  new CompositeDecorator([textLinkDecorator]);\nexport const handleCreateLink = (editorState) => {\n  let link = window.prompt(\"Paste the link bellow:\");\n  if (link) {\n    let linkText = window.prompt(\"Paste the link-text below:\");\n    if (linkText) {\n      const currentContent = editorState.getCurrentContent();\n      currentContent.createEntity(ENTITY_NAME.LINK, \"MUTABLE\", {\n        href: link,\n        linkText,\n      });\n      let entityKey = currentContent.getLastCreatedEntityKey();\n      const selection = editorState.getSelection();\n      const contentWithTextLinkEntity = Modifier.replaceText(\n        currentContent,\n        selection,\n        linkText,\n        null,\n        entityKey\n      );\n      const newSelectionState = selection.set(\n        \"anchorOffset\",\n        selection.getAnchorOffset() + linkText.length\n      );\n      const editorStateWithTextLinkEntity = EditorState.set(\n        editorState,\n        {\n          currentContent: contentWithTextLinkEntity,\n        },\n        \"create-entity\"\n      );\n      const editorStateWithNewSelection = EditorState.forceSelection(\n        editorStateWithTextLinkEntity,\n        newSelectionState\n      );\n      console.log(\n        newSelectionState.getAnchorOffset(),\n        \"editor selection anchor offset after link insert:\",\n        editorStateWithNewSelection.getSelection().getAnchorOffset()\n      );\n      return editorStateWithNewSelection;\n    }\n  }\n};\nexport default function Link(props) {\n  let data = props.contentState.getEntity(props.entityKey).getData();\n  if (!!data.href) {\n    return (\n      <a\n        href={data.href}\n        title={data.linkText}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {data.linkText || data.href}\n      </a>\n    );\n  }\n  return null;\n}\n","import React from \"react\";\nimport useTextEditor from \"./useTextEditor\";\nexport const TextEditorContext = React.createContext();\nconst TextEditorContextProvider = ({ children, ...rest }) => {\n  let { ...editorUtils } = useTextEditor({\n    handleUpload: rest.handleUpload || async function () {},\n    linkGeneratorFn: rest.linkGeneratorFn,\n    onDataStructureChange: rest.onDataStructureChange || function () {},\n    value: rest.value || null,\n  });\n  return (\n    <TextEditorContext.Provider\n      value={{\n        ...editorUtils,\n        mentionSuggestions: rest.mentionSuggestions || [],\n      }}\n    >\n      {children}\n    </TextEditorContext.Provider>\n  );\n};\nexport default TextEditorContextProvider;\n","import React from \"react\";\nexport default function Image(props) {\n  if (props.src || props.link) {\n    return (\n      <img\n        src={props.src || props.link}\n        alt={props.alt || props.storageInfo?.Key || \"...\"}\n        className=\"unselectable\"\n      />\n    );\n  }\n  return null;\n}\n","export default function Divider() {\n  return <hr></hr>;\n}\n","import React from \"react\";\nexport default function CheckListItem({ text }) {\n  return <React.Fragment></React.Fragment>;\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n/** block sizes are measured in percentage */\nconst partitions = [\n  0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,\n  100,\n];\nexport default function StretchBar({\n  editorRef,\n  onResizeEnd,\n  reference = \"left\",\n  currentSize = 10,\n  ...rest\n}) {\n  let [isDragging, setIsDragging] = React.useState(false);\n  let [currentlyHoverring, setCurrentlyHovering] = React.useState(currentSize);\n  /**\n   * we are getting editor bounding client rectangle to calculate\n   * styles in mutiple places for better fitting our resizing algorithm\n   */\n  const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n  /**\n   * following function generates guide positions both in pixels and percentages\n   * when user is dragging to resize\n   */\n  let getGuidePositions = () =>\n    partitions.map((part) => {\n      /**\n       * we are mapping out the partitions to it's corresponding\n       * abolute \"X\" pixels. editors left padding is added as an offset\n       * balance to all the absolute positioned guide elements.\n       */\n      let editorPaddingOffset = parseInt(\n        window\n          .getComputedStyle(\n            document.querySelector(\".draft-editor-container\"),\n            null\n          )\n          .getPropertyValue(\"padding-left\")\n      );\n      let offset = (editorRect.width * part) / 100;\n      return {\n        percentage: part,\n        pixels: Math.ceil(offset),\n      };\n    });\n  let handleMouseDown = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      const doDrag = (e) => {\n        /** we are copying the partitions constant so action array is not muted */\n        let partitionsCopy = [...partitions];\n        setIsDragging(true);\n        /** the algorithm finds the closed partiion to the current cursor\n         * and sorts the closed at the begining of the array.\n         * --------------------------------------------------------------\n         * caution: do not use e.offesetX (because event.offsetX changes depending on hovering element)\n         * alway good to calculate the offset value\n         */\n        let fullLength =\n          reference === \"center\" ? editorRect.width / 2 : editorRect.width;\n        let refLine =\n          reference === \"center\"\n            ? editorRect.left + editorRect.width / 2\n            : reference === \"end\"\n            ? editorRect.left + editorRect.width\n            : editorRect.left;\n        let calculatedOffsetX = parseInt(Math.abs(e.clientX - refLine));\n        let needle = parseInt((calculatedOffsetX / fullLength) * 100);\n        partitionsCopy.sort((a, b) => {\n          return Math.abs(needle - a) - Math.abs(needle - b);\n        });\n        /** we pick the closest partition position as the reszied to data */\n        let resizedTo = partitionsCopy[0];\n        setCurrentlyHovering(resizedTo);\n        let createdEvent = { partition: resizedTo };\n        onResizeEnd && onResizeEnd(createdEvent);\n        let entityKey = rest.block.getEntityAt(0);\n        rest.contentState.mergeEntityData(entityKey, { size: resizedTo });\n      };\n      const stopDrag = () => {\n        setIsDragging(false);\n        document.removeEventListener(\"mousemove\", doDrag, false);\n        document.removeEventListener(\"mouseup\", stopDrag, false);\n        /**\n         * - handle drag state\n         * - handle resized data\n         */\n      };\n      document.addEventListener(\"mousemove\", doDrag, false);\n      document.addEventListener(\"mouseup\", stopDrag, false);\n    },\n    [onResizeEnd]\n  );\n  return (\n    <>\n      <div\n        className=\"d-inline-block p-2 unselectable\"\n        style={{ cursor: \"col-resize\" }}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"bg-primary rounded resize-bar\"></div>\n      </div>\n      {/**\n       * follwing portion is rendering the guide elements\n       */}\n      {isDragging && (\n        <div className=\"resize-guides-container position-absolute \">\n          {getGuidePositions().map((guide) => {\n            return (\n              <div\n                key={guide.pixels}\n                className={classnames(\n                  \"resize-guide position-absolute rounded\",\n                  {\n                    \"bg-info\":\n                      /** match if alligned at left/start  */\n                      (reference === \"start\" &&\n                        guide.percentage === currentlyHoverring) ||\n                      /** match if alligned at right/end  */\n                      (reference === \"end\" &&\n                        100 - guide.percentage === currentlyHoverring),\n                  }\n                )}\n                style={{\n                  left: guide.pixels,\n                }}\n              ></div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n}\n","import { Button } from \"reactstrap\";\nimport React, { useCallback } from \"react\";\nimport { ENTITY_NAME } from \"../entityNames\";\nimport classNames from \"classnames\";\nconst alignTools = [\n  {\n    label: \"Align left\",\n    style: ENTITY_NAME.ALIGN_LEFT,\n    icon: \"fa-solid fa-align-left\",\n  },\n  {\n    label: \"Align center\",\n    style: ENTITY_NAME.ALIGN_CENTER,\n    icon: \"fa-solid fa-align-justify\",\n  },\n  {\n    label: \"Align right\",\n    style: ENTITY_NAME.ALIGN_RIGHT,\n    icon: \"fa-solid fa-align-right\",\n  },\n];\nexport default function Aligner({ editorRef, onAlignmentChange, ...rest }) {\n  let handleAlignment = useCallback(\n    ({ alignment }) => {\n      onAlignmentChange && onAlignmentChange({ alignment });\n      let entityKey = rest.block.getEntityAt(0);\n      rest.contentState.mergeEntityData(entityKey, { alignment: alignment });\n    },\n    [onAlignmentChange]\n  );\n  return (\n    <div className=\"d-inline-block shadow-md rounded mb-1\">\n      {alignTools.map((tool) => {\n        return (\n          <Button\n            title={tool?.label}\n            type=\"button\"\n            className={classNames(\"btn btn-icon m-0 text-muted\", {})}\n            key={tool?.style}\n            onClick={(e) => handleAlignment({ alignment: tool?.style })}\n          >\n            {tool.icon ? <i className={tool.icon} /> : tool?.label}\n          </Button>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport StretchBar from \"./StretchBar\";\nimport Aligner from \"./Aligner\";\nimport { ENTITY_NAME } from \"../entityNames\";\nexport default function Resizer({ children, ...rest }) {\n  let [isActive, setIsActive] = React.useState(false);\n  let toggleIsActive = () => setIsActive((curret) => !curret);\n  let [currentSize, setCurrentSize] = React.useState(rest.size || 30);\n  let [alignment, setAlignment] = React.useState(\n    rest.alignment || ENTITY_NAME.ALIGN_LEFT\n  );\n  let alignementClasses = () => ({\n    \"justify-content-start\": alignment === \"start\",\n    \"justify-content-center\": alignment === \"center\",\n    \"justify-content-end\": alignment === \"end\",\n  });\n  return (\n    <>\n      {isActive && alignment && (\n        <div className={classnames(\"d-flex\", alignementClasses())}>\n          <Aligner\n            onAlignmentChange={(e) => setAlignment(e.alignment)}\n            {...rest}\n          />\n        </div>\n      )}\n      <div\n        className={classnames(\"d-flex align-items-center position-relative\", alignementClasses())}\n      >\n        {isActive && alignment !== \"start\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n        <div\n          className={classnames(\n            \"d-inline-block rounded resize-container unselectable\",\n            {\n              \"resize-focused\": isActive,\n              \"w-10\": currentSize === 10,\n              \"w-15\": currentSize === 15,\n              \"w-20\": currentSize === 20,\n              \"w-25\": currentSize === 25,\n              \"w-30\": currentSize === 30,\n              \"w-35\": currentSize === 35,\n              \"w-40\": currentSize === 40,\n              \"w-45\": currentSize === 45,\n              \"w-50\": currentSize === 50,\n              \"w-55\": currentSize === 55,\n              \"w-60\": currentSize === 60,\n              \"w-65\": currentSize === 65,\n              \"w-70\": currentSize === 70,\n              \"w-75\": currentSize === 75,\n              \"w-80\": currentSize === 80,\n              \"w-85\": currentSize === 85,\n              \"w-90\": currentSize === 90,\n              \"w-95\": currentSize === 95,\n              \"w-100\": currentSize === 100,\n            }\n          )}\n          onClick={toggleIsActive}\n        >\n          {children}\n        </div>\n        {isActive && alignment !== \"end\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            currentSize={currentSize}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Image from \"./Image\";\nimport Link from \"./Link\";\nimport Divider from \"./Divider\";\nimport CheckListItem from \"./CheckListItem\";\nimport { ENTITY_NAME } from \"./entityNames\";\nimport Resizer from \"./ResizeTool/Index\";\n\nexport default function Media({ type, data, editorControllers, ...rest }) {\n  let media = null;\n  let toolProperties = { ...data, ...editorControllers, ...rest };\n  if (type === ENTITY_NAME.IMAGE) {\n    media = (\n      <Resizer {...toolProperties}>\n        <Image {...data} />\n      </Resizer>\n    );\n  }\n  if (type === ENTITY_NAME.DIVIDER) {\n    media = <Divider {...data} />;\n  }\n  if (type === ENTITY_NAME.CHECKLIST) {\n    media = <CheckListItem {...data} />;\n  }\n  return media;\n}\n","import React, { useContext } from \"react\";\nimport usePreRenderProcessing from \"./usePreRenderProcessing\";\nimport { TextEditorContext } from \"../Context\";\nimport Media from \"./Media\";\nexport const editorMediaBlockRenderer = (block) => {\n  if (block.getType() === \"atomic\") {\n    return {\n      component: ProcessedMedia,\n      editable: false,\n    };\n  }\n  return null;\n};\nconst ProcessedMedia = (props) => {\n  const entityKey = props.block.getEntityAt(0);\n  const entity = entityKey && props.contentState.getEntity(entityKey);\n  const type = entity?.getType();\n  const { generateLink, ...rest } = useContext(TextEditorContext);\n  let processedResults = usePreRenderProcessing({\n    generateLink,\n    ...entity?.getData(),\n  });\n  return (\n    <Media\n      type={type}\n      data={{\n        ...entity?.getData(),\n        ...processedResults,\n      }}\n      editorControllers={{ ...rest }}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport noImagePlaceHolder from \"assets/img/default-avatar.png\";\nexport default function usePreRenderProcessing(config) {\n  let [link, setLink] = React.useState(config.src);\n  React.useEffect(() => {\n    async function _prepareSource() {\n      /**\n       * we are trying to generate the link with some meta data as a second step\n       * if src is not provided. if the data can't generate link it will render\n       * the empty placeholder. this feature is usefull if someone wants to generate \n       * image src/link based on runtime thorugh a backend server.\n       */\n      if (!config.src) {\n        try {\n          if (!config.generateLink || typeof config.generateLink !== \"function\")\n            throw Error(\"link gnerator function must be supplied\");\n          let link = await config.generateLink(config.storageInfo);\n          if (!link)\n            throw new Error(\n              \"link generator function must return a valid link or else provide a valid  image source\"\n            );\n          setLink(link);\n        } catch (err) {\n          setLink(noImagePlaceHolder);\n          console.log(err);\n        }\n      }\n    }\n    _prepareSource();\n    return () => {};\n  }, [config.generateLink]);\n  return {\n    link,\n  };\n}\n","import React from \"react\";\nimport { Editor } from \"draft-js\";\nimport { TextEditorContext } from \"./Context\";\nimport { editorMediaBlockRenderer } from \"./entities/editorMediaBlockRenderer\";\nexport default function TextEditor({ readOnly = false, ...props }) {\n  const {\n    editorRef,\n    editorState,\n    handleEditorStateChange,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleKeyCommand,\n    activateEditor,\n    deactivateEditor,\n  } = React.useContext(TextEditorContext);\n  return (\n    <>\n      <Editor\n        ref={editorRef}\n        blockRendererFn={editorMediaBlockRenderer}\n        placeholder={props.placeholder}\n        onChange={handleEditorStateChange}\n        editorState={editorState}\n        spellCheck={true}\n        handleKeyCommand={handleKeyCommand}\n        handleDroppedFiles={handleDroppedFiles}\n        handlePastedFiles={handlePastedFiles}\n        readOnly={readOnly}\n        onFocus={activateEditor}\n        onBlur={deactivateEditor}\n      />\n    </>\n  );\n}\n","import { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\n\nexport const INLINE_TYPES = [\n  {\n    label: \"Underline\",\n    style: \"UNDERLINE\",\n    icon: \"fa-solid fa-underline\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Bold\",\n    style: \"BOLD\",\n    icon: \"fa-solid fa-bold\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Italic\",\n    style: \"ITALIC\",\n    icon: \"fa-solid fa-italic\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Strike through\",\n    style: \"STRIKETHROUGH\",\n    icon: \"fa-solid fa-strikethrough\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n];\nexport const BLOCK_TYPES = [\n  {\n    label: \"Header\",\n    style: \"header-three\",\n    icon: \"fa-solid fa-heading\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"UL\",\n    style: \"unordered-list-item\",\n    icon: \"fa-solid fa-list\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"OL\",\n    style: \"ordered-list-item\",\n    icon: \"fa-solid fa-list-ol\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Blockquote\",\n    style: \"blockquote\",\n    icon: \"fa-solid fa-quote-left\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Code block\",\n    style: \"code-block\",\n    icon: \"fa-solid fa-code\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  // {\n  //   lebel: \"Align left\",\n  //   style: \"editor-alignment-left\",\n  //   icon: \"fa-solid fa-align-left\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align center\",\n  //   style: \"editor-alignment-center\",\n  //   icon: \"fa-solid fa-align-center\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align right\",\n  //   style: \"editor-alignment-right\",\n  //   icon: \"fa-solid fa-align-right\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align justify\",\n  //   style: \"editor-alignment-justify\",\n  //   icon: \"fa-solid fa-align-justify\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n];\nexport const ENTITY_TYPES = [\n  // {\n  //   label: \"Link\",\n  //   style: ENTITY_NAME.LINK,\n  //   icon: \"fa-solid fa-link\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Image\",\n    style: ENTITY_NAME.IMAGE,\n    icon: \"fa-solid fa-images\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n  // {\n  //   label: \"Mention\",\n  //   style: ENTITY_NAME.MENTION,\n  //   icon: \"fa-solid fa-at\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  // {\n  //   lable: \"CL\",\n  //   style: ENTITY_NAME.CHECKLIST,\n  //   icon: \"fa-solid fa-list-check\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Divider\",\n    style: ENTITY_NAME.DIVIDER,\n    icon: \"fa-solid fa-minus\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n];\nconst toolType = {\n  INLINE_TYPES,\n  BLOCK_TYPES,\n  ENTITY_TYPES,\n};\n\nexport default toolType;\n","export default function ButtonSeparator(props) {\n  return <span className=\"draft-toolbar-button-separator\">|</span>;\n}\n","import React from \"react\";\nconst FilePicker = React.forwardRef((props, ref) => {\n  return (\n    <input\n      {...props}\n      ref={ref}\n      className=\"d-none\"\n      type={\"file\"}\n      accept={props.accept || \"image/*\"}\n    />\n  );\n});\nexport default FilePicker;\n","import React from \"react\";\nimport { TextEditorContext } from \"./Context\";\nimport toolTypes from \"./toolTypes\";\nimport ButtonSeparator from \"./ButtonSeparator\";\nimport { Button } from \"reactstrap\";\nimport FilePicker from \"./FilePicker\";\nimport classNames from \"classnames\";\nexport default function ToolBar(props) {\n  const { getFileInputProps, editorState, handleToolClick } =\n    React.useContext(TextEditorContext);\n  return (\n    <>\n      <FilePicker {...getFileInputProps()} />\n      {Object.keys(toolTypes).map((type, index) => {\n        return (\n          <React.Fragment key={type}>\n            {toolTypes[type]?.map((tool) => {\n              return (\n                <Button\n                  title={tool?.label}\n                  // type=\"button\"\n                  className={\"btn btn-icon text-muted m-0\"}\n                  key={tool?.style}\n                  onMouseDown={(e) => handleToolClick(tool, e)}\n                >\n                  {tool.icon ? (\n                    <i\n                      className={classNames(tool.icon, {\n                        \"text-primary\":\n                          editorState\n                            .getCurrentInlineStyle()\n                            .has(tool?.style) ||\n                          editorState\n                            ?.getCurrentContent()\n                            .getBlockForKey(\n                              editorState?.getSelection().getStartKey()\n                            )\n                            .getType() === tool?.style,\n                      })}\n                    />\n                  ) : (\n                    tool?.label\n                  )}\n                </Button>\n              );\n            })}\n            {index < Object.keys(toolTypes).length - 1 && <ButtonSeparator />}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","import React from \"react\";\nimport TextEditor from \"./TextEditor\";\nimport { TextEditorContext } from \"./Context\";\nimport ToolBar from \"./Toolbar\";\nimport classnames from \"classnames\";\nexport default function WrappedEditor(props) {\n  const { forceFocusEditorEnd, focusedForEditing } =\n    React.useContext(TextEditorContext);\n  return (\n    <div\n      className={classnames(\"draft-editor-container d-flex flex-column\", {\n        \"editor-disabled\": props.readOnly,\n        \"editor-active\": focusedForEditing,\n      })}\n    >\n      {!props.readOnly && (\n        <div>\n          <ToolBar {...props} />\n          <hr></hr>\n        </div>\n      )}\n      <TextEditor {...props} />\n      {/**\n       * following portion helps to focus on the actual text area\n       * when unedited remaing area is clicked.\n       */}\n      <div className=\"flex-grow-1\" onMouseDown={forceFocusEditorEnd}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextEditorContextProvider from \"./Context\";\nimport WrappedEditor from \"./WrappedEditor\";\nimport PropTypes from \"prop-types\";\nexport default function Index(props) {\n  return (\n    <TextEditorContextProvider {...props}>\n      <WrappedEditor {...props} />\n    </TextEditorContextProvider>\n  );\n}\nIndex.propTypes = {\n  /** pre populated contents in the editor */\n  value: PropTypes.string,\n  /** link generator function helps to  get the file links */\n  linkGeneratorFn: PropTypes.func,\n  /** helps to specify where any media resource should be stored */\n  handleUpload: PropTypes.func,\n};\n"],"names":["Object","assign","leftIcon","rightIcon","Button","prototype","props","BtnBase","_jsxs","_extends","children","_jsx","className","classNames","propTypes","PropTypes","string","Card","CardBase","CardBody","CardBodyBase","CardFooter","CardFooterBase","CardHeader","CardHeaderBase","Dropdown","DropdownBase","_ref","_objectDestructuringEmpty","_excluded","startIcon","endIcon","caret","DropdownToggle","DropdownToogleBase","_Fragment","bool","DropdownMenu","DropdownMenuBase","DropdownItem","DropdownItemBase","_ref$leftIcon","_ref$rightIcon","_ref$leftIconStyle","leftIconStyle","_ref$rightIconStyle","rightIconStyle","_objectWithoutPropertiesLoose","ImsSimpleTable","Table","striped","hover","thead","map","prop","key","classnames","length","text","tbody","_classnames","undefined","data","k","_classnames2","item","actions","arrayOf","shape","isRequired","oneOfType","number","node","ELEMENT_TYPES","ENTITY_NAME","Entry","name","profileImageUrl","_id","_ref$onSelect","onSelect","handleSelect","useCallback","e","preventDefault","src","defaultAvatar","alt","onClick","MentionSuggestions","suggestions","rest","useContext","TextEditorContext","style","computedPosForMentionSuggestions","_useContext","suggestion","index","findWithRegex","regex","contentBlock","callback","matchArr","start","getText","exec","HANDLE_REGEX","compositeDecorator","strategy","contentState","component","Mention","mentionInputRef","useRef","editorRef","mentionSuggestions","updateComputedPosForMentionSuggestions","handleMentionSelect","_editorRef$current","_editorRef$current$ed","left","current","editor","getBoundingClientRect","width","offsetLeft","top","offsetTop","display","hideSuggestions","retriveEntityData","entityKey","entity","getEntity","getData","useEffect","computeStylePos","href","ref","filter","toLowerCase","includes","decoratedText","slice","_props$decoratedText","userName","split","join","blockKey","end","mention","HTTPSLink","title","target","rel","findEntityRanges","character","getType","linkText","React","createContext","TextEditorContextProvider","useTextEditor","config","_atomicEntityControll","_buttonHandlers2","useState","EditorState","createEmpty","editorState","_React$useState","setEditorState","focusedForEditing","setFocusedForEditing","_useState","_React$useState2","setComputedPosForMentionSuggestions","value","currentContent","JSON","parse","err","console","log","handleEditorStateChange","createWithContent","ContentState","createFromText","set","convertFromRaw","directionMap","getDirectionMap","fileInput","_createAtomicBlockEntity","command","contentStateWithEntity","getCurrentContent","createEntity","getLastCreatedEntityKey","newEditorState","AtomicBlockUtils","insertAtomicBlock","onDataStructureChange","stringify","convertToRaw","_handleFiles","files","handleUpload","Promise","resolve","areImages","every","file","type","body","recover","result","all","storageInformations","storageInfo","then","reject","Array","from","_atomicEntityController","click","link","window","prompt","selection","getSelection","Modifier","replaceText","newSelectionState","getAnchorOffset","contentWithTextLinkEntity","editorStateWithNewSelection","forceSelection","editorStateWithTextLinkEntity","handleCreateLink","_buttonHandlers","RichUtils","toggleInlineStyle","toggleBlockType","getFileInputProps","onChange","_handleFileInputChange","generateLink","metaData","linkGeneratorFn","handleDroppedFiles","handlePastedFiles","handleKeyCommand","newState","handleToolClick","tool","getHasFocus","element","forceFocusEditorEnd","focus","moveFocusToEnd","position","mentionData","selectionState","SelectionState","newContentState","merge","anchorOffset","focusOffset","getCurrentInlineStyle","getSelectionAfter","activateEditor","deactivateEditor","editorUtils","_useTextEditor","Provider","Image","_props$storageInfo","Key","Divider","CheckListItem","Fragment","partitions","StretchBar","onResizeEnd","reference","_ref$reference","currentSize","_ref$currentSize","isDragging","setIsDragging","currentlyHoverring","setCurrentlyHovering","editorRect","handleMouseDown","doDrag","partitionsCopy","fullLength","calculatedOffsetX","parseInt","Math","abs","clientX","needle","sort","a","b","resizedTo","partition","block","getEntityAt","mergeEntityData","size","document","addEventListener","stopDrag","removeEventListener","cursor","onMouseDown","getGuidePositions","part","getComputedStyle","querySelector","getPropertyValue","percentage","pixels","ceil","guide","alignTools","label","icon","Aligner","onAlignmentChange","handleAlignment","_ref2","alignment","Resizer","isActive","setIsActive","setCurrentSize","setAlignment","alignementClasses","curret","Media","media","toolProperties","editorControllers","editorMediaBlockRenderer","ProcessedMedia","editable","setLink","processedResults","_catch","noImagePlaceHolder","_prepareSource","TextEditor","readOnly","_ref$readOnly","Editor","_React$useContext","blockRendererFn","placeholder","spellCheck","onFocus","onBlur","INLINE_TYPES","toolType","BLOCK_TYPES","ENTITY_TYPES","ButtonSeparator","FilePicker","forwardRef","accept","ToolBar","keys","toolTypes","_toolTypes$type","has","getBlockForKey","getStartKey","WrappedEditor","Index","func"],"mappings":"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"}