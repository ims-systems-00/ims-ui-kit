{"version":3,"file":"ims-ui-kit.modern.js","sources":["../src/components/Buttons/BtnBase.jsx","../src/components/Cards/CardBase.jsx","../src/components/Cards/CardBodyBase.jsx","../src/components/Cards/CardFooterBase.jsx","../src/components/Cards/CardHeaderBase.jsx","../src/components/Dropdowns/DropdownBase.jsx","../src/components/Dropdowns/DropdownToggleBase.jsx","../src/components/Dropdowns/DropdownMenuBase.jsx","../src/components/Dropdowns/DropdownItemBase.jsx","../src/components/Table/ImsSimpleTable.jsx","../src/components/TextEditor/elementTypes.js","../src/components/TextEditor/entities/entityNames.js","../src/components/TextEditor/entities/Mentions/Suggestions/Entry.jsx","../src/components/TextEditor/entities/Mentions/Suggestions/Index.jsx","../src/components/TextEditor/entities/utils/findWithRegex.js","../src/components/TextEditor/entities/Mentions/mentionStrategy.js","../src/components/TextEditor/entities/HttpsLink/stategy.js","../src/components/TextEditor/useTextEditor.js","../src/components/TextEditor/entities/Mentions/index.js","../src/components/TextEditor/entities/Mentions/Mention.jsx","../src/components/TextEditor/entities/HttpsLink/index.js","../src/components/TextEditor/entities/HttpsLink/HTTPSLink.jsx","../src/components/TextEditor/entities/Link.jsx","../src/components/TextEditor/Context.jsx","../src/components/TextEditor/entities/Image.jsx","../src/components/TextEditor/entities/Divider.jsx","../src/components/TextEditor/entities/CheckListItem.jsx","../src/components/TextEditor/entities/ResizeTool/StretchBar.jsx","../src/components/TextEditor/entities/ResizeTool/Aligner.jsx","../src/components/TextEditor/entities/ResizeTool/Index.jsx","../src/components/TextEditor/entities/Media.jsx","../src/components/TextEditor/entities/editorMediaBlockRenderer.js","../src/components/TextEditor/entities/usePreRenderProcessing.js","../src/components/TextEditor/TextEditor.jsx","../src/components/TextEditor/toolTypes.js","../src/components/TextEditor/ButtonSeparator.jsx","../src/components/TextEditor/FilePicker.jsx","../src/components/TextEditor/Toolbar.jsx","../src/components/TextEditor/WrappedEditor.jsx","../src/components/TextEditor/Index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet BtnBaseProps = Object.assign(\n  {\n    leftIcon: \"\",\n    rightIcon: \"\",\n  },\n  Button.prototype.props\n);\n\n/**\n *\n * @param {BtnBaseProps} props\n * @returns\n */\nconst BtnBase = (props) => {\n  return (\n    <Button {...props}>\n      {props.leftIcon ? (\n        <i className={classNames(props.leftIcon, \"me-2\")} />\n      ) : null}\n      {props.children}\n      {props.rightIcon ? (\n        <i className={classNames(props.rightIcon, \"ms-2\")} />\n      ) : null}\n    </Button>\n  );\n};\n\nBtnBase.propTypes = {\n  leftIcon: PropTypes.string,\n  rightIcon: PropTypes.string,\n  ...(Button.propTypes && Button.propTypes),\n};\n\nexport default BtnBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBaseProps = Object.assign({}, Card.prototype.props);\n\n/**\n *\n * @param {CardBaseProps} props\n * @returns\n */\nconst CardBase = (props) => {\n  return <Card {...props}>{props.children}</Card>;\n};\n\nCardBase.propTypes = {\n  ...(Card.propTypes && Card.propTypes),\n};\n\nexport default CardBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardBody } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardBodyBaseProps = Object.assign({}, CardBody.prototype.props);\n\n/**\n *\n * @param {CardBodyBaseProps} props\n * @returns\n */\nconst CardBodyBase = (props) => {\n  return <CardBody {...props}>{props.children}</CardBody>;\n};\n\nCardBodyBase.propTypes = {\n  ...(CardBody.propTypes && CardBody.propTypes),\n};\n\nexport default CardBodyBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardFooter } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardFooterBaseProps = Object.assign({}, CardFooter.prototype.props);\n\n/**\n *\n * @param {CardFooterBaseProps} props\n * @returns\n */\nconst CardFooterBase = (props) => {\n  return <CardFooter {...props}>{props.children}</CardFooter>;\n};\n\nCardFooterBase.propTypes = {\n  ...(CardFooter.propTypes && CardFooter.propTypes),\n};\n\nexport default CardFooterBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardHeader } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nlet CardHeaderBaseProps = Object.assign({}, CardHeader.prototype.props);\n\n/**\n *\n * @param {CardHeaderBaseProps} props\n * @returns\n */\nconst CardHeaderBase = (props) => {\n  return <CardHeader {...props}>{props.children}</CardHeader>;\n};\n\nCardHeaderBase.propTypes = {\n  ...(CardHeader.propTypes && CardHeader.propTypes),\n};\n\nexport default CardHeaderBase;\n","import React from \"react\";\nimport { Dropdown } from \"reactstrap\";\nlet DropdownBaseProps = Object.assign({}, Dropdown.prototype.props);\n\n/**\n *\n * @param {DropdownBaseProps} props\n * @returns\n */\nconst DropdownBase = ({ ...props }) => {\n  return <Dropdown {...props}>{props.children}</Dropdown>;\n};\n\nDropdownBase.propTypes = {\n  ...(Dropdown.propTypes && Dropdown.propTypes),\n};\nexport default DropdownBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DropdownToggle } from \"reactstrap\";\n\nlet DropdownToogleBaseProps = Object.assign(\n  {\n    startIcon: \"\",\n    endIcon: \"\",\n    caret: true,\n  },\n  DropdownToggle.prototype.props\n);\n\n/**\n *\n * @param {DropdownToogleBaseProps} props\n * @returns\n */\n\nconst DropdownToogleBase = ({ caret, ...props }) => {\n  return (\n    <>\n      <DropdownToggle\n        caret={props.startIcon || props.endIcon ? false : props.caret}\n        {...props}\n      >\n        {props.startIcon && (\n          <i className={classNames(props.startIcon, \"me-2\")}></i>\n        )}\n        {props.children}\n        {props.endIcon && <i className={classNames(props.endIcon, \"ms-2\")}></i>}\n      </DropdownToggle>\n    </>\n  );\n};\n\nDropdownToogleBase.propTypes = {\n  startIcon: PropTypes.string,\n  endIcon: PropTypes.string,\n  caret: PropTypes.bool,\n  ...(DropdownToggle.propTypes && DropdownToggle.propTypes),\n};\n\nexport default DropdownToogleBase;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { DropdownMenu } from \"reactstrap\";\n\nlet DropdownMenuBaseProps = Object.assign({}, DropdownMenu.prototype.props);\n\n/**\n *\n * @param {DropdownMenuBaseProps} props\n * @returns\n */\nconst DropdownMenuBase = ({ ...props }) => {\n  return <DropdownMenu {...props}>{props.children}</DropdownMenu>;\n};\n\nDropdownMenuBase.propTypes = {\n  ...(DropdownMenu.propTypes && DropdownMenu.propTypes),\n};\nexport default DropdownMenuBase;\n","import React from \"react\";\nimport { DropdownItem } from \"reactstrap\";\nlet DropdownItemBaseProps = Object.assign({}, DropdownItem.prototype.props);\n\n/**\n *\n * @param {DropdownItemBaseProps} props\n * @returns\n */\nconst DropdownItemBase = ({\n  leftIcon = \"\",\n  rightIcon = \"\",\n  leftIconStyle = \"text-secondary\",\n  rightIconStyle = \"text-secondary\",\n  ...props\n}) => {\n  return (\n    <DropdownItem {...props} className=\"d-flex justify-content-between align-items-center\">\n      <span>\n        {leftIcon && <i className={`${leftIcon} ${leftIconStyle} me-2`} />}\n        {props.children}\n      </span>\n      {rightIcon && <i className={`${rightIcon} ${rightIconStyle}`} />}\n    </DropdownItem>\n  );\n};\n\nDropdownItemBase.propTypes = {\n  ...(DropdownItem.propTypes && DropdownItem.propTypes),\n};\n\nexport default DropdownItemBase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Table } from \"reactstrap\";\n\nconst ImsSimpleTable = (props) => {\n  return (\n    <Table striped hover>\n      <thead>\n        <tr>\n          {props.thead.map((prop, key) => {\n            return (\n              <th\n                className={classnames(\"\", {\n                  \"text-right\": props.thead.length - 1 === key,\n                })}\n                key={key}\n              >\n                {prop.text}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {props.tbody.map((prop, key) => {\n          return (\n            <tr\n              className={classnames({\n                [prop.className]: prop.className !== undefined,\n              })}\n              key={key}\n            >\n              {prop.data.map((data, k) => {\n                return (\n                  <td\n                    className={classnames({\n                      [data.className]: data.className !== undefined,\n                    })}\n                    key={k}\n                  >\n                    {data.item}\n                  </td>\n                );\n              })}\n              {prop.actions && <td className=\"text-right\">{prop.actions}</td>}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nImsSimpleTable.propTypes = {\n  thead: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  tbody: PropTypes.arrayOf(\n    PropTypes.shape({\n      className: PropTypes.string,\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          className: PropTypes.string,\n          item: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.node,\n          ]).isRequired,\n        })\n      ).isRequired,\n      actions: PropTypes.node,\n    })\n  ).isRequired,\n};\n\nexport default ImsSimpleTable;\n","export const ELEMENT_TYPES = {\n  INLINE_DEFAULT: \"inline-default\",\n  BLOCK_DEFAULT: \"block-default\",\n  ATOMIC_ENTITY: \"atomic-entity\",\n};\n","export const ENTITY_NAME = {\n  IMAGE: \"image\",\n  DIVIDER: \"divider\",\n  LINK: \"link\",\n  MENTION: \"mention\",\n  CHECKLIST: \"checklist\",\n  ALIGN_LEFT: \"start\",\n  ALIGN_CENTER: \"center\",\n  ALIGN_RIGHT: \"end\",\n};\n","import { useCallback } from \"react\";\nimport defaultAvatar from \"assets/img/default-avatar.png\";\nexport default function Entry({\n  name,\n  profileImageUrl,\n  _id,\n  onSelect = () => {},\n}) {\n  let handleSelect = useCallback((e) => {\n    e.preventDefault();\n    onSelect({ name, profileImageUrl, _id });\n  });\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div className=\"avatar mb-1\">\n        <img src={profileImageUrl || defaultAvatar} alt={name} />\n      </div>\n      <div onClick={handleSelect} className=\"btn btn-link p-2 mb-1\">\n        {name}\n      </div>\n    </div>\n  );\n}\n","import { TextEditorContext } from \"components/TextEditor/Context\";\nimport { useContext } from \"react\";\nimport Entry from \"./Entry\";\nexport default function MentionSuggestions({ suggestions, ...rest }) {\n  let { computedPosForMentionSuggestions } = useContext(TextEditorContext);\n  return (\n    <>\n      {suggestions.length ? (\n        <div\n          className=\"mention-suggestions position-absolute mt-4 p-2 shadow-md\"\n          style={{ ...computedPosForMentionSuggestions }}\n        >\n          {suggestions.map((suggestion, index) => {\n            return (\n              <Entry key={suggestion.name + index} {...suggestion} {...rest} />\n            );\n          })}\n        </div>\n      ) : null}\n    </>\n  );\n}\n","export function findWithRegex(regex, contentBlock, callback) {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX = /\\B@\\w+/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function mentionStrategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import { findWithRegex } from \"../utils/findWithRegex\";\nconst HANDLE_REGEX =\n  /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n/**\n *\n * @param {*} contentBlock - draft js sends a contentBlock to handle state\n * @param {*} callback - draft js sends a callback to handle state\n * @param {*} contentState - this draft js  parameter is not utilised at the minit\n */\nexport function strategy(contentBlock, callback, contentState) {\n  findWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n","import React, { useState } from \"react\";\nimport {\n  EditorState,\n  RichUtils,\n  AtomicBlockUtils,\n  convertToRaw,\n  convertFromRaw,\n  ContentState,\n  CompositeDecorator,\n  Modifier,\n  SelectionState,\n} from \"draft-js\";\nimport { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\nimport { mentionDecorator } from \"./entities/Mentions\";\nimport { httpsLinkDecorator } from \"./entities/HttpsLink\";\nimport { textLinkDecorator, handleCreateLink } from \"./entities/Link\";\nconst compositeDecorator = new CompositeDecorator([\n  mentionDecorator,\n  httpsLinkDecorator,\n  textLinkDecorator,\n]);\nexport default function useTextEditor(config) {\n  const editorRef = React.useRef(null);\n  const [editorState, setEditorState] = React.useState(\n    EditorState.createEmpty(compositeDecorator)\n  );\n  const [focusedForEditing, setFocusedForEditing] = useState(false);\n  const [\n    computedPosForMentionSuggestions,\n    setComputedPosForMentionSuggestions,\n  ] = React.useState({ display: \"none\" });\n  const updateComputedPosForMentionSuggestions = (position) =>\n    setComputedPosForMentionSuggestions(position);\n  /**\n   * the following effect block handles if the component is being\n   * controlled by outside values.\n   */\n  const activateEditor = () => setFocusedForEditing(true);\n  const deactivateEditor = () => setFocusedForEditing(false);\n  React.useEffect(() => {\n    let currentContent;\n    try {\n      if (typeof config.value === \"string\") {\n        currentContent = JSON.parse(config.value);\n      }\n      if (typeof config.value === \"object\") {\n        currentContent = config.value;\n      }\n    } catch (err) {\n      console.log(err);\n      /**\n       * here we are handling if the content parsing failes because if preexisting\n       * plain text, we are converting that into a draft data structure for future\n       * this is usefull for handling legacy data or automatic migration to draft data\n       * structure\n       */\n      if (typeof config.value === \"string\")\n        return handleEditorStateChange(\n          EditorState.createWithContent(\n            ContentState.createFromText(config.value)\n          )\n        );\n    }\n    if (config.value || currentContent) {\n      return handleEditorStateChange(\n        EditorState.set(editorState, {\n          currentContent: convertFromRaw(currentContent),\n          /**\n           * following solution is implemented to get the direction map for the editor\n           * with current content. Draftjs has got an issue with direction map.\n           * see issue : https://github.com/facebook/draft-js/issues/1820\n           */\n          directionMap: EditorState.createWithContent(\n            convertFromRaw(currentContent)\n          ).getDirectionMap(),\n        })\n      );\n    }\n    return handleEditorStateChange(EditorState.createEmpty(compositeDecorator));\n  }, [config.value]);\n  const fileInput = React.useRef(null);\n  const _openFilePrompt = () => fileInput.current.click();\n  const _createAtomicBlockEntity = (command, data) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      command,\n      \"IMMUTABLE\",\n      { ...data }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(\n      editorState,\n      { currentContent: contentStateWithEntity },\n      \"create-entity\"\n    );\n    handleEditorStateChange(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n  };\n  /**\n   * this function allows this component user to define own link generator.\n   * usefull if someone wants to preprocess a file through a backend before\n   * using as am image src or achor href\n   * @param {*} metaData\n   * @returns {Promise}\n   */\n  const generateLink = async (metaData) => {\n    if (!config.linkGeneratorFn || typeof config.linkGeneratorFn !== \"function\")\n      return null;\n    return config.linkGeneratorFn(metaData);\n  };\n  /**\n   * this function updates editors state for the current instance of the component\n   * @param {EditorState} editorState\n   */\n  const handleEditorStateChange = (editorState) => {\n    const contentState = editorState.getCurrentContent();\n    setEditorState(editorState);\n    // console.log(JSON.stringify(convertToRaw(contentState)))\n    config.onDataStructureChange(JSON.stringify(convertToRaw(contentState)));\n  };\n  const handleKeyCommand = (command, editorState) => {\n    let newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleEditorStateChange(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n  const _handleFiles = async (files) => {\n    if (!config.handleUpload)\n      return console.log(\"Uploader function not specified\");\n    let areImages = files.every((file) => file.type.split(\"/\")[0] === \"image\");\n    /** todo: check file size here */\n    if (!areImages) return console.log(\"All files has to be images\");\n    try {\n      let storageInformations = await Promise.all(\n        files.map((file) => config.handleUpload(file))\n      );\n      console.log(storageInformations);\n      if (!storageInformations.every((storageInfo) => storageInfo))\n        console.log(\"one or mutiple files don't have storage info\");\n      storageInformations.map((storageInfo) =>\n        _createAtomicBlockEntity(ENTITY_NAME.IMAGE, {\n          storageInfo,\n        })\n      );\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  const _handleFileInputChange = (e) => {\n    e.preventDefault();\n    let files = e.target.files;\n    _handleFiles(Array.from(files));\n  };\n  const getFileInputProps = () => ({\n    ref: fileInput,\n    onChange: _handleFileInputChange,\n  });\n  const _atomicEntityController = {\n    [ENTITY_NAME.IMAGE]: _openFilePrompt,\n    [ENTITY_NAME.LINK]: () =>\n      handleEditorStateChange(handleCreateLink(editorState)),\n    [ENTITY_NAME.DIVIDER]: () =>\n      _createAtomicBlockEntity(ENTITY_NAME.DIVIDER, {}),\n    [ENTITY_NAME.MENTION]: () => {},\n    [ENTITY_NAME.CHECKLIST]: () => {\n      _createAtomicBlockEntity(ENTITY_NAME.CHECKLIST, {});\n    },\n  };\n  const _buttonHandlers = {\n    [ELEMENT_TYPES.INLINE_DEFAULT]: (command) =>\n      handleEditorStateChange(\n        RichUtils.toggleInlineStyle(editorState, command)\n      ),\n    [ELEMENT_TYPES.BLOCK_DEFAULT]: (command) =>\n      handleEditorStateChange(RichUtils.toggleBlockType(editorState, command)),\n    [ELEMENT_TYPES.ATOMIC_ENTITY]: (command) => {\n      _atomicEntityController[command]();\n    },\n  };\n  const handleToolClick = (tool, e) => {\n    e.preventDefault();\n    if (!editorState.getSelection().getHasFocus()) return null;\n    if (!tool?.element) return null;\n    _buttonHandlers[tool.element](tool.style);\n  };\n  const handleDroppedFiles = (selection, files) => _handleFiles(files);\n  const handlePastedFiles = (files) => _handleFiles(files);\n  const handleMentionSelect = (\n    contentState,\n    blockKey,\n    position,\n    mentionData\n  ) => {\n    let selectionState = SelectionState.createEmpty(blockKey);\n    let newContentState = contentState.createEntity(\n      ENTITY_NAME.MENTION,\n      \"IMMUTABLE\",\n      {\n        ...mentionData,\n      }\n    );\n    let entityKey = newContentState.getLastCreatedEntityKey();\n    newContentState = Modifier.replaceText(\n      contentState,\n      selectionState.merge({\n        // The starting position of the range to be replaced.\n        anchorOffset: position.start,\n        // The end position of the range to be replaced.\n        focusOffset: position.end,\n      }),\n      mentionData.mention,\n      editorState.getCurrentInlineStyle(),\n      entityKey\n    );\n    handleEditorStateChange(\n      /**\n       * in following solution we had to use moveFocusToEnd() and the force the\n       * selecion back to replaced text from  new content through forceSelection().\n       * This creates an effect that the cursor is at the end of mentioend name.\n       * Draftjs has got an issue with cursor positioning with entity and modifier.\n       * see issue : https://github.com/facebook/draft-js/issues/627\n       *\n       * otherwise expected behaviour is to only do an EditorState.set() to put the\n       * mentioned entity in the editor in the identified selection state starting with @.\n       */\n      EditorState.forceSelection(\n        EditorState.moveFocusToEnd(\n          EditorState.set(editorState, { currentContent: newContentState })\n        ),\n        newContentState.getSelectionAfter()\n      )\n    );\n  };\n  const forceFocusEditorEnd = (e) => {\n    e?.preventDefault && e.preventDefault();\n    editorRef.current.editor?.focus();\n    handleEditorStateChange(EditorState.moveFocusToEnd(editorState));\n  };\n  return {\n    editorRef,\n    editorState,\n    computedPosForMentionSuggestions,\n    focusedForEditing,\n    getFileInputProps,\n    generateLink,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleEditorStateChange,\n    handleKeyCommand,\n    handleToolClick,\n    forceFocusEditorEnd,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n    activateEditor,\n    deactivateEditor,\n  };\n}\n","import Mention from \"./Mention\"\nimport { mentionStrategy } from \"./mentionStrategy\"\nexport const mentionDecorator = {\n  strategy: mentionStrategy,\n  component: Mention,\n}","import { useEffect, useContext, useCallback, useRef } from \"react\";\nimport { TextEditorContext } from \"../../Context\";\nimport MentionSuggestions from \"./Suggestions/Index\";\nexport default function Mention(props) {\n  let mentionInputRef = useRef(null);\n  let {\n    editorRef,\n    mentionSuggestions,\n    updateComputedPosForMentionSuggestions,\n    handleMentionSelect,\n  } = useContext(TextEditorContext);\n  const computeStylePos = useCallback(() => {\n    const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n    let leftSpace =\n      editorRect.width - mentionInputRef.current.offsetLeft < 240\n        ? mentionInputRef.current.offsetLeft - 230\n        : mentionInputRef.current.offsetLeft;\n    return {\n      left: leftSpace,\n      top: mentionInputRef.current.offsetTop,\n      display: \"block\",\n    };\n  }, []);\n  const hideSuggestions = useCallback(() => {\n    return {\n      display: \"none\",\n    };\n  }, []);\n  useEffect(() => {\n    if (mentionInputRef.current)\n      updateComputedPosForMentionSuggestions(computeStylePos());\n  }, []);\n  function retriveEntityData() {\n    if (!props.entityKey) return null;\n    const entity = props.contentState.getEntity(props.entityKey);\n    return { ...entity?.getData() };\n  }\n  return (\n    <>\n      {retriveEntityData() ? (\n        <a\n          href={\"/admin/users/\" + retriveEntityData()._id}\n          className=\"text-primary\"\n        >\n          {retriveEntityData().name}\n        </a>\n      ) : (\n        <span ref={mentionInputRef} className=\"\">\n          {props.children}\n        </span>\n      )}\n      <MentionSuggestions\n        suggestions={mentionSuggestions.filter((item) =>\n          item.name\n            .toLowerCase()\n            .includes(\n              props.decoratedText\n                .slice(1, props?.decoratedText?.length)\n                .toLowerCase()\n            )\n        )}\n        onSelect={({ name, profileImageUrl, _id }) => {\n          let userName = \"@\" + name.split(\" \").join(\"_\");\n          handleMentionSelect(\n            props.contentState,\n            props.blockKey,\n            { start: props.start, end: props.end },\n            { mention: userName + \" \", profileImageUrl, _id, name } // adding a trailing whitespace to create a smooth experience\n          );\n          updateComputedPosForMentionSuggestions(hideSuggestions());\n        }}\n      />\n    </>\n  );\n}\n","import HTTPSLink from \"./HTTPSLink\";\nimport { strategy } from \"./stategy\";\nexport const httpsLinkDecorator = {\n  strategy,\n  component: HTTPSLink,\n};\n","export default function HTTPSLink(props) {\n  return (\n    <a\n      href={props.decoratedText}\n      title={props.decoratedText}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {props.children}\n    </a>\n  );\n}\n","/**\n * TODO: following piece of codes are unstable and buggy need to \n * work on these before integration.\n */\nimport {\n  CompositeDecorator,\n  EditorState,\n  Modifier,\n} from \"draft-js\";\nimport { ENTITY_NAME } from \"./entityNames\";\nconst findLinkEntities = (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === ENTITY_NAME.LINK\n    );\n  }, callback);\n};\nexport const textLinkDecorator = {\n  strategy: findLinkEntities,\n  component: Link,\n};\nexport let createTextLinkDecorator = () =>\n  new CompositeDecorator([textLinkDecorator]);\nexport const handleCreateLink = (editorState) => {\n  let link = window.prompt(\"Paste the link bellow:\");\n  if (link) {\n    let linkText = window.prompt(\"Paste the link-text below:\");\n    if (linkText) {\n      const currentContent = editorState.getCurrentContent();\n      currentContent.createEntity(ENTITY_NAME.LINK, \"MUTABLE\", {\n        href: link,\n        linkText,\n      });\n      let entityKey = currentContent.getLastCreatedEntityKey();\n      const selection = editorState.getSelection();\n      const contentWithTextLinkEntity = Modifier.replaceText(\n        currentContent,\n        selection,\n        linkText,\n        null,\n        entityKey\n      );\n      const newSelectionState = selection.set(\n        \"anchorOffset\",\n        selection.getAnchorOffset() + linkText.length\n      );\n      const editorStateWithTextLinkEntity = EditorState.set(\n        editorState,\n        {\n          currentContent: contentWithTextLinkEntity,\n        },\n        \"create-entity\"\n      );\n      const editorStateWithNewSelection = EditorState.forceSelection(\n        editorStateWithTextLinkEntity,\n        newSelectionState\n      );\n      console.log(\n        newSelectionState.getAnchorOffset(),\n        \"editor selection anchor offset after link insert:\",\n        editorStateWithNewSelection.getSelection().getAnchorOffset()\n      );\n      return editorStateWithNewSelection;\n    }\n  }\n};\nexport default function Link(props) {\n  let data = props.contentState.getEntity(props.entityKey).getData();\n  if (!!data.href) {\n    return (\n      <a\n        href={data.href}\n        title={data.linkText}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {data.linkText || data.href}\n      </a>\n    );\n  }\n  return null;\n}\n","import React from \"react\";\nimport useTextEditor from \"./useTextEditor\";\nexport const TextEditorContext = React.createContext();\nconst TextEditorContextProvider = ({ children, ...rest }) => {\n  let { ...editorUtils } = useTextEditor({\n    handleUpload: rest.handleUpload || async function () {},\n    linkGeneratorFn: rest.linkGeneratorFn,\n    onDataStructureChange: rest.onDataStructureChange || function () {},\n    value: rest.value || null,\n  });\n  return (\n    <TextEditorContext.Provider\n      value={{\n        ...editorUtils,\n        mentionSuggestions: rest.mentionSuggestions || [],\n      }}\n    >\n      {children}\n    </TextEditorContext.Provider>\n  );\n};\nexport default TextEditorContextProvider;\n","import React from \"react\";\nexport default function Image(props) {\n  if (props.src || props.link) {\n    return (\n      <img\n        src={props.src || props.link}\n        alt={props.alt || props.storageInfo?.Key || \"...\"}\n        className=\"unselectable\"\n      />\n    );\n  }\n  return null;\n}\n","export default function Divider() {\n  return <hr></hr>;\n}\n","import React from \"react\";\nexport default function CheckListItem({ text }) {\n  return <React.Fragment></React.Fragment>;\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n/** block sizes are measured in percentage */\nconst partitions = [\n  0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,\n  100,\n];\nexport default function StretchBar({\n  editorRef,\n  onResizeEnd,\n  reference = \"left\",\n  currentSize = 10,\n  ...rest\n}) {\n  let [isDragging, setIsDragging] = React.useState(false);\n  let [currentlyHoverring, setCurrentlyHovering] = React.useState(currentSize);\n  /**\n   * we are getting editor bounding client rectangle to calculate\n   * styles in mutiple places for better fitting our resizing algorithm\n   */\n  const editorRect = editorRef.current?.editor?.getBoundingClientRect();\n  /**\n   * following function generates guide positions both in pixels and percentages\n   * when user is dragging to resize\n   */\n  let getGuidePositions = () =>\n    partitions.map((part) => {\n      /**\n       * we are mapping out the partitions to it's corresponding\n       * abolute \"X\" pixels. editors left padding is added as an offset\n       * balance to all the absolute positioned guide elements.\n       */\n      let editorPaddingOffset = parseInt(\n        window\n          .getComputedStyle(\n            document.querySelector(\".draft-editor-container\"),\n            null\n          )\n          .getPropertyValue(\"padding-left\")\n      );\n      let offset = (editorRect.width * part) / 100;\n      return {\n        percentage: part,\n        pixels: Math.ceil(offset),\n      };\n    });\n  let handleMouseDown = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      const doDrag = (e) => {\n        /** we are copying the partitions constant so action array is not muted */\n        let partitionsCopy = [...partitions];\n        setIsDragging(true);\n        /** the algorithm finds the closed partiion to the current cursor\n         * and sorts the closed at the begining of the array.\n         * --------------------------------------------------------------\n         * caution: do not use e.offesetX (because event.offsetX changes depending on hovering element)\n         * alway good to calculate the offset value\n         */\n        let fullLength =\n          reference === \"center\" ? editorRect.width / 2 : editorRect.width;\n        let refLine =\n          reference === \"center\"\n            ? editorRect.left + editorRect.width / 2\n            : reference === \"end\"\n            ? editorRect.left + editorRect.width\n            : editorRect.left;\n        let calculatedOffsetX = parseInt(Math.abs(e.clientX - refLine));\n        let needle = parseInt((calculatedOffsetX / fullLength) * 100);\n        partitionsCopy.sort((a, b) => {\n          return Math.abs(needle - a) - Math.abs(needle - b);\n        });\n        /** we pick the closest partition position as the reszied to data */\n        let resizedTo = partitionsCopy[0];\n        setCurrentlyHovering(resizedTo);\n        let createdEvent = { partition: resizedTo };\n        onResizeEnd && onResizeEnd(createdEvent);\n        let entityKey = rest.block.getEntityAt(0);\n        rest.contentState.mergeEntityData(entityKey, { size: resizedTo });\n      };\n      const stopDrag = () => {\n        setIsDragging(false);\n        document.removeEventListener(\"mousemove\", doDrag, false);\n        document.removeEventListener(\"mouseup\", stopDrag, false);\n        /**\n         * - handle drag state\n         * - handle resized data\n         */\n      };\n      document.addEventListener(\"mousemove\", doDrag, false);\n      document.addEventListener(\"mouseup\", stopDrag, false);\n    },\n    [onResizeEnd]\n  );\n  return (\n    <>\n      <div\n        className=\"d-inline-block p-2 unselectable\"\n        style={{ cursor: \"col-resize\" }}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"bg-primary rounded resize-bar\"></div>\n      </div>\n      {/**\n       * follwing portion is rendering the guide elements\n       */}\n      {isDragging && (\n        <div className=\"resize-guides-container position-absolute \">\n          {getGuidePositions().map((guide) => {\n            return (\n              <div\n                key={guide.pixels}\n                className={classnames(\n                  \"resize-guide position-absolute rounded\",\n                  {\n                    \"bg-info\":\n                      /** match if alligned at left/start  */\n                      (reference === \"start\" &&\n                        guide.percentage === currentlyHoverring) ||\n                      /** match if alligned at right/end  */\n                      (reference === \"end\" &&\n                        100 - guide.percentage === currentlyHoverring),\n                  }\n                )}\n                style={{\n                  left: guide.pixels,\n                }}\n              ></div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n}\n","import { Button } from \"reactstrap\";\nimport React, { useCallback } from \"react\";\nimport { ENTITY_NAME } from \"../entityNames\";\nimport classNames from \"classnames\";\nconst alignTools = [\n  {\n    label: \"Align left\",\n    style: ENTITY_NAME.ALIGN_LEFT,\n    icon: \"fa-solid fa-align-left\",\n  },\n  {\n    label: \"Align center\",\n    style: ENTITY_NAME.ALIGN_CENTER,\n    icon: \"fa-solid fa-align-justify\",\n  },\n  {\n    label: \"Align right\",\n    style: ENTITY_NAME.ALIGN_RIGHT,\n    icon: \"fa-solid fa-align-right\",\n  },\n];\nexport default function Aligner({ editorRef, onAlignmentChange, ...rest }) {\n  let handleAlignment = useCallback(\n    ({ alignment }) => {\n      onAlignmentChange && onAlignmentChange({ alignment });\n      let entityKey = rest.block.getEntityAt(0);\n      rest.contentState.mergeEntityData(entityKey, { alignment: alignment });\n    },\n    [onAlignmentChange]\n  );\n  return (\n    <div className=\"d-inline-block shadow-md rounded mb-1\">\n      {alignTools.map((tool) => {\n        return (\n          <Button\n            title={tool?.label}\n            type=\"button\"\n            className={classNames(\"btn btn-icon m-0 text-muted\", {})}\n            key={tool?.style}\n            onClick={(e) => handleAlignment({ alignment: tool?.style })}\n          >\n            {tool.icon ? <i className={tool.icon} /> : tool?.label}\n          </Button>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport StretchBar from \"./StretchBar\";\nimport Aligner from \"./Aligner\";\nimport { ENTITY_NAME } from \"../entityNames\";\nexport default function Resizer({ children, ...rest }) {\n  let [isActive, setIsActive] = React.useState(false);\n  let toggleIsActive = () => setIsActive((curret) => !curret);\n  let [currentSize, setCurrentSize] = React.useState(rest.size || 30);\n  let [alignment, setAlignment] = React.useState(\n    rest.alignment || ENTITY_NAME.ALIGN_LEFT\n  );\n  let alignementClasses = () => ({\n    \"justify-content-start\": alignment === \"start\",\n    \"justify-content-center\": alignment === \"center\",\n    \"justify-content-end\": alignment === \"end\",\n  });\n  return (\n    <>\n      {isActive && alignment && (\n        <div className={classnames(\"d-flex\", alignementClasses())}>\n          <Aligner\n            onAlignmentChange={(e) => setAlignment(e.alignment)}\n            {...rest}\n          />\n        </div>\n      )}\n      <div\n        className={classnames(\"d-flex align-items-center position-relative\", alignementClasses())}\n      >\n        {isActive && alignment !== \"start\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n        <div\n          className={classnames(\n            \"d-inline-block rounded resize-container unselectable\",\n            {\n              \"resize-focused\": isActive,\n              \"w-10\": currentSize === 10,\n              \"w-15\": currentSize === 15,\n              \"w-20\": currentSize === 20,\n              \"w-25\": currentSize === 25,\n              \"w-30\": currentSize === 30,\n              \"w-35\": currentSize === 35,\n              \"w-40\": currentSize === 40,\n              \"w-45\": currentSize === 45,\n              \"w-50\": currentSize === 50,\n              \"w-55\": currentSize === 55,\n              \"w-60\": currentSize === 60,\n              \"w-65\": currentSize === 65,\n              \"w-70\": currentSize === 70,\n              \"w-75\": currentSize === 75,\n              \"w-80\": currentSize === 80,\n              \"w-85\": currentSize === 85,\n              \"w-90\": currentSize === 90,\n              \"w-95\": currentSize === 95,\n              \"w-100\": currentSize === 100,\n            }\n          )}\n          onClick={toggleIsActive}\n        >\n          {children}\n        </div>\n        {isActive && alignment !== \"end\" && (\n          <StretchBar\n            {...rest}\n            reference={alignment}\n            currentSize={currentSize}\n            onResizeEnd={(e) => setCurrentSize(e.partition)}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Image from \"./Image\";\nimport Link from \"./Link\";\nimport Divider from \"./Divider\";\nimport CheckListItem from \"./CheckListItem\";\nimport { ENTITY_NAME } from \"./entityNames\";\nimport Resizer from \"./ResizeTool/Index\";\n\nexport default function Media({ type, data, editorControllers, ...rest }) {\n  let media = null;\n  let toolProperties = { ...data, ...editorControllers, ...rest };\n  if (type === ENTITY_NAME.IMAGE) {\n    media = (\n      <Resizer {...toolProperties}>\n        <Image {...data} />\n      </Resizer>\n    );\n  }\n  if (type === ENTITY_NAME.DIVIDER) {\n    media = <Divider {...data} />;\n  }\n  if (type === ENTITY_NAME.CHECKLIST) {\n    media = <CheckListItem {...data} />;\n  }\n  return media;\n}\n","import React, { useContext } from \"react\";\nimport usePreRenderProcessing from \"./usePreRenderProcessing\";\nimport { TextEditorContext } from \"../Context\";\nimport Media from \"./Media\";\nexport const editorMediaBlockRenderer = (block) => {\n  if (block.getType() === \"atomic\") {\n    return {\n      component: ProcessedMedia,\n      editable: false,\n    };\n  }\n  return null;\n};\nconst ProcessedMedia = (props) => {\n  const entityKey = props.block.getEntityAt(0);\n  const entity = entityKey && props.contentState.getEntity(entityKey);\n  const type = entity?.getType();\n  const { generateLink, ...rest } = useContext(TextEditorContext);\n  let processedResults = usePreRenderProcessing({\n    generateLink,\n    ...entity?.getData(),\n  });\n  return (\n    <Media\n      type={type}\n      data={{\n        ...entity?.getData(),\n        ...processedResults,\n      }}\n      editorControllers={{ ...rest }}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport noImagePlaceHolder from \"assets/img/default-avatar.png\";\nexport default function usePreRenderProcessing(config) {\n  let [link, setLink] = React.useState(config.src);\n  React.useEffect(() => {\n    async function _prepareSource() {\n      /**\n       * we are trying to generate the link with some meta data as a second step\n       * if src is not provided. if the data can't generate link it will render\n       * the empty placeholder. this feature is usefull if someone wants to generate \n       * image src/link based on runtime thorugh a backend server.\n       */\n      if (!config.src) {\n        try {\n          if (!config.generateLink || typeof config.generateLink !== \"function\")\n            throw Error(\"link gnerator function must be supplied\");\n          let link = await config.generateLink(config.storageInfo);\n          if (!link)\n            throw new Error(\n              \"link generator function must return a valid link or else provide a valid  image source\"\n            );\n          setLink(link);\n        } catch (err) {\n          setLink(noImagePlaceHolder);\n          console.log(err);\n        }\n      }\n    }\n    _prepareSource();\n    return () => {};\n  }, [config.generateLink]);\n  return {\n    link,\n  };\n}\n","import React from \"react\";\nimport { Editor } from \"draft-js\";\nimport { TextEditorContext } from \"./Context\";\nimport { editorMediaBlockRenderer } from \"./entities/editorMediaBlockRenderer\";\nexport default function TextEditor({ readOnly = false, ...props }) {\n  const {\n    editorRef,\n    editorState,\n    handleEditorStateChange,\n    handleDroppedFiles,\n    handlePastedFiles,\n    handleKeyCommand,\n    activateEditor,\n    deactivateEditor,\n  } = React.useContext(TextEditorContext);\n  return (\n    <>\n      <Editor\n        ref={editorRef}\n        blockRendererFn={editorMediaBlockRenderer}\n        placeholder={props.placeholder}\n        onChange={handleEditorStateChange}\n        editorState={editorState}\n        spellCheck={true}\n        handleKeyCommand={handleKeyCommand}\n        handleDroppedFiles={handleDroppedFiles}\n        handlePastedFiles={handlePastedFiles}\n        readOnly={readOnly}\n        onFocus={activateEditor}\n        onBlur={deactivateEditor}\n      />\n    </>\n  );\n}\n","import { ELEMENT_TYPES } from \"./elementTypes\";\nimport { ENTITY_NAME } from \"./entities/entityNames\";\n\nexport const INLINE_TYPES = [\n  {\n    label: \"Underline\",\n    style: \"UNDERLINE\",\n    icon: \"fa-solid fa-underline\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Bold\",\n    style: \"BOLD\",\n    icon: \"fa-solid fa-bold\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Italic\",\n    style: \"ITALIC\",\n    icon: \"fa-solid fa-italic\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n  {\n    label: \"Strike through\",\n    style: \"STRIKETHROUGH\",\n    icon: \"fa-solid fa-strikethrough\",\n    element: ELEMENT_TYPES.INLINE_DEFAULT,\n  },\n];\nexport const BLOCK_TYPES = [\n  {\n    label: \"Header\",\n    style: \"header-three\",\n    icon: \"fa-solid fa-heading\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"UL\",\n    style: \"unordered-list-item\",\n    icon: \"fa-solid fa-list\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"OL\",\n    style: \"ordered-list-item\",\n    icon: \"fa-solid fa-list-ol\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Blockquote\",\n    style: \"blockquote\",\n    icon: \"fa-solid fa-quote-left\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  {\n    label: \"Code block\",\n    style: \"code-block\",\n    icon: \"fa-solid fa-code\",\n    element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  },\n  // {\n  //   lebel: \"Align left\",\n  //   style: \"editor-alignment-left\",\n  //   icon: \"fa-solid fa-align-left\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align center\",\n  //   style: \"editor-alignment-center\",\n  //   icon: \"fa-solid fa-align-center\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align right\",\n  //   style: \"editor-alignment-right\",\n  //   icon: \"fa-solid fa-align-right\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n  // {\n  //   lebel: \"Align justify\",\n  //   style: \"editor-alignment-justify\",\n  //   icon: \"fa-solid fa-align-justify\",\n  //   element: ELEMENT_TYPES.BLOCK_DEFAULT,\n  // },\n];\nexport const ENTITY_TYPES = [\n  // {\n  //   label: \"Link\",\n  //   style: ENTITY_NAME.LINK,\n  //   icon: \"fa-solid fa-link\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Image\",\n    style: ENTITY_NAME.IMAGE,\n    icon: \"fa-solid fa-images\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n  // {\n  //   label: \"Mention\",\n  //   style: ENTITY_NAME.MENTION,\n  //   icon: \"fa-solid fa-at\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  // {\n  //   lable: \"CL\",\n  //   style: ENTITY_NAME.CHECKLIST,\n  //   icon: \"fa-solid fa-list-check\",\n  //   element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  // },\n  {\n    label: \"Divider\",\n    style: ENTITY_NAME.DIVIDER,\n    icon: \"fa-solid fa-minus\",\n    element: ELEMENT_TYPES.ATOMIC_ENTITY,\n  },\n];\nconst toolType = {\n  INLINE_TYPES,\n  BLOCK_TYPES,\n  ENTITY_TYPES,\n};\n\nexport default toolType;\n","export default function ButtonSeparator(props) {\n  return <span className=\"draft-toolbar-button-separator\">|</span>;\n}\n","import React from \"react\";\nconst FilePicker = React.forwardRef((props, ref) => {\n  return (\n    <input\n      {...props}\n      ref={ref}\n      className=\"d-none\"\n      type={\"file\"}\n      accept={props.accept || \"image/*\"}\n    />\n  );\n});\nexport default FilePicker;\n","import React from \"react\";\nimport { TextEditorContext } from \"./Context\";\nimport toolTypes from \"./toolTypes\";\nimport ButtonSeparator from \"./ButtonSeparator\";\nimport { Button } from \"reactstrap\";\nimport FilePicker from \"./FilePicker\";\nimport classNames from \"classnames\";\nexport default function ToolBar(props) {\n  const { getFileInputProps, editorState, handleToolClick } =\n    React.useContext(TextEditorContext);\n  return (\n    <>\n      <FilePicker {...getFileInputProps()} />\n      {Object.keys(toolTypes).map((type, index) => {\n        return (\n          <React.Fragment key={type}>\n            {toolTypes[type]?.map((tool) => {\n              return (\n                <Button\n                  title={tool?.label}\n                  // type=\"button\"\n                  className={\"btn btn-icon text-muted m-0\"}\n                  key={tool?.style}\n                  onMouseDown={(e) => handleToolClick(tool, e)}\n                >\n                  {tool.icon ? (\n                    <i\n                      className={classNames(tool.icon, {\n                        \"text-primary\":\n                          editorState\n                            .getCurrentInlineStyle()\n                            .has(tool?.style) ||\n                          editorState\n                            ?.getCurrentContent()\n                            .getBlockForKey(\n                              editorState?.getSelection().getStartKey()\n                            )\n                            .getType() === tool?.style,\n                      })}\n                    />\n                  ) : (\n                    tool?.label\n                  )}\n                </Button>\n              );\n            })}\n            {index < Object.keys(toolTypes).length - 1 && <ButtonSeparator />}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","import React from \"react\";\nimport TextEditor from \"./TextEditor\";\nimport { TextEditorContext } from \"./Context\";\nimport ToolBar from \"./Toolbar\";\nimport classnames from \"classnames\";\nexport default function WrappedEditor(props) {\n  const { forceFocusEditorEnd, focusedForEditing } =\n    React.useContext(TextEditorContext);\n  return (\n    <div\n      className={classnames(\"draft-editor-container d-flex flex-column\", {\n        \"editor-disabled\": props.readOnly,\n        \"editor-active\": focusedForEditing,\n      })}\n    >\n      {!props.readOnly && (\n        <div>\n          <ToolBar {...props} />\n          <hr></hr>\n        </div>\n      )}\n      <TextEditor {...props} />\n      {/**\n       * following portion helps to focus on the actual text area\n       * when unedited remaing area is clicked.\n       */}\n      <div className=\"flex-grow-1\" onMouseDown={forceFocusEditorEnd}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextEditorContextProvider from \"./Context\";\nimport WrappedEditor from \"./WrappedEditor\";\nimport PropTypes from \"prop-types\";\nexport default function Index(props) {\n  return (\n    <TextEditorContextProvider {...props}>\n      <WrappedEditor {...props} />\n    </TextEditorContextProvider>\n  );\n}\nIndex.propTypes = {\n  /** pre populated contents in the editor */\n  value: PropTypes.string,\n  /** link generator function helps to  get the file links */\n  linkGeneratorFn: PropTypes.func,\n  /** helps to specify where any media resource should be stored */\n  handleUpload: PropTypes.func,\n};\n"],"names":["Object","assign","leftIcon","rightIcon","Button","prototype","props","BtnBase","h","className","classNames","children","propTypes","PropTypes","string","Card","CardBase","_extends","CardBody","CardBodyBase","CardFooter","CardFooterBase","CardHeader","CardHeaderBase","Dropdown","DropdownBase","_ref","_objectDestructuringEmpty","_excluded","startIcon","endIcon","caret","DropdownToggle","DropdownToogleBase","_objectWithoutPropertiesLoose","Fragment","bool","DropdownMenu","DropdownMenuBase","DropdownItem","DropdownItemBase","leftIconStyle","rightIconStyle","ImsSimpleTable","Table","striped","hover","thead","map","prop","key","classnames","length","text","tbody","undefined","data","k","item","actions","arrayOf","shape","isRequired","oneOfType","number","node","ELEMENT_TYPES","ENTITY_NAME","Entry","name","profileImageUrl","_id","onSelect","useCallback","e","preventDefault","src","defaultAvatar","alt","onClick","handleSelect","suggestions","rest","computedPosForMentionSuggestions","useContext","TextEditorContext","style","suggestion","index","findWithRegex","regex","contentBlock","callback","getText","matchArr","start","exec","HANDLE_REGEX","compositeDecorator","CompositeDecorator","strategy","contentState","component","useRef","editorRef","mentionSuggestions","updateComputedPosForMentionSuggestions","handleMentionSelect","computeStylePos","_editorRef$current","_editorRef$current$ed","left","current","editor","getBoundingClientRect","width","mentionInputRef","offsetLeft","top","offsetTop","display","hideSuggestions","entityKey","entity","getEntity","getData","useEffect","retriveEntityData","href","ref","MentionSuggestions","filter","toLowerCase","includes","decoratedText","slice","_props$decoratedText","userName","split","join","blockKey","end","mention","HTTPSLink","title","target","rel","findEntityRanges","character","getType","LINK","Link","linkText","React","createContext","useTextEditor","config","editorState","setEditorState","useState","EditorState","createEmpty","focusedForEditing","setFocusedForEditing","setComputedPosForMentionSuggestions","currentContent","value","JSON","parse","err","console","log","handleEditorStateChange","createWithContent","ContentState","createFromText","set","convertFromRaw","directionMap","getDirectionMap","fileInput","_createAtomicBlockEntity","command","contentStateWithEntity","getCurrentContent","createEntity","getLastCreatedEntityKey","newEditorState","AtomicBlockUtils","insertAtomicBlock","onDataStructureChange","stringify","convertToRaw","_handleFiles","async","handleUpload","files","every","file","type","storageInformations","Promise","all","storageInfo","_handleFileInputChange","Array","from","_atomicEntityController","ENTITY_NAME_IMAGE","click","ENTITY_NAME_LINK","link","window","prompt","selection","getSelection","Modifier","replaceText","newSelectionState","getAnchorOffset","editorStateWithTextLinkEntity","contentWithTextLinkEntity","editorStateWithNewSelection","forceSelection","handleCreateLink","ENTITY_NAME_DIVIDER","ENTITY_NAME_MENTION","ENTITY_NAME_CHECKLIST","_buttonHandlers","ELEMENT_TYPES_INLINE_DEFAULT","RichUtils","toggleInlineStyle","ELEMENT_TYPES_BLOCK_DEFAULT","toggleBlockType","ELEMENT_TYPES_ATOMIC_ENTITY","getFileInputProps","onChange","generateLink","linkGeneratorFn","metaData","handleDroppedFiles","handlePastedFiles","handleKeyCommand","newState","handleToolClick","tool","getHasFocus","element","forceFocusEditorEnd","focus","moveFocusToEnd","position","mentionData","selectionState","SelectionState","newContentState","merge","anchorOffset","focusOffset","getCurrentInlineStyle","getSelectionAfter","activateEditor","deactivateEditor","editorUtils","_useTextEditor","Provider","Image","_props$storageInfo","Key","Divider","partitions","StretchBar","onResizeEnd","reference","currentSize","isDragging","setIsDragging","currentlyHoverring","setCurrentlyHovering","editorRect","handleMouseDown","doDrag","partitionsCopy","fullLength","calculatedOffsetX","parseInt","Math","abs","clientX","needle","sort","a","b","resizedTo","partition","block","getEntityAt","mergeEntityData","size","document","removeEventListener","stopDrag","addEventListener","cursor","onMouseDown","part","getComputedStyle","querySelector","getPropertyValue","percentage","pixels","ceil","guide","alignTools","label","icon","Aligner","onAlignmentChange","handleAlignment","alignment","Resizer","isActive","setIsActive","setCurrentSize","setAlignment","alignementClasses","curret","Media","editorControllers","media","toolProperties","CheckListItem","ProcessedMedia","editable","_useContext","processedResults","usePreRenderProcessing","setLink","Error","noImagePlaceHolder","_prepareSource","TextEditor","readOnly","Editor","blockRendererFn","editorMediaBlockRenderer","placeholder","spellCheck","onFocus","onBlur","INLINE_TYPES","toolType","BLOCK_TYPES","ENTITY_TYPES","ButtonSeparator","FilePicker","forwardRef","accept","ToolBar","keys","toolTypes","_toolTypes$type","has","getBlockForKey","getStartKey","Index","TextEditorContextProvider","WrappedEditor","func"],"mappings":"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"}